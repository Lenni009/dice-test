var Wx=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var r2=Wx((Z3,Sc)=>{(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function n(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(r){if(r.ep)return;r.ep=!0;const s=n(r);fetch(r.href,s)}})();/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const gh="161",kr={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Wr={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Gv=0,Ou=1,Vv=2,Xx=3,qx=0,vd=1,gd=2,bi=3,Ji=0,Ln=1,Si=2,Yi=0,is=1,zu=2,Gu=3,Vu=4,Hv=5,dr=100,kv=101,Wv=102,Hu=103,ku=104,Xv=200,qv=201,$v=202,Yv=203,Ec=204,Tc=205,Zv=206,jv=207,Jv=208,Kv=209,Qv=210,eg=211,tg=212,ng=213,ig=214,rg=0,sg=1,ag=2,Qa=3,og=4,lg=5,cg=6,hg=7,cl=0,ug=1,fg=2,Zi=0,dg=1,pg=2,mg=3,vg=4,gg=5,yg=6,Wu="attached",xg="detached",yh=300,Ki=301,Sr=302,eo=303,to=304,ba=306,no=1e3,bn=1001,io=1002,en=1003,Ac=1004,$x=1004,Zr=1005,Yx=1005,qt=1006,qa=1007,Zx=1007,Ti=1008,jx=1008,ji=1009,_g=1010,Mg=1011,xh=1012,yd=1013,qi=1014,ti=1015,ea=1016,xd=1017,_d=1018,gr=1020,bg=1021,Un=1023,wg=1024,Sg=1025,yr=1026,cs=1027,Eg=1028,Md=1029,Tg=1030,bd=1031,wd=1033,dc=33776,pc=33777,mc=33778,vc=33779,Xu=35840,qu=35841,$u=35842,Yu=35843,Sd=36196,Zu=37492,ju=37496,Ju=37808,Ku=37809,Qu=37810,ef=37811,tf=37812,nf=37813,rf=37814,sf=37815,af=37816,of=37817,lf=37818,cf=37819,hf=37820,uf=37821,gc=36492,ff=36494,df=36495,Ag=36283,pf=36284,mf=36285,vf=36286,Cg=2200,Rg=2201,Pg=2202,ro=2300,so=2301,yc=2302,Jr=2400,Kr=2401,ao=2402,_h=2500,Ed=2501,Jx=0,Kx=1,Qx=2,Td=3e3,xr=3001,Lg=3200,Ig=3201,Rr=0,Dg=1,Xn="",on="srgb",Ci="srgb-linear",Mh="display-p3",hl="display-p3-linear",oo="linear",Gt="srgb",lo="rec709",co="p3",e_=0,Xr=7680,t_=7681,n_=7682,i_=7683,r_=34055,s_=34056,a_=5386,o_=512,l_=513,c_=514,h_=515,u_=516,f_=517,d_=518,gf=519,Ng=512,Bg=513,Ug=514,Ad=515,Fg=516,Og=517,zg=518,Gg=519,ho=35044,p_=35048,m_=35040,v_=35045,g_=35049,y_=35041,x_=35046,__=35050,M_=35042,b_="100",yf="300 es",Cc=1035,Ai=2e3,uo=2001;let Ni=class{addEventListener(e,n){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(n)===-1&&i[e].push(n)}hasEventListener(e,n){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(n)!==-1}removeEventListener(e,n){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const s=r.indexOf(n);s!==-1&&r.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const r=i.slice(0);for(let s=0,a=r.length;s<a;s++)r[s].call(this,e);e.target=null}}};const xn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Sp=1234567;const rs=Math.PI/180,ta=180/Math.PI;function qn(){const t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(xn[t&255]+xn[t>>8&255]+xn[t>>16&255]+xn[t>>24&255]+"-"+xn[e&255]+xn[e>>8&255]+"-"+xn[e>>16&15|64]+xn[e>>24&255]+"-"+xn[n&63|128]+xn[n>>8&255]+"-"+xn[n>>16&255]+xn[n>>24&255]+xn[i&255]+xn[i>>8&255]+xn[i>>16&255]+xn[i>>24&255]).toLowerCase()}function Jt(t,e,n){return Math.max(e,Math.min(n,t))}function Cd(t,e){return(t%e+e)%e}function w_(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)}function S_(t,e,n){return t!==e?(n-t)/(e-t):0}function $a(t,e,n){return(1-n)*t+n*e}function E_(t,e,n,i){return $a(t,e,1-Math.exp(-n*i))}function T_(t,e=1){return e-Math.abs(Cd(t,e*2)-e)}function A_(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*(3-2*t))}function C_(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*t*(t*(t*6-15)+10))}function R_(t,e){return t+Math.floor(Math.random()*(e-t+1))}function P_(t,e){return t+Math.random()*(e-t)}function L_(t){return t*(.5-Math.random())}function I_(t){t!==void 0&&(Sp=t);let e=Sp+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function D_(t){return t*rs}function N_(t){return t*ta}function xf(t){return(t&t-1)===0&&t!==0}function B_(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}function Rc(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}function U_(t,e,n,i,r){const s=Math.cos,a=Math.sin,o=s(n/2),l=a(n/2),c=s((e+i)/2),h=a((e+i)/2),u=s((e-i)/2),f=a((e-i)/2),d=s((i-e)/2),p=a((i-e)/2);switch(r){case"XYX":t.set(o*h,l*u,l*f,o*c);break;case"YZY":t.set(l*f,o*h,l*u,o*c);break;case"ZXZ":t.set(l*u,l*f,o*h,o*c);break;case"XZX":t.set(o*h,l*p,l*d,o*c);break;case"YXY":t.set(l*d,o*h,l*p,o*c);break;case"ZYZ":t.set(l*p,l*d,o*h,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}function Cn(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return t/4294967295;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int32Array:return Math.max(t/2147483647,-1);case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function St(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return Math.round(t*4294967295);case Uint16Array:return Math.round(t*65535);case Uint8Array:return Math.round(t*255);case Int32Array:return Math.round(t*2147483647);case Int16Array:return Math.round(t*32767);case Int8Array:return Math.round(t*127);default:throw new Error("Invalid component type.")}}const Vg={DEG2RAD:rs,RAD2DEG:ta,generateUUID:qn,clamp:Jt,euclideanModulo:Cd,mapLinear:w_,inverseLerp:S_,lerp:$a,damp:E_,pingpong:T_,smoothstep:A_,smootherstep:C_,randInt:R_,randFloat:P_,randFloatSpread:L_,seededRandom:I_,degToRad:D_,radToDeg:N_,isPowerOfTwo:xf,ceilPowerOfTwo:B_,floorPowerOfTwo:Rc,setQuaternionFromProperEuler:U_,normalize:St,denormalize:Cn};let De=class Hg{constructor(e=0,n=0){Hg.prototype.isVector2=!0,this.x=e,this.y=n}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,n){return this.x=e,this.y=n,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const n=this.x,i=this.y,r=e.elements;return this.x=r[0]*n+r[3]*i+r[6],this.y=r[1]*n+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(Jt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y;return n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this}rotateAround(e,n){const i=Math.cos(n),r=Math.sin(n),s=this.x-e.x,a=this.y-e.y;return this.x=s*i-a*r+e.x,this.y=s*r+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},Pt=class kg{constructor(e,n,i,r,s,a,o,l,c){kg.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,n,i,r,s,a,o,l,c)}set(e,n,i,r,s,a,o,l,c){const h=this.elements;return h[0]=e,h[1]=r,h[2]=o,h[3]=n,h[4]=s,h[5]=l,h[6]=i,h[7]=a,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],this}extractBasis(e,n,i){return e.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const n=e.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,r=n.elements,s=this.elements,a=i[0],o=i[3],l=i[6],c=i[1],h=i[4],u=i[7],f=i[2],d=i[5],p=i[8],g=r[0],v=r[3],m=r[6],y=r[1],x=r[4],_=r[7],b=r[2],w=r[5],S=r[8];return s[0]=a*g+o*y+l*b,s[3]=a*v+o*x+l*w,s[6]=a*m+o*_+l*S,s[1]=c*g+h*y+u*b,s[4]=c*v+h*x+u*w,s[7]=c*m+h*_+u*S,s[2]=f*g+d*y+p*b,s[5]=f*v+d*x+p*w,s[8]=f*m+d*_+p*S,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=e,n[4]*=e,n[7]*=e,n[2]*=e,n[5]*=e,n[8]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],h=e[8];return n*a*h-n*o*c-i*s*h+i*o*l+r*s*c-r*a*l}invert(){const e=this.elements,n=e[0],i=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],h=e[8],u=h*a-o*c,f=o*l-h*s,d=c*s-a*l,p=n*u+i*f+r*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/p;return e[0]=u*g,e[1]=(r*c-h*i)*g,e[2]=(o*i-r*a)*g,e[3]=f*g,e[4]=(h*n-r*l)*g,e[5]=(r*s-o*n)*g,e[6]=d*g,e[7]=(i*l-c*n)*g,e[8]=(a*n-i*s)*g,this}transpose(){let e;const n=this.elements;return e=n[1],n[1]=n[3],n[3]=e,e=n[2],n[2]=n[6],n[6]=e,e=n[5],n[5]=n[7],n[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const n=this.elements;return e[0]=n[0],e[1]=n[3],e[2]=n[6],e[3]=n[1],e[4]=n[4],e[5]=n[7],e[6]=n[2],e[7]=n[5],e[8]=n[8],this}setUvTransform(e,n,i,r,s,a,o){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*a+c*o)+a+e,-r*c,r*l,-r*(-c*a+l*o)+o+n,0,0,1),this}scale(e,n){return this.premultiply(zh.makeScale(e,n)),this}rotate(e){return this.premultiply(zh.makeRotation(-e)),this}translate(e,n){return this.premultiply(zh.makeTranslation(e,n)),this}makeTranslation(e,n){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,n,0,0,1),this}makeRotation(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,i,n,0,0,0,1),this}makeScale(e,n){return this.set(e,0,0,0,n,0,0,0,1),this}equals(e){const n=this.elements,i=e.elements;for(let r=0;r<9;r++)if(n[r]!==i[r])return!1;return!0}fromArray(e,n=0){for(let i=0;i<9;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}};const zh=new Pt;function Wg(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}const F_={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Xs(t,e){return new F_[t](e)}function fo(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function Xg(){const t=fo("canvas");return t.style.display="block",t}const Ep={};function ss(t){t in Ep||(Ep[t]=!0,console.warn(t))}const Tp=new Pt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Ap=new Pt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),gl={[Ci]:{transfer:oo,primaries:lo,toReference:t=>t,fromReference:t=>t},[on]:{transfer:Gt,primaries:lo,toReference:t=>t.convertSRGBToLinear(),fromReference:t=>t.convertLinearToSRGB()},[hl]:{transfer:oo,primaries:co,toReference:t=>t.applyMatrix3(Ap),fromReference:t=>t.applyMatrix3(Tp)},[Mh]:{transfer:Gt,primaries:co,toReference:t=>t.convertSRGBToLinear().applyMatrix3(Ap),fromReference:t=>t.applyMatrix3(Tp).convertLinearToSRGB()}},O_=new Set([Ci,hl]),Bt={enabled:!0,_workingColorSpace:Ci,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(t){if(!O_.has(t))throw new Error(`Unsupported working color space, "${t}".`);this._workingColorSpace=t},convert:function(t,e,n){if(this.enabled===!1||e===n||!e||!n)return t;const i=gl[e].toReference,r=gl[n].fromReference;return r(i(t))},fromWorkingColorSpace:function(t,e){return this.convert(t,this._workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this._workingColorSpace)},getPrimaries:function(t){return gl[t].primaries},getTransfer:function(t){return t===Xn?oo:gl[t].transfer}};function Js(t){return t<.04045?t*.0773993808:Math.pow(t*.9478672986+.0521327014,2.4)}function Gh(t){return t<.0031308?t*12.92:1.055*Math.pow(t,.41666)-.055}let Ms;class Rd{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{Ms===void 0&&(Ms=fo("canvas")),Ms.width=e.width,Ms.height=e.height;const i=Ms.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),n=Ms}return n.width>2048||n.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),n.toDataURL("image/jpeg",.6)):n.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const n=fo("canvas");n.width=e.width,n.height=e.height;const i=n.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const r=i.getImageData(0,0,e.width,e.height),s=r.data;for(let a=0;a<s.length;a++)s[a]=Js(s[a]/255)*255;return i.putImageData(r,0,0),n}else if(e.data){const n=e.data.slice(0);for(let i=0;i<n.length;i++)n instanceof Uint8Array||n instanceof Uint8ClampedArray?n[i]=Math.floor(Js(n[i]/255)*255):n[i]=Js(n[i]);return{data:n,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let z_=0;class Qr{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:z_++}),this.uuid=qn(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let a=0,o=r.length;a<o;a++)r[a].isDataTexture?s.push(Vh(r[a].image)):s.push(Vh(r[a]))}else s=Vh(r);i.url=s}return n||(e.images[this.uuid]=i),i}}function Vh(t){return typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap?Rd.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let G_=0,gn=class xc extends Ni{constructor(e=xc.DEFAULT_IMAGE,n=xc.DEFAULT_MAPPING,i=bn,r=bn,s=qt,a=Ti,o=Un,l=ji,c=xc.DEFAULT_ANISOTROPY,h=Xn){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:G_++}),this.uuid=qn(),this.name="",this.source=new Qr(e),this.mipmaps=[],this.mapping=n,this.channel=0,this.wrapS=i,this.wrapT=r,this.magFilter=s,this.minFilter=a,this.anisotropy=c,this.format=o,this.internalFormat=null,this.type=l,this.offset=new De(0,0),this.repeat=new De(1,1),this.center=new De(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Pt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof h=="string"?this.colorSpace=h:(ss("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=h===xr?on:Xn),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),n||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==yh)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case no:e.x=e.x-Math.floor(e.x);break;case bn:e.x=e.x<0?0:1;break;case io:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case no:e.y=e.y-Math.floor(e.y);break;case bn:e.y=e.y<0?0:1;break;case io:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return ss("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===on?xr:Td}set encoding(e){ss("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===xr?on:Xn}};gn.DEFAULT_IMAGE=null;gn.DEFAULT_MAPPING=yh;gn.DEFAULT_ANISOTROPY=1;let zt=class qg{constructor(e=0,n=0,i=0,r=1){qg.prototype.isVector4=!0,this.x=e,this.y=n,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,n,i,r){return this.x=e,this.y=n,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this.w=e.w+n.w,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this.w+=e.w*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this.w=e.w-n.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const n=this.x,i=this.y,r=this.z,s=this.w,a=e.elements;return this.x=a[0]*n+a[4]*i+a[8]*r+a[12]*s,this.y=a[1]*n+a[5]*i+a[9]*r+a[13]*s,this.z=a[2]*n+a[6]*i+a[10]*r+a[14]*s,this.w=a[3]*n+a[7]*i+a[11]*r+a[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const n=Math.sqrt(1-e.w*e.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/n,this.y=e.y/n,this.z=e.z/n),this}setAxisAngleFromRotationMatrix(e){let n,i,r,s;const l=e.elements,c=l[0],h=l[4],u=l[8],f=l[1],d=l[5],p=l[9],g=l[2],v=l[6],m=l[10];if(Math.abs(h-f)<.01&&Math.abs(u-g)<.01&&Math.abs(p-v)<.01){if(Math.abs(h+f)<.1&&Math.abs(u+g)<.1&&Math.abs(p+v)<.1&&Math.abs(c+d+m-3)<.1)return this.set(1,0,0,0),this;n=Math.PI;const x=(c+1)/2,_=(d+1)/2,b=(m+1)/2,w=(h+f)/4,S=(u+g)/4,C=(p+v)/4;return x>_&&x>b?x<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(x),r=w/i,s=S/i):_>b?_<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(_),i=w/r,s=C/r):b<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(b),i=S/s,r=C/s),this.set(i,r,s,n),this}let y=Math.sqrt((v-p)*(v-p)+(u-g)*(u-g)+(f-h)*(f-h));return Math.abs(y)<.001&&(y=1),this.x=(v-p)/y,this.y=(u-g)/y,this.z=(f-h)/y,this.w=Math.acos((c+d+m-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this.w=Math.max(e.w,Math.min(n.w,this.w)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this.w=Math.max(e,Math.min(n,this.w)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this.w+=(e.w-this.w)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this.w=e.w+(n.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this.w=e[n+3],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e[n+3]=this.w,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this.w=e.getW(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}};class $g extends Ni{constructor(e=1,n=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=n,this.depth=1,this.scissor=new zt(0,0,e,n),this.scissorTest=!1,this.viewport=new zt(0,0,e,n);const r={width:e,height:n,depth:1};i.encoding!==void 0&&(ss("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),i.colorSpace=i.encoding===xr?on:Xn),i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:qt,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},i),this.texture=new gn(r,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=i.generateMipmaps,this.texture.internalFormat=i.internalFormat,this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}setSize(e,n,i=1){(this.width!==e||this.height!==n||this.depth!==i)&&(this.width=e,this.height=n,this.depth=i,this.texture.image.width=e,this.texture.image.height=n,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,n),this.scissor.set(0,0,e,n)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const n=Object.assign({},e.texture.image);return this.texture.source=new Qr(n),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}let mi=class extends $g{constructor(e=1,n=1,i={}){super(e,n,i),this.isWebGLRenderTarget=!0}};class bh extends gn{constructor(e=null,n=1,i=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:n,height:i,depth:r},this.magFilter=en,this.minFilter=en,this.wrapR=bn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class V_ extends mi{constructor(e=1,n=1,i=1,r={}){super(e,n,r),this.isWebGLArrayRenderTarget=!0,this.depth=i,this.texture=new bh(null,e,n,i),this.texture.isRenderTargetTexture=!0}}class Pd extends gn{constructor(e=null,n=1,i=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:n,height:i,depth:r},this.magFilter=en,this.minFilter=en,this.wrapR=bn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class H_ extends mi{constructor(e=1,n=1,i=1,r={}){super(e,n,r),this.isWebGL3DRenderTarget=!0,this.depth=i,this.texture=new Pd(null,e,n,i),this.texture.isRenderTargetTexture=!0}}class k_ extends mi{constructor(e=1,n=1,i=1,r={}){super(e,n,r),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let a=0;a<i;a++)this.texture[a]=s.clone(),this.texture[a].isRenderTargetTexture=!0}setSize(e,n,i=1){if(this.width!==e||this.height!==n||this.depth!==i){this.width=e,this.height=n,this.depth=i;for(let r=0,s=this.texture.length;r<s;r++)this.texture[r].image.width=e,this.texture[r].image.height=n,this.texture[r].image.depth=i;this.dispose()}this.viewport.set(0,0,e,n),this.scissor.set(0,0,e,n)}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let n=0,i=e.texture.length;n<i;n++)this.texture[n]=e.texture[n].clone(),this.texture[n].isRenderTargetTexture=!0;return this}}let wn=class{constructor(e=0,n=0,i=0,r=1){this.isQuaternion=!0,this._x=e,this._y=n,this._z=i,this._w=r}static slerpFlat(e,n,i,r,s,a,o){let l=i[r+0],c=i[r+1],h=i[r+2],u=i[r+3];const f=s[a+0],d=s[a+1],p=s[a+2],g=s[a+3];if(o===0){e[n+0]=l,e[n+1]=c,e[n+2]=h,e[n+3]=u;return}if(o===1){e[n+0]=f,e[n+1]=d,e[n+2]=p,e[n+3]=g;return}if(u!==g||l!==f||c!==d||h!==p){let v=1-o;const m=l*f+c*d+h*p+u*g,y=m>=0?1:-1,x=1-m*m;if(x>Number.EPSILON){const b=Math.sqrt(x),w=Math.atan2(b,m*y);v=Math.sin(v*w)/b,o=Math.sin(o*w)/b}const _=o*y;if(l=l*v+f*_,c=c*v+d*_,h=h*v+p*_,u=u*v+g*_,v===1-o){const b=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=b,c*=b,h*=b,u*=b}}e[n]=l,e[n+1]=c,e[n+2]=h,e[n+3]=u}static multiplyQuaternionsFlat(e,n,i,r,s,a){const o=i[r],l=i[r+1],c=i[r+2],h=i[r+3],u=s[a],f=s[a+1],d=s[a+2],p=s[a+3];return e[n]=o*p+h*u+l*d-c*f,e[n+1]=l*p+h*f+c*u-o*d,e[n+2]=c*p+h*d+o*f-l*u,e[n+3]=h*p-o*u-l*f-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,n,i,r){return this._x=e,this._y=n,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,n=!0){const i=e._x,r=e._y,s=e._z,a=e._order,o=Math.cos,l=Math.sin,c=o(i/2),h=o(r/2),u=o(s/2),f=l(i/2),d=l(r/2),p=l(s/2);switch(a){case"XYZ":this._x=f*h*u+c*d*p,this._y=c*d*u-f*h*p,this._z=c*h*p+f*d*u,this._w=c*h*u-f*d*p;break;case"YXZ":this._x=f*h*u+c*d*p,this._y=c*d*u-f*h*p,this._z=c*h*p-f*d*u,this._w=c*h*u+f*d*p;break;case"ZXY":this._x=f*h*u-c*d*p,this._y=c*d*u+f*h*p,this._z=c*h*p+f*d*u,this._w=c*h*u-f*d*p;break;case"ZYX":this._x=f*h*u-c*d*p,this._y=c*d*u+f*h*p,this._z=c*h*p-f*d*u,this._w=c*h*u+f*d*p;break;case"YZX":this._x=f*h*u+c*d*p,this._y=c*d*u+f*h*p,this._z=c*h*p-f*d*u,this._w=c*h*u-f*d*p;break;case"XZY":this._x=f*h*u-c*d*p,this._y=c*d*u-f*h*p,this._z=c*h*p+f*d*u,this._w=c*h*u+f*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return n===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,n){const i=n/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const n=e.elements,i=n[0],r=n[4],s=n[8],a=n[1],o=n[5],l=n[9],c=n[2],h=n[6],u=n[10],f=i+o+u;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(h-l)*d,this._y=(s-c)*d,this._z=(a-r)*d}else if(i>o&&i>u){const d=2*Math.sqrt(1+i-o-u);this._w=(h-l)/d,this._x=.25*d,this._y=(r+a)/d,this._z=(s+c)/d}else if(o>u){const d=2*Math.sqrt(1+o-i-u);this._w=(s-c)/d,this._x=(r+a)/d,this._y=.25*d,this._z=(l+h)/d}else{const d=2*Math.sqrt(1+u-i-o);this._w=(a-r)/d,this._x=(s+c)/d,this._y=(l+h)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,n){let i=e.dot(n)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*n.z-e.z*n.y,this._y=e.z*n.x-e.x*n.z,this._z=e.x*n.y-e.y*n.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Jt(this.dot(e),-1,1)))}rotateTowards(e,n){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,n/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,n){const i=e._x,r=e._y,s=e._z,a=e._w,o=n._x,l=n._y,c=n._z,h=n._w;return this._x=i*h+a*o+r*c-s*l,this._y=r*h+a*l+s*o-i*c,this._z=s*h+a*c+i*l-r*o,this._w=a*h-i*o-r*l-s*c,this._onChangeCallback(),this}slerp(e,n){if(n===0)return this;if(n===1)return this.copy(e);const i=this._x,r=this._y,s=this._z,a=this._w;let o=a*e._w+i*e._x+r*e._y+s*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=i,this._y=r,this._z=s,this;const l=1-o*o;if(l<=Number.EPSILON){const d=1-n;return this._w=d*a+n*this._w,this._x=d*i+n*this._x,this._y=d*r+n*this._y,this._z=d*s+n*this._z,this.normalize(),this}const c=Math.sqrt(l),h=Math.atan2(c,o),u=Math.sin((1-n)*h)/c,f=Math.sin(n*h)/c;return this._w=a*u+this._w*f,this._x=i*u+this._x*f,this._y=r*u+this._y*f,this._z=s*u+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,n,i){return this.copy(e).slerp(n,i)}random(){const e=Math.random(),n=Math.sqrt(1-e),i=Math.sqrt(e),r=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(n*Math.cos(r),i*Math.sin(s),i*Math.cos(s),n*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,n=0){return this._x=e[n],this._y=e[n+1],this._z=e[n+2],this._w=e[n+3],this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._w,e}fromBufferAttribute(e,n){return this._x=e.getX(n),this._y=e.getY(n),this._z=e.getZ(n),this._w=e.getW(n),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},K=class Yg{constructor(e=0,n=0,i=0){Yg.prototype.isVector3=!0,this.x=e,this.y=n,this.z=i}set(e,n,i){return i===void 0&&(i=this.z),this.x=e,this.y=n,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,n){return this.x=e.x*n.x,this.y=e.y*n.y,this.z=e.z*n.z,this}applyEuler(e){return this.applyQuaternion(Cp.setFromEuler(e))}applyAxisAngle(e,n){return this.applyQuaternion(Cp.setFromAxisAngle(e,n))}applyMatrix3(e){const n=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*n+s[3]*i+s[6]*r,this.y=s[1]*n+s[4]*i+s[7]*r,this.z=s[2]*n+s[5]*i+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const n=this.x,i=this.y,r=this.z,s=e.elements,a=1/(s[3]*n+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*n+s[4]*i+s[8]*r+s[12])*a,this.y=(s[1]*n+s[5]*i+s[9]*r+s[13])*a,this.z=(s[2]*n+s[6]*i+s[10]*r+s[14])*a,this}applyQuaternion(e){const n=this.x,i=this.y,r=this.z,s=e.x,a=e.y,o=e.z,l=e.w,c=2*(a*r-o*i),h=2*(o*n-s*r),u=2*(s*i-a*n);return this.x=n+l*c+a*u-o*h,this.y=i+l*h+o*c-s*u,this.z=r+l*u+s*h-a*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const n=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*n+s[4]*i+s[8]*r,this.y=s[1]*n+s[5]*i+s[9]*r,this.z=s[2]*n+s[6]*i+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,n){const i=e.x,r=e.y,s=e.z,a=n.x,o=n.y,l=n.z;return this.x=r*l-s*o,this.y=s*a-i*l,this.z=i*o-r*a,this}projectOnVector(e){const n=e.lengthSq();if(n===0)return this.set(0,0,0);const i=e.dot(this)/n;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Hh.copy(this).projectOnVector(e),this.sub(Hh)}reflect(e){return this.sub(Hh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(Jt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return n*n+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,n,i){const r=Math.sin(n)*e;return this.x=r*Math.sin(i),this.y=Math.cos(n)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,n,i){return this.x=e*Math.sin(n),this.y=i,this.z=e*Math.cos(n),this}setFromMatrixPosition(e){const n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}setFromMatrixScale(e){const n=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=n,this.y=i,this.z=r,this}setFromMatrixColumn(e,n){return this.fromArray(e.elements,n*4)}setFromMatrix3Column(e,n){return this.fromArray(e.elements,n*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e}fromBufferAttribute(e,n){return this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,n=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(n),this.y=i*Math.sin(n),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};const Hh=new K,Cp=new wn;let In=class{constructor(e=new K(1/0,1/0,1/0),n=new K(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=n}set(e,n){return this.min.copy(e),this.max.copy(n),this}setFromArray(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n+=3)this.expandByPoint(li.fromArray(e,n));return this}setFromBufferAttribute(e){this.makeEmpty();for(let n=0,i=e.count;n<i;n++)this.expandByPoint(li.fromBufferAttribute(e,n));return this}setFromPoints(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n++)this.expandByPoint(e[n]);return this}setFromCenterAndSize(e,n){const i=li.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,n=!1){return this.makeEmpty(),this.expandByObject(e,n)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,n=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const s=i.getAttribute("position");if(n===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let a=0,o=s.count;a<o;a++)e.isMesh===!0?e.getVertexPosition(a,li):li.fromBufferAttribute(s,a),li.applyMatrix4(e.matrixWorld),this.expandByPoint(li);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),yl.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),yl.copy(i.boundingBox)),yl.applyMatrix4(e.matrixWorld),this.union(yl)}const r=e.children;for(let s=0,a=r.length;s<a;s++)this.expandByObject(r[s],n);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,n){return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,li),li.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let n,i;return e.normal.x>0?(n=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(n=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(n+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(n+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(n+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(n+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),n<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Ia),xl.subVectors(this.max,Ia),bs.subVectors(e.a,Ia),ws.subVectors(e.b,Ia),Ss.subVectors(e.c,Ia),sr.subVectors(ws,bs),ar.subVectors(Ss,ws),Dr.subVectors(bs,Ss);let n=[0,-sr.z,sr.y,0,-ar.z,ar.y,0,-Dr.z,Dr.y,sr.z,0,-sr.x,ar.z,0,-ar.x,Dr.z,0,-Dr.x,-sr.y,sr.x,0,-ar.y,ar.x,0,-Dr.y,Dr.x,0];return!kh(n,bs,ws,Ss,xl)||(n=[1,0,0,0,1,0,0,0,1],!kh(n,bs,ws,Ss,xl))?!1:(_l.crossVectors(sr,ar),n=[_l.x,_l.y,_l.z],kh(n,bs,ws,Ss,xl))}clampPoint(e,n){return n.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,li).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(li).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Ui[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ui[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ui[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ui[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ui[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ui[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ui[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ui[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ui),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}};const Ui=[new K,new K,new K,new K,new K,new K,new K,new K],li=new K,yl=new In,bs=new K,ws=new K,Ss=new K,sr=new K,ar=new K,Dr=new K,Ia=new K,xl=new K,_l=new K,Nr=new K;function kh(t,e,n,i,r){for(let s=0,a=t.length-3;s<=a;s+=3){Nr.fromArray(t,s);const o=r.x*Math.abs(Nr.x)+r.y*Math.abs(Nr.y)+r.z*Math.abs(Nr.z),l=e.dot(Nr),c=n.dot(Nr),h=i.dot(Nr);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>o)return!1}return!0}const W_=new In,Da=new K,Wh=new K;let Sn=class{constructor(e=new K,n=-1){this.isSphere=!0,this.center=e,this.radius=n}set(e,n){return this.center.copy(e),this.radius=n,this}setFromPoints(e,n){const i=this.center;n!==void 0?i.copy(n):W_.setFromPoints(e).getCenter(i);let r=0;for(let s=0,a=e.length;s<a;s++)r=Math.max(r,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const n=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=n*n}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,n){const i=this.center.distanceToSquared(e);return n.copy(e),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Da.subVectors(e,this.center);const n=Da.lengthSq();if(n>this.radius*this.radius){const i=Math.sqrt(n),r=(i-this.radius)*.5;this.center.addScaledVector(Da,r/i),this.radius+=r}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Wh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Da.copy(e.center).add(Wh)),this.expandByPoint(Da.copy(e.center).sub(Wh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}};const Fi=new K,Xh=new K,Ml=new K,or=new K,qh=new K,bl=new K,$h=new K;let gs=class{constructor(e=new K,n=new K(0,0,-1)){this.origin=e,this.direction=n}set(e,n){return this.origin.copy(e),this.direction.copy(n),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,n){return n.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Fi)),this}closestPointToPoint(e,n){n.subVectors(e,this.origin);const i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const n=Fi.subVectors(e,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(e):(Fi.copy(this.origin).addScaledVector(this.direction,n),Fi.distanceToSquared(e))}distanceSqToSegment(e,n,i,r){Xh.copy(e).add(n).multiplyScalar(.5),Ml.copy(n).sub(e).normalize(),or.copy(this.origin).sub(Xh);const s=e.distanceTo(n)*.5,a=-this.direction.dot(Ml),o=or.dot(this.direction),l=-or.dot(Ml),c=or.lengthSq(),h=Math.abs(1-a*a);let u,f,d,p;if(h>0)if(u=a*l-o,f=a*o-l,p=s*h,u>=0)if(f>=-p)if(f<=p){const g=1/h;u*=g,f*=g,d=u*(u+a*f+2*o)+f*(a*u+f+2*l)+c}else f=s,u=Math.max(0,-(a*f+o)),d=-u*u+f*(f+2*l)+c;else f=-s,u=Math.max(0,-(a*f+o)),d=-u*u+f*(f+2*l)+c;else f<=-p?(u=Math.max(0,-(-a*s+o)),f=u>0?-s:Math.min(Math.max(-s,-l),s),d=-u*u+f*(f+2*l)+c):f<=p?(u=0,f=Math.min(Math.max(-s,-l),s),d=f*(f+2*l)+c):(u=Math.max(0,-(a*s+o)),f=u>0?s:Math.min(Math.max(-s,-l),s),d=-u*u+f*(f+2*l)+c);else f=a>0?-s:s,u=Math.max(0,-(a*f+o)),d=-u*u+f*(f+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,u),r&&r.copy(Xh).addScaledVector(Ml,f),d}intersectSphere(e,n){Fi.subVectors(e.center,this.origin);const i=Fi.dot(this.direction),r=Fi.dot(Fi)-i*i,s=e.radius*e.radius;if(r>s)return null;const a=Math.sqrt(s-r),o=i-a,l=i+a;return l<0?null:o<0?this.at(l,n):this.at(o,n)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const n=e.normal.dot(this.direction);if(n===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/n;return i>=0?i:null}intersectPlane(e,n){const i=this.distanceToPlane(e);return i===null?null:this.at(i,n)}intersectsPlane(e){const n=e.distanceToPoint(this.origin);return n===0||e.normal.dot(this.direction)*n<0}intersectBox(e,n){let i,r,s,a,o,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,f=this.origin;return c>=0?(i=(e.min.x-f.x)*c,r=(e.max.x-f.x)*c):(i=(e.max.x-f.x)*c,r=(e.min.x-f.x)*c),h>=0?(s=(e.min.y-f.y)*h,a=(e.max.y-f.y)*h):(s=(e.max.y-f.y)*h,a=(e.min.y-f.y)*h),i>a||s>r||((s>i||isNaN(i))&&(i=s),(a<r||isNaN(r))&&(r=a),u>=0?(o=(e.min.z-f.z)*u,l=(e.max.z-f.z)*u):(o=(e.max.z-f.z)*u,l=(e.min.z-f.z)*u),i>l||o>r)||((o>i||i!==i)&&(i=o),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,n)}intersectsBox(e){return this.intersectBox(e,Fi)!==null}intersectTriangle(e,n,i,r,s){qh.subVectors(n,e),bl.subVectors(i,e),$h.crossVectors(qh,bl);let a=this.direction.dot($h),o;if(a>0){if(r)return null;o=1}else if(a<0)o=-1,a=-a;else return null;or.subVectors(this.origin,e);const l=o*this.direction.dot(bl.crossVectors(or,bl));if(l<0)return null;const c=o*this.direction.dot(qh.cross(or));if(c<0||l+c>a)return null;const h=-o*or.dot($h);return h<0?null:this.at(h/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},Mt=class _f{constructor(e,n,i,r,s,a,o,l,c,h,u,f,d,p,g,v){_f.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,n,i,r,s,a,o,l,c,h,u,f,d,p,g,v)}set(e,n,i,r,s,a,o,l,c,h,u,f,d,p,g,v){const m=this.elements;return m[0]=e,m[4]=n,m[8]=i,m[12]=r,m[1]=s,m[5]=a,m[9]=o,m[13]=l,m[2]=c,m[6]=h,m[10]=u,m[14]=f,m[3]=d,m[7]=p,m[11]=g,m[15]=v,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new _f().fromArray(this.elements)}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],n[9]=i[9],n[10]=i[10],n[11]=i[11],n[12]=i[12],n[13]=i[13],n[14]=i[14],n[15]=i[15],this}copyPosition(e){const n=this.elements,i=e.elements;return n[12]=i[12],n[13]=i[13],n[14]=i[14],this}setFromMatrix3(e){const n=e.elements;return this.set(n[0],n[3],n[6],0,n[1],n[4],n[7],0,n[2],n[5],n[8],0,0,0,0,1),this}extractBasis(e,n,i){return e.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,n,i){return this.set(e.x,n.x,i.x,0,e.y,n.y,i.y,0,e.z,n.z,i.z,0,0,0,0,1),this}extractRotation(e){const n=this.elements,i=e.elements,r=1/Es.setFromMatrixColumn(e,0).length(),s=1/Es.setFromMatrixColumn(e,1).length(),a=1/Es.setFromMatrixColumn(e,2).length();return n[0]=i[0]*r,n[1]=i[1]*r,n[2]=i[2]*r,n[3]=0,n[4]=i[4]*s,n[5]=i[5]*s,n[6]=i[6]*s,n[7]=0,n[8]=i[8]*a,n[9]=i[9]*a,n[10]=i[10]*a,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromEuler(e){const n=this.elements,i=e.x,r=e.y,s=e.z,a=Math.cos(i),o=Math.sin(i),l=Math.cos(r),c=Math.sin(r),h=Math.cos(s),u=Math.sin(s);if(e.order==="XYZ"){const f=a*h,d=a*u,p=o*h,g=o*u;n[0]=l*h,n[4]=-l*u,n[8]=c,n[1]=d+p*c,n[5]=f-g*c,n[9]=-o*l,n[2]=g-f*c,n[6]=p+d*c,n[10]=a*l}else if(e.order==="YXZ"){const f=l*h,d=l*u,p=c*h,g=c*u;n[0]=f+g*o,n[4]=p*o-d,n[8]=a*c,n[1]=a*u,n[5]=a*h,n[9]=-o,n[2]=d*o-p,n[6]=g+f*o,n[10]=a*l}else if(e.order==="ZXY"){const f=l*h,d=l*u,p=c*h,g=c*u;n[0]=f-g*o,n[4]=-a*u,n[8]=p+d*o,n[1]=d+p*o,n[5]=a*h,n[9]=g-f*o,n[2]=-a*c,n[6]=o,n[10]=a*l}else if(e.order==="ZYX"){const f=a*h,d=a*u,p=o*h,g=o*u;n[0]=l*h,n[4]=p*c-d,n[8]=f*c+g,n[1]=l*u,n[5]=g*c+f,n[9]=d*c-p,n[2]=-c,n[6]=o*l,n[10]=a*l}else if(e.order==="YZX"){const f=a*l,d=a*c,p=o*l,g=o*c;n[0]=l*h,n[4]=g-f*u,n[8]=p*u+d,n[1]=u,n[5]=a*h,n[9]=-o*h,n[2]=-c*h,n[6]=d*u+p,n[10]=f-g*u}else if(e.order==="XZY"){const f=a*l,d=a*c,p=o*l,g=o*c;n[0]=l*h,n[4]=-u,n[8]=c*h,n[1]=f*u+g,n[5]=a*h,n[9]=d*u-p,n[2]=p*u-d,n[6]=o*h,n[10]=g*u+f}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromQuaternion(e){return this.compose(X_,e,q_)}lookAt(e,n,i){const r=this.elements;return Gn.subVectors(e,n),Gn.lengthSq()===0&&(Gn.z=1),Gn.normalize(),lr.crossVectors(i,Gn),lr.lengthSq()===0&&(Math.abs(i.z)===1?Gn.x+=1e-4:Gn.z+=1e-4,Gn.normalize(),lr.crossVectors(i,Gn)),lr.normalize(),wl.crossVectors(Gn,lr),r[0]=lr.x,r[4]=wl.x,r[8]=Gn.x,r[1]=lr.y,r[5]=wl.y,r[9]=Gn.y,r[2]=lr.z,r[6]=wl.z,r[10]=Gn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,r=n.elements,s=this.elements,a=i[0],o=i[4],l=i[8],c=i[12],h=i[1],u=i[5],f=i[9],d=i[13],p=i[2],g=i[6],v=i[10],m=i[14],y=i[3],x=i[7],_=i[11],b=i[15],w=r[0],S=r[4],C=r[8],L=r[12],M=r[1],E=r[5],N=r[9],k=r[13],F=r[2],V=r[6],ee=r[10],R=r[14],T=r[3],H=r[7],O=r[11],B=r[15];return s[0]=a*w+o*M+l*F+c*T,s[4]=a*S+o*E+l*V+c*H,s[8]=a*C+o*N+l*ee+c*O,s[12]=a*L+o*k+l*R+c*B,s[1]=h*w+u*M+f*F+d*T,s[5]=h*S+u*E+f*V+d*H,s[9]=h*C+u*N+f*ee+d*O,s[13]=h*L+u*k+f*R+d*B,s[2]=p*w+g*M+v*F+m*T,s[6]=p*S+g*E+v*V+m*H,s[10]=p*C+g*N+v*ee+m*O,s[14]=p*L+g*k+v*R+m*B,s[3]=y*w+x*M+_*F+b*T,s[7]=y*S+x*E+_*V+b*H,s[11]=y*C+x*N+_*ee+b*O,s[15]=y*L+x*k+_*R+b*B,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[4]*=e,n[8]*=e,n[12]*=e,n[1]*=e,n[5]*=e,n[9]*=e,n[13]*=e,n[2]*=e,n[6]*=e,n[10]*=e,n[14]*=e,n[3]*=e,n[7]*=e,n[11]*=e,n[15]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[4],r=e[8],s=e[12],a=e[1],o=e[5],l=e[9],c=e[13],h=e[2],u=e[6],f=e[10],d=e[14],p=e[3],g=e[7],v=e[11],m=e[15];return p*(+s*l*u-r*c*u-s*o*f+i*c*f+r*o*d-i*l*d)+g*(+n*l*d-n*c*f+s*a*f-r*a*d+r*c*h-s*l*h)+v*(+n*c*u-n*o*d-s*a*u+i*a*d+s*o*h-i*c*h)+m*(-r*o*h-n*l*u+n*o*f+r*a*u-i*a*f+i*l*h)}transpose(){const e=this.elements;let n;return n=e[1],e[1]=e[4],e[4]=n,n=e[2],e[2]=e[8],e[8]=n,n=e[6],e[6]=e[9],e[9]=n,n=e[3],e[3]=e[12],e[12]=n,n=e[7],e[7]=e[13],e[13]=n,n=e[11],e[11]=e[14],e[14]=n,this}setPosition(e,n,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=n,r[14]=i),this}invert(){const e=this.elements,n=e[0],i=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],h=e[8],u=e[9],f=e[10],d=e[11],p=e[12],g=e[13],v=e[14],m=e[15],y=u*v*c-g*f*c+g*l*d-o*v*d-u*l*m+o*f*m,x=p*f*c-h*v*c-p*l*d+a*v*d+h*l*m-a*f*m,_=h*g*c-p*u*c+p*o*d-a*g*d-h*o*m+a*u*m,b=p*u*l-h*g*l-p*o*f+a*g*f+h*o*v-a*u*v,w=n*y+i*x+r*_+s*b;if(w===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const S=1/w;return e[0]=y*S,e[1]=(g*f*s-u*v*s-g*r*d+i*v*d+u*r*m-i*f*m)*S,e[2]=(o*v*s-g*l*s+g*r*c-i*v*c-o*r*m+i*l*m)*S,e[3]=(u*l*s-o*f*s-u*r*c+i*f*c+o*r*d-i*l*d)*S,e[4]=x*S,e[5]=(h*v*s-p*f*s+p*r*d-n*v*d-h*r*m+n*f*m)*S,e[6]=(p*l*s-a*v*s-p*r*c+n*v*c+a*r*m-n*l*m)*S,e[7]=(a*f*s-h*l*s+h*r*c-n*f*c-a*r*d+n*l*d)*S,e[8]=_*S,e[9]=(p*u*s-h*g*s-p*i*d+n*g*d+h*i*m-n*u*m)*S,e[10]=(a*g*s-p*o*s+p*i*c-n*g*c-a*i*m+n*o*m)*S,e[11]=(h*o*s-a*u*s-h*i*c+n*u*c+a*i*d-n*o*d)*S,e[12]=b*S,e[13]=(h*g*r-p*u*r+p*i*f-n*g*f-h*i*v+n*u*v)*S,e[14]=(p*o*r-a*g*r-p*i*l+n*g*l+a*i*v-n*o*v)*S,e[15]=(a*u*r-h*o*r+h*i*l-n*u*l-a*i*f+n*o*f)*S,this}scale(e){const n=this.elements,i=e.x,r=e.y,s=e.z;return n[0]*=i,n[4]*=r,n[8]*=s,n[1]*=i,n[5]*=r,n[9]*=s,n[2]*=i,n[6]*=r,n[10]*=s,n[3]*=i,n[7]*=r,n[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(n,i,r))}makeTranslation(e,n,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,n,0,0,1,i,0,0,0,1),this}makeRotationX(e){const n=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,n,-i,0,0,i,n,0,0,0,0,1),this}makeRotationY(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,0,i,0,0,1,0,0,-i,0,n,0,0,0,0,1),this}makeRotationZ(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,0,i,n,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,n){const i=Math.cos(n),r=Math.sin(n),s=1-i,a=e.x,o=e.y,l=e.z,c=s*a,h=s*o;return this.set(c*a+i,c*o-r*l,c*l+r*o,0,c*o+r*l,h*o+i,h*l-r*a,0,c*l-r*o,h*l+r*a,s*l*l+i,0,0,0,0,1),this}makeScale(e,n,i){return this.set(e,0,0,0,0,n,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,n,i,r,s,a){return this.set(1,i,s,0,e,1,a,0,n,r,1,0,0,0,0,1),this}compose(e,n,i){const r=this.elements,s=n._x,a=n._y,o=n._z,l=n._w,c=s+s,h=a+a,u=o+o,f=s*c,d=s*h,p=s*u,g=a*h,v=a*u,m=o*u,y=l*c,x=l*h,_=l*u,b=i.x,w=i.y,S=i.z;return r[0]=(1-(g+m))*b,r[1]=(d+_)*b,r[2]=(p-x)*b,r[3]=0,r[4]=(d-_)*w,r[5]=(1-(f+m))*w,r[6]=(v+y)*w,r[7]=0,r[8]=(p+x)*S,r[9]=(v-y)*S,r[10]=(1-(f+g))*S,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,n,i){const r=this.elements;let s=Es.set(r[0],r[1],r[2]).length();const a=Es.set(r[4],r[5],r[6]).length(),o=Es.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],ci.copy(this);const c=1/s,h=1/a,u=1/o;return ci.elements[0]*=c,ci.elements[1]*=c,ci.elements[2]*=c,ci.elements[4]*=h,ci.elements[5]*=h,ci.elements[6]*=h,ci.elements[8]*=u,ci.elements[9]*=u,ci.elements[10]*=u,n.setFromRotationMatrix(ci),i.x=s,i.y=a,i.z=o,this}makePerspective(e,n,i,r,s,a,o=Ai){const l=this.elements,c=2*s/(n-e),h=2*s/(i-r),u=(n+e)/(n-e),f=(i+r)/(i-r);let d,p;if(o===Ai)d=-(a+s)/(a-s),p=-2*a*s/(a-s);else if(o===uo)d=-a/(a-s),p=-a*s/(a-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return l[0]=c,l[4]=0,l[8]=u,l[12]=0,l[1]=0,l[5]=h,l[9]=f,l[13]=0,l[2]=0,l[6]=0,l[10]=d,l[14]=p,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,n,i,r,s,a,o=Ai){const l=this.elements,c=1/(n-e),h=1/(i-r),u=1/(a-s),f=(n+e)*c,d=(i+r)*h;let p,g;if(o===Ai)p=(a+s)*u,g=-2*u;else if(o===uo)p=s*u,g=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-f,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-d,l[2]=0,l[6]=0,l[10]=g,l[14]=-p,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const n=this.elements,i=e.elements;for(let r=0;r<16;r++)if(n[r]!==i[r])return!1;return!0}fromArray(e,n=0){for(let i=0;i<16;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e[n+9]=i[9],e[n+10]=i[10],e[n+11]=i[11],e[n+12]=i[12],e[n+13]=i[13],e[n+14]=i[14],e[n+15]=i[15],e}};const Es=new K,ci=new Mt,X_=new K(0,0,0),q_=new K(1,1,1),lr=new K,wl=new K,Gn=new K,Rp=new Mt,Pp=new wn;let Ld=class Zg{constructor(e=0,n=0,i=0,r=Zg.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=n,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,n,i,r=this._order){return this._x=e,this._y=n,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,n=this._order,i=!0){const r=e.elements,s=r[0],a=r[4],o=r[8],l=r[1],c=r[5],h=r[9],u=r[2],f=r[6],d=r[10];switch(n){case"XYZ":this._y=Math.asin(Jt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Jt(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(Jt(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-Jt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-a,c));break;case"YZX":this._z=Math.asin(Jt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-Jt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(o,s)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,n,i){return Rp.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Rp,n,i)}setFromVector3(e,n=this._order){return this.set(e.x,e.y,e.z,n)}reorder(e){return Pp.setFromEuler(this),this.setFromQuaternion(Pp,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}};Ld.DEFAULT_ORDER="XYZ";let wh=class{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}},$_=0;const Lp=new K,Ts=new wn,Oi=new Mt,Sl=new K,Na=new K,Y_=new K,Z_=new wn,Ip=new K(1,0,0),Dp=new K(0,1,0),Np=new K(0,0,1),j_={type:"added"},J_={type:"removed"};let Ft=class _c extends Ni{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:$_++}),this.uuid=qn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=_c.DEFAULT_UP.clone();const e=new K,n=new Ld,i=new wn,r=new K(1,1,1);function s(){i.setFromEuler(n,!1)}function a(){n.setFromQuaternion(i,void 0,!1)}n._onChange(s),i._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:n},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Mt},normalMatrix:{value:new Pt}}),this.matrix=new Mt,this.matrixWorld=new Mt,this.matrixAutoUpdate=_c.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=_c.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new wh,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,n){this.quaternion.setFromAxisAngle(e,n)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,n){return Ts.setFromAxisAngle(e,n),this.quaternion.multiply(Ts),this}rotateOnWorldAxis(e,n){return Ts.setFromAxisAngle(e,n),this.quaternion.premultiply(Ts),this}rotateX(e){return this.rotateOnAxis(Ip,e)}rotateY(e){return this.rotateOnAxis(Dp,e)}rotateZ(e){return this.rotateOnAxis(Np,e)}translateOnAxis(e,n){return Lp.copy(e).applyQuaternion(this.quaternion),this.position.add(Lp.multiplyScalar(n)),this}translateX(e){return this.translateOnAxis(Ip,e)}translateY(e){return this.translateOnAxis(Dp,e)}translateZ(e){return this.translateOnAxis(Np,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Oi.copy(this.matrixWorld).invert())}lookAt(e,n,i){e.isVector3?Sl.copy(e):Sl.set(e,n,i);const r=this.parent;this.updateWorldMatrix(!0,!1),Na.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Oi.lookAt(Na,Sl,this.up):Oi.lookAt(Sl,Na,this.up),this.quaternion.setFromRotationMatrix(Oi),r&&(Oi.extractRotation(r.matrixWorld),Ts.setFromRotationMatrix(Oi),this.quaternion.premultiply(Ts.invert()))}add(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.add(arguments[n]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(j_)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const n=this.children.indexOf(e);return n!==-1&&(e.parent=null,this.children.splice(n,1),e.dispatchEvent(J_)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Oi.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Oi.multiply(e.parent.matrixWorld)),e.applyMatrix4(Oi),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,n){if(this[e]===n)return this;for(let i=0,r=this.children.length;i<r;i++){const a=this.children[i].getObjectByProperty(e,n);if(a!==void 0)return a}}getObjectsByProperty(e,n,i=[]){this[e]===n&&i.push(this);const r=this.children;for(let s=0,a=r.length;s<a;s++)r[s].getObjectsByProperty(e,n,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Na,e,Y_),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Na,Z_,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const n=this.matrixWorld.elements;return e.set(n[8],n[9],n[10]).normalize()}raycast(){}traverse(e){e(this);const n=this.children;for(let i=0,r=n.length;i<r;i++)n[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const n=this.children;for(let i=0,r=n.length;i<r;i++)n[i].traverseVisible(e)}traverseAncestors(e){const n=this.parent;n!==null&&(e(n),n.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const n=this.children;for(let i=0,r=n.length;i<r;i++){const s=n[i];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,n){const i=this.parent;if(e===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),n===!0){const r=this.children;for(let s=0,a=r.length;s<a;s++){const o=r[s];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(e){const n=e===void 0||typeof e=="string",i={};n&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.visibility=this._visibility,r.active=this._active,r.bounds=this._bounds.map(o=>({boxInitialized:o.boxInitialized,boxMin:o.box.min.toArray(),boxMax:o.box.max.toArray(),sphereInitialized:o.sphereInitialized,sphereRadius:o.sphere.radius,sphereCenter:o.sphere.center.toArray()})),r.maxGeometryCount=this._maxGeometryCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.geometryCount=this._geometryCount,r.matricesTexture=this._matricesTexture.toJSON(e),this.boundingSphere!==null&&(r.boundingSphere={center:r.boundingSphere.center.toArray(),radius:r.boundingSphere.radius}),this.boundingBox!==null&&(r.boundingBox={min:r.boundingBox.min.toArray(),max:r.boundingBox.max.toArray()}));function s(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const u=l[c];s(e.shapes,u)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,c=this.material.length;l<c;l++)o.push(s(e.materials,this.material[l]));r.material=o}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let o=0;o<this.children.length;o++)r.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];r.animations.push(s(e.animations,l))}}if(n){const o=a(e.geometries),l=a(e.materials),c=a(e.textures),h=a(e.images),u=a(e.shapes),f=a(e.skeletons),d=a(e.animations),p=a(e.nodes);o.length>0&&(i.geometries=o),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),h.length>0&&(i.images=h),u.length>0&&(i.shapes=u),f.length>0&&(i.skeletons=f),d.length>0&&(i.animations=d),p.length>0&&(i.nodes=p)}return i.object=r,i;function a(o){const l=[];for(const c in o){const h=o[c];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,n=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),n===!0)for(let i=0;i<e.children.length;i++){const r=e.children[i];this.add(r.clone())}return this}};Ft.DEFAULT_UP=new K(0,1,0);Ft.DEFAULT_MATRIX_AUTO_UPDATE=!0;Ft.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const hi=new K,zi=new K,Yh=new K,Gi=new K,As=new K,Cs=new K,Bp=new K,Zh=new K,jh=new K,Jh=new K;let es=class Hs{constructor(e=new K,n=new K,i=new K){this.a=e,this.b=n,this.c=i}static getNormal(e,n,i,r){r.subVectors(i,n),hi.subVectors(e,n),r.cross(hi);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,n,i,r,s){hi.subVectors(r,n),zi.subVectors(i,n),Yh.subVectors(e,n);const a=hi.dot(hi),o=hi.dot(zi),l=hi.dot(Yh),c=zi.dot(zi),h=zi.dot(Yh),u=a*c-o*o;if(u===0)return s.set(0,0,0),null;const f=1/u,d=(c*l-o*h)*f,p=(a*h-o*l)*f;return s.set(1-d-p,p,d)}static containsPoint(e,n,i,r){return this.getBarycoord(e,n,i,r,Gi)===null?!1:Gi.x>=0&&Gi.y>=0&&Gi.x+Gi.y<=1}static getInterpolation(e,n,i,r,s,a,o,l){return this.getBarycoord(e,n,i,r,Gi)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,Gi.x),l.addScaledVector(a,Gi.y),l.addScaledVector(o,Gi.z),l)}static isFrontFacing(e,n,i,r){return hi.subVectors(i,n),zi.subVectors(e,n),hi.cross(zi).dot(r)<0}set(e,n,i){return this.a.copy(e),this.b.copy(n),this.c.copy(i),this}setFromPointsAndIndices(e,n,i,r){return this.a.copy(e[n]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,n,i,r){return this.a.fromBufferAttribute(e,n),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return hi.subVectors(this.c,this.b),zi.subVectors(this.a,this.b),hi.cross(zi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Hs.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,n){return Hs.getBarycoord(e,this.a,this.b,this.c,n)}getInterpolation(e,n,i,r,s){return Hs.getInterpolation(e,this.a,this.b,this.c,n,i,r,s)}containsPoint(e){return Hs.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Hs.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,n){const i=this.a,r=this.b,s=this.c;let a,o;As.subVectors(r,i),Cs.subVectors(s,i),Zh.subVectors(e,i);const l=As.dot(Zh),c=Cs.dot(Zh);if(l<=0&&c<=0)return n.copy(i);jh.subVectors(e,r);const h=As.dot(jh),u=Cs.dot(jh);if(h>=0&&u<=h)return n.copy(r);const f=l*u-h*c;if(f<=0&&l>=0&&h<=0)return a=l/(l-h),n.copy(i).addScaledVector(As,a);Jh.subVectors(e,s);const d=As.dot(Jh),p=Cs.dot(Jh);if(p>=0&&d<=p)return n.copy(s);const g=d*c-l*p;if(g<=0&&c>=0&&p<=0)return o=c/(c-p),n.copy(i).addScaledVector(Cs,o);const v=h*p-d*u;if(v<=0&&u-h>=0&&d-p>=0)return Bp.subVectors(s,r),o=(u-h)/(u-h+(d-p)),n.copy(r).addScaledVector(Bp,o);const m=1/(v+g+f);return a=g*m,o=f*m,n.copy(i).addScaledVector(As,a).addScaledVector(Cs,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}};const jg={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},cr={h:0,s:0,l:0},El={h:0,s:0,l:0};function Kh(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+(e-t)*6*n:n<1/2?e:n<2/3?t+(e-t)*6*(2/3-n):t}let rt=class{constructor(e,n,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,n,i)}set(e,n,i){if(n===void 0&&i===void 0){const r=e;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(e,n,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,n=on){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Bt.toWorkingColorSpace(this,n),this}setRGB(e,n,i,r=Bt.workingColorSpace){return this.r=e,this.g=n,this.b=i,Bt.toWorkingColorSpace(this,r),this}setHSL(e,n,i,r=Bt.workingColorSpace){if(e=Cd(e,1),n=Jt(n,0,1),i=Jt(i,0,1),n===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+n):i+n-i*n,a=2*i-s;this.r=Kh(a,s,e+1/3),this.g=Kh(a,s,e),this.b=Kh(a,s,e-1/3)}return Bt.toWorkingColorSpace(this,r),this}setStyle(e,n=on){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const a=r[1],o=r[2];switch(a){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,n);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,n);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,n);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],a=s.length;if(a===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,n);if(a===6)return this.setHex(parseInt(s,16),n);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,n);return this}setColorName(e,n=on){const i=jg[e.toLowerCase()];return i!==void 0?this.setHex(i,n):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Js(e.r),this.g=Js(e.g),this.b=Js(e.b),this}copyLinearToSRGB(e){return this.r=Gh(e.r),this.g=Gh(e.g),this.b=Gh(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=on){return Bt.fromWorkingColorSpace(_n.copy(this),e),Math.round(Jt(_n.r*255,0,255))*65536+Math.round(Jt(_n.g*255,0,255))*256+Math.round(Jt(_n.b*255,0,255))}getHexString(e=on){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,n=Bt.workingColorSpace){Bt.fromWorkingColorSpace(_n.copy(this),n);const i=_n.r,r=_n.g,s=_n.b,a=Math.max(i,r,s),o=Math.min(i,r,s);let l,c;const h=(o+a)/2;if(o===a)l=0,c=0;else{const u=a-o;switch(c=h<=.5?u/(a+o):u/(2-a-o),a){case i:l=(r-s)/u+(r<s?6:0);break;case r:l=(s-i)/u+2;break;case s:l=(i-r)/u+4;break}l/=6}return e.h=l,e.s=c,e.l=h,e}getRGB(e,n=Bt.workingColorSpace){return Bt.fromWorkingColorSpace(_n.copy(this),n),e.r=_n.r,e.g=_n.g,e.b=_n.b,e}getStyle(e=on){Bt.fromWorkingColorSpace(_n.copy(this),e);const n=_n.r,i=_n.g,r=_n.b;return e!==on?`color(${e} ${n.toFixed(3)} ${i.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(n*255)},${Math.round(i*255)},${Math.round(r*255)})`}offsetHSL(e,n,i){return this.getHSL(cr),this.setHSL(cr.h+e,cr.s+n,cr.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,n){return this.r=e.r+n.r,this.g=e.g+n.g,this.b=e.b+n.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,n){return this.r+=(e.r-this.r)*n,this.g+=(e.g-this.g)*n,this.b+=(e.b-this.b)*n,this}lerpColors(e,n,i){return this.r=e.r+(n.r-e.r)*i,this.g=e.g+(n.g-e.g)*i,this.b=e.b+(n.b-e.b)*i,this}lerpHSL(e,n){this.getHSL(cr),e.getHSL(El);const i=$a(cr.h,El.h,n),r=$a(cr.s,El.s,n),s=$a(cr.l,El.l,n);return this.setHSL(i,r,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const n=this.r,i=this.g,r=this.b,s=e.elements;return this.r=s[0]*n+s[3]*i+s[6]*r,this.g=s[1]*n+s[4]*i+s[7]*r,this.b=s[2]*n+s[5]*i+s[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,n=0){return this.r=e[n],this.g=e[n+1],this.b=e[n+2],this}toArray(e=[],n=0){return e[n]=this.r,e[n+1]=this.g,e[n+2]=this.b,e}fromBufferAttribute(e,n){return this.r=e.getX(n),this.g=e.getY(n),this.b=e.getZ(n),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};const _n=new rt;rt.NAMES=jg;let K_=0,En=class extends Ni{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:K_++}),this.uuid=qn(),this.name="",this.type="Material",this.blending=is,this.side=Ji,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Ec,this.blendDst=Tc,this.blendEquation=dr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new rt(0,0,0),this.blendAlpha=0,this.depthFunc=Qa,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=gf,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Xr,this.stencilZFail=Xr,this.stencilZPass=Xr,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const n in e){const i=e[n];if(i===void 0){console.warn(`THREE.Material: parameter '${n}' has value of undefined.`);continue}const r=this[n];if(r===void 0){console.warn(`THREE.Material: '${n}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[n]=i}}toJSON(e){const n=e===void 0||typeof e=="string";n&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==is&&(i.blending=this.blending),this.side!==Ji&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==Ec&&(i.blendSrc=this.blendSrc),this.blendDst!==Tc&&(i.blendDst=this.blendDst),this.blendEquation!==dr&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==Qa&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==gf&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Xr&&(i.stencilFail=this.stencilFail),this.stencilZFail!==Xr&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==Xr&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function r(s){const a=[];for(const o in s){const l=s[o];delete l.metadata,a.push(l)}return a}if(n){const s=r(e.textures),a=r(e.images);s.length>0&&(i.textures=s),a.length>0&&(i.images=a)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const n=e.clippingPlanes;let i=null;if(n!==null){const r=n.length;i=new Array(r);for(let s=0;s!==r;++s)i[s]=n[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}},Pr=class extends En{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new rt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=cl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}};const Xi=Q_();function Q_(){const t=new ArrayBuffer(4),e=new Float32Array(t),n=new Uint32Array(t),i=new Uint32Array(512),r=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(i[l]=0,i[l|256]=32768,r[l]=24,r[l|256]=24):c<-14?(i[l]=1024>>-c-14,i[l|256]=1024>>-c-14|32768,r[l]=-c-1,r[l|256]=-c-1):c<=15?(i[l]=c+15<<10,i[l|256]=c+15<<10|32768,r[l]=13,r[l|256]=13):c<128?(i[l]=31744,i[l|256]=64512,r[l]=24,r[l|256]=24):(i[l]=31744,i[l|256]=64512,r[l]=13,r[l|256]=13)}const s=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,h=0;for(;!(c&8388608);)c<<=1,h-=8388608;c&=-8388609,h+=947912704,s[l]=c|h}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)a[l]=l<<23;a[31]=1199570944,a[32]=2147483648;for(let l=33;l<63;++l)a[l]=2147483648+(l-32<<23);a[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(o[l]=1024);return{floatView:e,uint32View:n,baseTable:i,shiftTable:r,mantissaTable:s,exponentTable:a,offsetTable:o}}function Bn(t){Math.abs(t)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),t=Jt(t,-65504,65504),Xi.floatView[0]=t;const e=Xi.uint32View[0],n=e>>23&511;return Xi.baseTable[n]+((e&8388607)>>Xi.shiftTable[n])}function ka(t){const e=t>>10;return Xi.uint32View[0]=Xi.mantissaTable[Xi.offsetTable[e]+(t&1023)]+Xi.exponentTable[e],Xi.floatView[0]}const eM={toHalfFloat:Bn,fromHalfFloat:ka},sn=new K,Tl=new De;let Ut=class{constructor(e,n,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=n,this.count=e!==void 0?e.length/n:0,this.normalized=i,this.usage=ho,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=ti,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return ss("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,n){this.updateRanges.push({start:e,count:n})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,n,i){e*=this.itemSize,i*=n.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=n.array[i+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let n=0,i=this.count;n<i;n++)Tl.fromBufferAttribute(this,n),Tl.applyMatrix3(e),this.setXY(n,Tl.x,Tl.y);else if(this.itemSize===3)for(let n=0,i=this.count;n<i;n++)sn.fromBufferAttribute(this,n),sn.applyMatrix3(e),this.setXYZ(n,sn.x,sn.y,sn.z);return this}applyMatrix4(e){for(let n=0,i=this.count;n<i;n++)sn.fromBufferAttribute(this,n),sn.applyMatrix4(e),this.setXYZ(n,sn.x,sn.y,sn.z);return this}applyNormalMatrix(e){for(let n=0,i=this.count;n<i;n++)sn.fromBufferAttribute(this,n),sn.applyNormalMatrix(e),this.setXYZ(n,sn.x,sn.y,sn.z);return this}transformDirection(e){for(let n=0,i=this.count;n<i;n++)sn.fromBufferAttribute(this,n),sn.transformDirection(e),this.setXYZ(n,sn.x,sn.y,sn.z);return this}set(e,n=0){return this.array.set(e,n),this}getComponent(e,n){let i=this.array[e*this.itemSize+n];return this.normalized&&(i=Cn(i,this.array)),i}setComponent(e,n,i){return this.normalized&&(i=St(i,this.array)),this.array[e*this.itemSize+n]=i,this}getX(e){let n=this.array[e*this.itemSize];return this.normalized&&(n=Cn(n,this.array)),n}setX(e,n){return this.normalized&&(n=St(n,this.array)),this.array[e*this.itemSize]=n,this}getY(e){let n=this.array[e*this.itemSize+1];return this.normalized&&(n=Cn(n,this.array)),n}setY(e,n){return this.normalized&&(n=St(n,this.array)),this.array[e*this.itemSize+1]=n,this}getZ(e){let n=this.array[e*this.itemSize+2];return this.normalized&&(n=Cn(n,this.array)),n}setZ(e,n){return this.normalized&&(n=St(n,this.array)),this.array[e*this.itemSize+2]=n,this}getW(e){let n=this.array[e*this.itemSize+3];return this.normalized&&(n=Cn(n,this.array)),n}setW(e,n){return this.normalized&&(n=St(n,this.array)),this.array[e*this.itemSize+3]=n,this}setXY(e,n,i){return e*=this.itemSize,this.normalized&&(n=St(n,this.array),i=St(i,this.array)),this.array[e+0]=n,this.array[e+1]=i,this}setXYZ(e,n,i,r){return e*=this.itemSize,this.normalized&&(n=St(n,this.array),i=St(i,this.array),r=St(r,this.array)),this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,n,i,r,s){return e*=this.itemSize,this.normalized&&(n=St(n,this.array),i=St(i,this.array),r=St(r,this.array),s=St(s,this.array)),this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==ho&&(e.usage=this.usage),e}},tM=class extends Ut{constructor(e,n,i){super(new Int8Array(e),n,i)}},nM=class extends Ut{constructor(e,n,i){super(new Uint8Array(e),n,i)}},iM=class extends Ut{constructor(e,n,i){super(new Uint8ClampedArray(e),n,i)}},rM=class extends Ut{constructor(e,n,i){super(new Int16Array(e),n,i)}},Id=class extends Ut{constructor(e,n,i){super(new Uint16Array(e),n,i)}},sM=class extends Ut{constructor(e,n,i){super(new Int32Array(e),n,i)}},Dd=class extends Ut{constructor(e,n,i){super(new Uint32Array(e),n,i)}};class aM extends Ut{constructor(e,n,i){super(new Uint16Array(e),n,i),this.isFloat16BufferAttribute=!0}getX(e){let n=ka(this.array[e*this.itemSize]);return this.normalized&&(n=Cn(n,this.array)),n}setX(e,n){return this.normalized&&(n=St(n,this.array)),this.array[e*this.itemSize]=Bn(n),this}getY(e){let n=ka(this.array[e*this.itemSize+1]);return this.normalized&&(n=Cn(n,this.array)),n}setY(e,n){return this.normalized&&(n=St(n,this.array)),this.array[e*this.itemSize+1]=Bn(n),this}getZ(e){let n=ka(this.array[e*this.itemSize+2]);return this.normalized&&(n=Cn(n,this.array)),n}setZ(e,n){return this.normalized&&(n=St(n,this.array)),this.array[e*this.itemSize+2]=Bn(n),this}getW(e){let n=ka(this.array[e*this.itemSize+3]);return this.normalized&&(n=Cn(n,this.array)),n}setW(e,n){return this.normalized&&(n=St(n,this.array)),this.array[e*this.itemSize+3]=Bn(n),this}setXY(e,n,i){return e*=this.itemSize,this.normalized&&(n=St(n,this.array),i=St(i,this.array)),this.array[e+0]=Bn(n),this.array[e+1]=Bn(i),this}setXYZ(e,n,i,r){return e*=this.itemSize,this.normalized&&(n=St(n,this.array),i=St(i,this.array),r=St(r,this.array)),this.array[e+0]=Bn(n),this.array[e+1]=Bn(i),this.array[e+2]=Bn(r),this}setXYZW(e,n,i,r,s){return e*=this.itemSize,this.normalized&&(n=St(n,this.array),i=St(i,this.array),r=St(r,this.array),s=St(s,this.array)),this.array[e+0]=Bn(n),this.array[e+1]=Bn(i),this.array[e+2]=Bn(r),this.array[e+3]=Bn(s),this}}let ht=class extends Ut{constructor(e,n,i){super(new Float32Array(e),n,i)}},oM=class extends Ut{constructor(e,n,i){super(new Float64Array(e),n,i)}},lM=0;const ei=new Mt,Qh=new Ft,Rs=new K,Vn=new In,Ba=new In,fn=new K;let Lt=class Jg extends Ni{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:lM++}),this.uuid=qn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Wg(e)?Dd:Id)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,n){return this.attributes[e]=n,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,n,i=0){this.groups.push({start:e,count:n,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,n){this.drawRange.start=e,this.drawRange.count=n}applyMatrix4(e){const n=this.attributes.position;n!==void 0&&(n.applyMatrix4(e),n.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new Pt().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return ei.makeRotationFromQuaternion(e),this.applyMatrix4(ei),this}rotateX(e){return ei.makeRotationX(e),this.applyMatrix4(ei),this}rotateY(e){return ei.makeRotationY(e),this.applyMatrix4(ei),this}rotateZ(e){return ei.makeRotationZ(e),this.applyMatrix4(ei),this}translate(e,n,i){return ei.makeTranslation(e,n,i),this.applyMatrix4(ei),this}scale(e,n,i){return ei.makeScale(e,n,i),this.applyMatrix4(ei),this}lookAt(e){return Qh.lookAt(e),Qh.updateMatrix(),this.applyMatrix4(Qh.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Rs).negate(),this.translate(Rs.x,Rs.y,Rs.z),this}setFromPoints(e){const n=[];for(let i=0,r=e.length;i<r;i++){const s=e[i];n.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new ht(n,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new In);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new K(-1/0,-1/0,-1/0),new K(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),n)for(let i=0,r=n.length;i<r;i++){const s=n[i];Vn.setFromBufferAttribute(s),this.morphTargetsRelative?(fn.addVectors(this.boundingBox.min,Vn.min),this.boundingBox.expandByPoint(fn),fn.addVectors(this.boundingBox.max,Vn.max),this.boundingBox.expandByPoint(fn)):(this.boundingBox.expandByPoint(Vn.min),this.boundingBox.expandByPoint(Vn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Sn);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new K,1/0);return}if(e){const i=this.boundingSphere.center;if(Vn.setFromBufferAttribute(e),n)for(let s=0,a=n.length;s<a;s++){const o=n[s];Ba.setFromBufferAttribute(o),this.morphTargetsRelative?(fn.addVectors(Vn.min,Ba.min),Vn.expandByPoint(fn),fn.addVectors(Vn.max,Ba.max),Vn.expandByPoint(fn)):(Vn.expandByPoint(Ba.min),Vn.expandByPoint(Ba.max))}Vn.getCenter(i);let r=0;for(let s=0,a=e.count;s<a;s++)fn.fromBufferAttribute(e,s),r=Math.max(r,i.distanceToSquared(fn));if(n)for(let s=0,a=n.length;s<a;s++){const o=n[s],l=this.morphTargetsRelative;for(let c=0,h=o.count;c<h;c++)fn.fromBufferAttribute(o,c),l&&(Rs.fromBufferAttribute(e,c),fn.add(Rs)),r=Math.max(r,i.distanceToSquared(fn))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,n=this.attributes;if(e===null||n.position===void 0||n.normal===void 0||n.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.array,r=n.position.array,s=n.normal.array,a=n.uv.array,o=r.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Ut(new Float32Array(4*o),4));const l=this.getAttribute("tangent").array,c=[],h=[];for(let M=0;M<o;M++)c[M]=new K,h[M]=new K;const u=new K,f=new K,d=new K,p=new De,g=new De,v=new De,m=new K,y=new K;function x(M,E,N){u.fromArray(r,M*3),f.fromArray(r,E*3),d.fromArray(r,N*3),p.fromArray(a,M*2),g.fromArray(a,E*2),v.fromArray(a,N*2),f.sub(u),d.sub(u),g.sub(p),v.sub(p);const k=1/(g.x*v.y-v.x*g.y);isFinite(k)&&(m.copy(f).multiplyScalar(v.y).addScaledVector(d,-g.y).multiplyScalar(k),y.copy(d).multiplyScalar(g.x).addScaledVector(f,-v.x).multiplyScalar(k),c[M].add(m),c[E].add(m),c[N].add(m),h[M].add(y),h[E].add(y),h[N].add(y))}let _=this.groups;_.length===0&&(_=[{start:0,count:i.length}]);for(let M=0,E=_.length;M<E;++M){const N=_[M],k=N.start,F=N.count;for(let V=k,ee=k+F;V<ee;V+=3)x(i[V+0],i[V+1],i[V+2])}const b=new K,w=new K,S=new K,C=new K;function L(M){S.fromArray(s,M*3),C.copy(S);const E=c[M];b.copy(E),b.sub(S.multiplyScalar(S.dot(E))).normalize(),w.crossVectors(C,E);const k=w.dot(h[M])<0?-1:1;l[M*4]=b.x,l[M*4+1]=b.y,l[M*4+2]=b.z,l[M*4+3]=k}for(let M=0,E=_.length;M<E;++M){const N=_[M],k=N.start,F=N.count;for(let V=k,ee=k+F;V<ee;V+=3)L(i[V+0]),L(i[V+1]),L(i[V+2])}}computeVertexNormals(){const e=this.index,n=this.getAttribute("position");if(n!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Ut(new Float32Array(n.count*3),3),this.setAttribute("normal",i);else for(let f=0,d=i.count;f<d;f++)i.setXYZ(f,0,0,0);const r=new K,s=new K,a=new K,o=new K,l=new K,c=new K,h=new K,u=new K;if(e)for(let f=0,d=e.count;f<d;f+=3){const p=e.getX(f+0),g=e.getX(f+1),v=e.getX(f+2);r.fromBufferAttribute(n,p),s.fromBufferAttribute(n,g),a.fromBufferAttribute(n,v),h.subVectors(a,s),u.subVectors(r,s),h.cross(u),o.fromBufferAttribute(i,p),l.fromBufferAttribute(i,g),c.fromBufferAttribute(i,v),o.add(h),l.add(h),c.add(h),i.setXYZ(p,o.x,o.y,o.z),i.setXYZ(g,l.x,l.y,l.z),i.setXYZ(v,c.x,c.y,c.z)}else for(let f=0,d=n.count;f<d;f+=3)r.fromBufferAttribute(n,f+0),s.fromBufferAttribute(n,f+1),a.fromBufferAttribute(n,f+2),h.subVectors(a,s),u.subVectors(r,s),h.cross(u),i.setXYZ(f+0,h.x,h.y,h.z),i.setXYZ(f+1,h.x,h.y,h.z),i.setXYZ(f+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let n=0,i=e.count;n<i;n++)fn.fromBufferAttribute(e,n),fn.normalize(),e.setXYZ(n,fn.x,fn.y,fn.z)}toNonIndexed(){function e(o,l){const c=o.array,h=o.itemSize,u=o.normalized,f=new c.constructor(l.length*h);let d=0,p=0;for(let g=0,v=l.length;g<v;g++){o.isInterleavedBufferAttribute?d=l[g]*o.data.stride+o.offset:d=l[g]*h;for(let m=0;m<h;m++)f[p++]=c[d++]}return new Ut(f,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const n=new Jg,i=this.index.array,r=this.attributes;for(const o in r){const l=r[o],c=e(l,i);n.setAttribute(o,c)}const s=this.morphAttributes;for(const o in s){const l=[],c=s[o];for(let h=0,u=c.length;h<u;h++){const f=c[h],d=e(f,i);l.push(d)}n.morphAttributes[o]=l}n.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const c=a[o];n.addGroup(c.start,c.count,c.materialIndex)}return n}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const n=this.index;n!==null&&(e.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,f=c.length;u<f;u++){const d=c[u];h.push(d.toJSON(e.data))}h.length>0&&(r[l]=h,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const n={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(n));const r=e.attributes;for(const c in r){const h=r[c];this.setAttribute(c,h.clone(n))}const s=e.morphAttributes;for(const c in s){const h=[],u=s[c];for(let f=0,d=u.length;f<d;f++)h.push(u[f].clone(n));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let c=0,h=a.length;c<h;c++){const u=a[c];this.addGroup(u.start,u.count,u.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}};const Up=new Mt,Br=new gs,Al=new Sn,Fp=new K,Ps=new K,Ls=new K,Is=new K,eu=new K,Cl=new K,Rl=new De,Pl=new De,Ll=new De,Op=new K,zp=new K,Gp=new K,Il=new K,Dl=new K;let an=class extends Ft{constructor(e=new Lt,n=new Pr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=n,this.updateMorphTargets()}copy(e,n){return super.copy(e,n),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const n=this.geometry.morphAttributes,i=Object.keys(n);if(i.length>0){const r=n[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=r.length;s<a;s++){const o=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}getVertexPosition(e,n){const i=this.geometry,r=i.attributes.position,s=i.morphAttributes.position,a=i.morphTargetsRelative;n.fromBufferAttribute(r,e);const o=this.morphTargetInfluences;if(s&&o){Cl.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const h=o[l],u=s[l];h!==0&&(eu.fromBufferAttribute(u,e),a?Cl.addScaledVector(eu,h):Cl.addScaledVector(eu.sub(n),h))}n.add(Cl)}return n}raycast(e,n){const i=this.geometry,r=this.material,s=this.matrixWorld;r!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),Al.copy(i.boundingSphere),Al.applyMatrix4(s),Br.copy(e.ray).recast(e.near),!(Al.containsPoint(Br.origin)===!1&&(Br.intersectSphere(Al,Fp)===null||Br.origin.distanceToSquared(Fp)>(e.far-e.near)**2))&&(Up.copy(s).invert(),Br.copy(e.ray).applyMatrix4(Up),!(i.boundingBox!==null&&Br.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,n,Br)))}_computeIntersections(e,n,i){let r;const s=this.geometry,a=this.material,o=s.index,l=s.attributes.position,c=s.attributes.uv,h=s.attributes.uv1,u=s.attributes.normal,f=s.groups,d=s.drawRange;if(o!==null)if(Array.isArray(a))for(let p=0,g=f.length;p<g;p++){const v=f[p],m=a[v.materialIndex],y=Math.max(v.start,d.start),x=Math.min(o.count,Math.min(v.start+v.count,d.start+d.count));for(let _=y,b=x;_<b;_+=3){const w=o.getX(_),S=o.getX(_+1),C=o.getX(_+2);r=Nl(this,m,e,i,c,h,u,w,S,C),r&&(r.faceIndex=Math.floor(_/3),r.face.materialIndex=v.materialIndex,n.push(r))}}else{const p=Math.max(0,d.start),g=Math.min(o.count,d.start+d.count);for(let v=p,m=g;v<m;v+=3){const y=o.getX(v),x=o.getX(v+1),_=o.getX(v+2);r=Nl(this,a,e,i,c,h,u,y,x,_),r&&(r.faceIndex=Math.floor(v/3),n.push(r))}}else if(l!==void 0)if(Array.isArray(a))for(let p=0,g=f.length;p<g;p++){const v=f[p],m=a[v.materialIndex],y=Math.max(v.start,d.start),x=Math.min(l.count,Math.min(v.start+v.count,d.start+d.count));for(let _=y,b=x;_<b;_+=3){const w=_,S=_+1,C=_+2;r=Nl(this,m,e,i,c,h,u,w,S,C),r&&(r.faceIndex=Math.floor(_/3),r.face.materialIndex=v.materialIndex,n.push(r))}}else{const p=Math.max(0,d.start),g=Math.min(l.count,d.start+d.count);for(let v=p,m=g;v<m;v+=3){const y=v,x=v+1,_=v+2;r=Nl(this,a,e,i,c,h,u,y,x,_),r&&(r.faceIndex=Math.floor(v/3),n.push(r))}}}};function cM(t,e,n,i,r,s,a,o){let l;if(e.side===Ln?l=i.intersectTriangle(a,s,r,!0,o):l=i.intersectTriangle(r,s,a,e.side===Ji,o),l===null)return null;Dl.copy(o),Dl.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(Dl);return c<n.near||c>n.far?null:{distance:c,point:Dl.clone(),object:t}}function Nl(t,e,n,i,r,s,a,o,l,c){t.getVertexPosition(o,Ps),t.getVertexPosition(l,Ls),t.getVertexPosition(c,Is);const h=cM(t,e,n,i,Ps,Ls,Is,Il);if(h){r&&(Rl.fromBufferAttribute(r,o),Pl.fromBufferAttribute(r,l),Ll.fromBufferAttribute(r,c),h.uv=es.getInterpolation(Il,Ps,Ls,Is,Rl,Pl,Ll,new De)),s&&(Rl.fromBufferAttribute(s,o),Pl.fromBufferAttribute(s,l),Ll.fromBufferAttribute(s,c),h.uv1=es.getInterpolation(Il,Ps,Ls,Is,Rl,Pl,Ll,new De),h.uv2=h.uv1),a&&(Op.fromBufferAttribute(a,o),zp.fromBufferAttribute(a,l),Gp.fromBufferAttribute(a,c),h.normal=es.getInterpolation(Il,Ps,Ls,Is,Op,zp,Gp,new K),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const u={a:o,b:l,c,normal:new K,materialIndex:0};es.getNormal(Ps,Ls,Is,u.normal),h.face=u}return h}let ul=class Kg extends Lt{constructor(e=1,n=1,i=1,r=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:n,depth:i,widthSegments:r,heightSegments:s,depthSegments:a};const o=this;r=Math.floor(r),s=Math.floor(s),a=Math.floor(a);const l=[],c=[],h=[],u=[];let f=0,d=0;p("z","y","x",-1,-1,i,n,e,a,s,0),p("z","y","x",1,-1,i,n,-e,a,s,1),p("x","z","y",1,1,e,i,n,r,a,2),p("x","z","y",1,-1,e,i,-n,r,a,3),p("x","y","z",1,-1,e,n,i,r,s,4),p("x","y","z",-1,-1,e,n,-i,r,s,5),this.setIndex(l),this.setAttribute("position",new ht(c,3)),this.setAttribute("normal",new ht(h,3)),this.setAttribute("uv",new ht(u,2));function p(g,v,m,y,x,_,b,w,S,C,L){const M=_/S,E=b/C,N=_/2,k=b/2,F=w/2,V=S+1,ee=C+1;let R=0,T=0;const H=new K;for(let O=0;O<ee;O++){const B=O*E-k;for(let q=0;q<V;q++){const G=q*M-N;H[g]=G*y,H[v]=B*x,H[m]=F,c.push(H.x,H.y,H.z),H[g]=0,H[v]=0,H[m]=w>0?1:-1,h.push(H.x,H.y,H.z),u.push(q/S),u.push(1-O/C),R+=1}}for(let O=0;O<C;O++)for(let B=0;B<S;B++){const q=f+B+V*O,G=f+B+V*(O+1),A=f+(B+1)+V*(O+1),U=f+(B+1)+V*O;l.push(q,G,U),l.push(G,A,U),T+=6}o.addGroup(d,T,L),d+=T,f+=R}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Kg(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}};function na(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[n][i]=null):e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function An(t){const e={};for(let n=0;n<t.length;n++){const i=na(t[n]);for(const r in i)e[r]=i[r]}return e}function hM(t){const e=[];for(let n=0;n<t.length;n++)e.push(t[n].clone());return e}function Qg(t){return t.getRenderTarget()===null?t.outputColorSpace:Bt.workingColorSpace}const ey={clone:na,merge:An};var uM=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,fM=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;let vi=class extends En{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=uM,this.fragmentShader=fM,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1,clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=na(e.uniforms),this.uniformsGroups=hM(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const n=super.toJSON(e);n.glslVersion=this.glslVersion,n.uniforms={};for(const r in this.uniforms){const a=this.uniforms[r].value;a&&a.isTexture?n.uniforms[r]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?n.uniforms[r]={type:"c",value:a.getHex()}:a&&a.isVector2?n.uniforms[r]={type:"v2",value:a.toArray()}:a&&a.isVector3?n.uniforms[r]={type:"v3",value:a.toArray()}:a&&a.isVector4?n.uniforms[r]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?n.uniforms[r]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?n.uniforms[r]={type:"m4",value:a.toArray()}:n.uniforms[r]={value:a}}Object.keys(this.defines).length>0&&(n.defines=this.defines),n.vertexShader=this.vertexShader,n.fragmentShader=this.fragmentShader,n.lights=this.lights,n.clipping=this.clipping;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(n.extensions=i),n}},Sh=class extends Ft{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Mt,this.projectionMatrix=new Mt,this.projectionMatrixInverse=new Mt,this.coordinateSystem=Ai}copy(e,n){return super.copy(e,n),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,n){super.updateWorldMatrix(e,n),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}};const hr=new K,Vp=new De,Hp=new De;let pn=class extends Sh{constructor(e=50,n=1,i=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=n,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const n=.5*this.getFilmHeight()/e;this.fov=ta*2*Math.atan(n),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(rs*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return ta*2*Math.atan(Math.tan(rs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,n,i){hr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(hr.x,hr.y).multiplyScalar(-e/hr.z),hr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(hr.x,hr.y).multiplyScalar(-e/hr.z)}getViewSize(e,n){return this.getViewBounds(e,Vp,Hp),n.subVectors(Hp,Vp)}setViewOffset(e,n,i,r,s,a){this.aspect=e/n,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let n=e*Math.tan(rs*.5*this.fov)/this.zoom,i=2*n,r=this.aspect*i,s=-.5*r;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,c=a.fullHeight;s+=a.offsetX*r/l,n-=a.offsetY*i/c,r*=a.width/l,i*=a.height/c}const o=this.filmOffset;o!==0&&(s+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,n,n-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.fov=this.fov,n.object.zoom=this.zoom,n.object.near=this.near,n.object.far=this.far,n.object.focus=this.focus,n.object.aspect=this.aspect,this.view!==null&&(n.object.view=Object.assign({},this.view)),n.object.filmGauge=this.filmGauge,n.object.filmOffset=this.filmOffset,n}};const Ds=-90,Ns=1;let ty=class extends Ft{constructor(e,n,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new pn(Ds,Ns,e,n);r.layers=this.layers,this.add(r);const s=new pn(Ds,Ns,e,n);s.layers=this.layers,this.add(s);const a=new pn(Ds,Ns,e,n);a.layers=this.layers,this.add(a);const o=new pn(Ds,Ns,e,n);o.layers=this.layers,this.add(o);const l=new pn(Ds,Ns,e,n);l.layers=this.layers,this.add(l);const c=new pn(Ds,Ns,e,n);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,n=this.children.concat(),[i,r,s,a,o,l]=n;for(const c of n)this.remove(c);if(e===Ai)i.up.set(0,1,0),i.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===uo)i.up.set(0,-1,0),i.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of n)this.add(c),c.updateMatrixWorld()}update(e,n){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,a,o,l,c,h]=this.children,u=e.getRenderTarget(),f=e.getActiveCubeFace(),d=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const g=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,r),e.render(n,s),e.setRenderTarget(i,1,r),e.render(n,a),e.setRenderTarget(i,2,r),e.render(n,o),e.setRenderTarget(i,3,r),e.render(n,l),e.setRenderTarget(i,4,r),e.render(n,c),i.texture.generateMipmaps=g,e.setRenderTarget(i,5,r),e.render(n,h),e.setRenderTarget(u,f,d),e.xr.enabled=p,i.texture.needsPMREMUpdate=!0}},fl=class extends gn{constructor(e,n,i,r,s,a,o,l,c,h){e=e!==void 0?e:[],n=n!==void 0?n:Ki,super(e,n,i,r,s,a,o,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}};class ny extends mi{constructor(e=1,n={}){super(e,e,n),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},r=[i,i,i,i,i,i];n.encoding!==void 0&&(ss("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===xr?on:Xn),this.texture=new fl(r,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:qt}fromEquirectangularTexture(e,n){this.texture.type=n.type,this.texture.colorSpace=n.colorSpace,this.texture.generateMipmaps=n.generateMipmaps,this.texture.minFilter=n.minFilter,this.texture.magFilter=n.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new ul(5,5,5),s=new vi({name:"CubemapFromEquirect",uniforms:na(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Ln,blending:Yi});s.uniforms.tEquirect.value=n;const a=new an(r,s),o=n.minFilter;return n.minFilter===Ti&&(n.minFilter=qt),new ty(1,10,this).update(e,a),n.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,n,i,r){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(n,i,r);e.setRenderTarget(s)}}const tu=new K,dM=new K,pM=new Pt;let Wi=class{constructor(e=new K(1,0,0),n=0){this.isPlane=!0,this.normal=e,this.constant=n}set(e,n){return this.normal.copy(e),this.constant=n,this}setComponents(e,n,i,r){return this.normal.set(e,n,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,n){return this.normal.copy(e),this.constant=-n.dot(this.normal),this}setFromCoplanarPoints(e,n,i){const r=tu.subVectors(i,n).cross(dM.subVectors(e,n)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,n){return n.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,n){const i=e.delta(tu),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?n.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:n.copy(e.start).addScaledVector(i,s)}intersectsLine(e){const n=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return n<0&&i>0||i<0&&n>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,n){const i=n||pM.getNormalMatrix(e),r=this.coplanarPoint(tu).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}};const Ur=new Sn,Bl=new K;let dl=class{constructor(e=new Wi,n=new Wi,i=new Wi,r=new Wi,s=new Wi,a=new Wi){this.planes=[e,n,i,r,s,a]}set(e,n,i,r,s,a){const o=this.planes;return o[0].copy(e),o[1].copy(n),o[2].copy(i),o[3].copy(r),o[4].copy(s),o[5].copy(a),this}copy(e){const n=this.planes;for(let i=0;i<6;i++)n[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,n=Ai){const i=this.planes,r=e.elements,s=r[0],a=r[1],o=r[2],l=r[3],c=r[4],h=r[5],u=r[6],f=r[7],d=r[8],p=r[9],g=r[10],v=r[11],m=r[12],y=r[13],x=r[14],_=r[15];if(i[0].setComponents(l-s,f-c,v-d,_-m).normalize(),i[1].setComponents(l+s,f+c,v+d,_+m).normalize(),i[2].setComponents(l+a,f+h,v+p,_+y).normalize(),i[3].setComponents(l-a,f-h,v-p,_-y).normalize(),i[4].setComponents(l-o,f-u,v-g,_-x).normalize(),n===Ai)i[5].setComponents(l+o,f+u,v+g,_+x).normalize();else if(n===uo)i[5].setComponents(o,u,g,x).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+n);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Ur.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const n=e.geometry;n.boundingSphere===null&&n.computeBoundingSphere(),Ur.copy(n.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Ur)}intersectsSprite(e){return Ur.center.set(0,0,0),Ur.radius=.7071067811865476,Ur.applyMatrix4(e.matrixWorld),this.intersectsSphere(Ur)}intersectsSphere(e){const n=this.planes,i=e.center,r=-e.radius;for(let s=0;s<6;s++)if(n[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const n=this.planes;for(let i=0;i<6;i++){const r=n[i];if(Bl.x=r.normal.x>0?e.max.x:e.min.x,Bl.y=r.normal.y>0?e.max.y:e.min.y,Bl.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Bl)<0)return!1}return!0}containsPoint(e){const n=this.planes;for(let i=0;i<6;i++)if(n[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}};function iy(){let t=null,e=!1,n=null,i=null;function r(s,a){n(s,a),i=t.requestAnimationFrame(r)}return{start:function(){e!==!0&&n!==null&&(i=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){n=s},setContext:function(s){t=s}}}function mM(t,e){const n=e.isWebGL2,i=new WeakMap;function r(c,h){const u=c.array,f=c.usage,d=u.byteLength,p=t.createBuffer();t.bindBuffer(h,p),t.bufferData(h,u,f),c.onUploadCallback();let g;if(u instanceof Float32Array)g=t.FLOAT;else if(u instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(n)g=t.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else g=t.UNSIGNED_SHORT;else if(u instanceof Int16Array)g=t.SHORT;else if(u instanceof Uint32Array)g=t.UNSIGNED_INT;else if(u instanceof Int32Array)g=t.INT;else if(u instanceof Int8Array)g=t.BYTE;else if(u instanceof Uint8Array)g=t.UNSIGNED_BYTE;else if(u instanceof Uint8ClampedArray)g=t.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);return{buffer:p,type:g,bytesPerElement:u.BYTES_PER_ELEMENT,version:c.version,size:d}}function s(c,h,u){const f=h.array,d=h._updateRange,p=h.updateRanges;if(t.bindBuffer(u,c),d.count===-1&&p.length===0&&t.bufferSubData(u,0,f),p.length!==0){for(let g=0,v=p.length;g<v;g++){const m=p[g];n?t.bufferSubData(u,m.start*f.BYTES_PER_ELEMENT,f,m.start,m.count):t.bufferSubData(u,m.start*f.BYTES_PER_ELEMENT,f.subarray(m.start,m.start+m.count))}h.clearUpdateRanges()}d.count!==-1&&(n?t.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):t.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1),h.onUploadCallback()}function a(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=i.get(c);h&&(t.deleteBuffer(h.buffer),i.delete(c))}function l(c,h){if(c.isGLBufferAttribute){const f=i.get(c);(!f||f.version<c.version)&&i.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const u=i.get(c);if(u===void 0)i.set(c,r(c,h));else if(u.version<c.version){if(u.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");s(u.buffer,c,h),u.version=c.version}}return{get:a,remove:o,update:l}}let Eh=class ry extends Lt{constructor(e=1,n=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:n,widthSegments:i,heightSegments:r};const s=e/2,a=n/2,o=Math.floor(i),l=Math.floor(r),c=o+1,h=l+1,u=e/o,f=n/l,d=[],p=[],g=[],v=[];for(let m=0;m<h;m++){const y=m*f-a;for(let x=0;x<c;x++){const _=x*u-s;p.push(_,-y,0),g.push(0,0,1),v.push(x/o),v.push(1-m/l)}}for(let m=0;m<l;m++)for(let y=0;y<o;y++){const x=y+c*m,_=y+c*(m+1),b=y+1+c*(m+1),w=y+1+c*m;d.push(x,_,w),d.push(_,b,w)}this.setIndex(d),this.setAttribute("position",new ht(p,3)),this.setAttribute("normal",new ht(g,3)),this.setAttribute("uv",new ht(v,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ry(e.width,e.height,e.widthSegments,e.heightSegments)}};var vM=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,gM=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,yM=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,xM=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,_M=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,MM=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,bM=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,wM=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,SM=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,EM=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,TM=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,AM=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,CM=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,RM=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,PM=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,LM=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,IM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,DM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,NM=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,BM=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,UM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,FM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,OM=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,zM=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,GM=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,VM=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,HM=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,kM=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,WM=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,XM=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,qM="gl_FragColor = linearToOutputTexel( gl_FragColor );",$M=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,YM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,ZM=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,jM=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,JM=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,KM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,QM=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,eb=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,tb=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,nb=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,ib=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,rb=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,sb=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,ab=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,ob=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,lb=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,cb=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,hb=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,ub=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,fb=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,db=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,pb=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,mb=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,vb=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,gb=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,yb=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,xb=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,_b=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Mb=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,bb=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,wb=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Sb=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Eb=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Tb=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Ab=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Cb=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Rb=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Pb=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Lb=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Ib=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Db=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,Nb=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Bb=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Ub=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Fb=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Ob=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,zb=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,Gb=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,Vb=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,Hb=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,kb=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Wb=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,Xb=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,qb=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,$b=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Yb=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Zb=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,jb=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Jb=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Kb=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Qb=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,ew=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,tw=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,nw=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,iw=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,rw=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,sw=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,aw=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,ow=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,lw=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,cw=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,hw=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,uw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,fw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,dw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,pw=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const mw=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,vw=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,gw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,yw=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,xw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,_w=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Mw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,bw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,ww=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Sw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Ew=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Tw=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Aw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Cw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Rw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Pw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Lw=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Iw=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Dw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Nw=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Bw=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Uw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Fw=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ow=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,zw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Gw=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Vw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Hw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kw=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Ww=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Xw=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,qw=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,$w=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Yw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,At={alphahash_fragment:vM,alphahash_pars_fragment:gM,alphamap_fragment:yM,alphamap_pars_fragment:xM,alphatest_fragment:_M,alphatest_pars_fragment:MM,aomap_fragment:bM,aomap_pars_fragment:wM,batching_pars_vertex:SM,batching_vertex:EM,begin_vertex:TM,beginnormal_vertex:AM,bsdfs:CM,iridescence_fragment:RM,bumpmap_pars_fragment:PM,clipping_planes_fragment:LM,clipping_planes_pars_fragment:IM,clipping_planes_pars_vertex:DM,clipping_planes_vertex:NM,color_fragment:BM,color_pars_fragment:UM,color_pars_vertex:FM,color_vertex:OM,common:zM,cube_uv_reflection_fragment:GM,defaultnormal_vertex:VM,displacementmap_pars_vertex:HM,displacementmap_vertex:kM,emissivemap_fragment:WM,emissivemap_pars_fragment:XM,colorspace_fragment:qM,colorspace_pars_fragment:$M,envmap_fragment:YM,envmap_common_pars_fragment:ZM,envmap_pars_fragment:jM,envmap_pars_vertex:JM,envmap_physical_pars_fragment:cb,envmap_vertex:KM,fog_vertex:QM,fog_pars_vertex:eb,fog_fragment:tb,fog_pars_fragment:nb,gradientmap_pars_fragment:ib,lightmap_fragment:rb,lightmap_pars_fragment:sb,lights_lambert_fragment:ab,lights_lambert_pars_fragment:ob,lights_pars_begin:lb,lights_toon_fragment:hb,lights_toon_pars_fragment:ub,lights_phong_fragment:fb,lights_phong_pars_fragment:db,lights_physical_fragment:pb,lights_physical_pars_fragment:mb,lights_fragment_begin:vb,lights_fragment_maps:gb,lights_fragment_end:yb,logdepthbuf_fragment:xb,logdepthbuf_pars_fragment:_b,logdepthbuf_pars_vertex:Mb,logdepthbuf_vertex:bb,map_fragment:wb,map_pars_fragment:Sb,map_particle_fragment:Eb,map_particle_pars_fragment:Tb,metalnessmap_fragment:Ab,metalnessmap_pars_fragment:Cb,morphcolor_vertex:Rb,morphnormal_vertex:Pb,morphtarget_pars_vertex:Lb,morphtarget_vertex:Ib,normal_fragment_begin:Db,normal_fragment_maps:Nb,normal_pars_fragment:Bb,normal_pars_vertex:Ub,normal_vertex:Fb,normalmap_pars_fragment:Ob,clearcoat_normal_fragment_begin:zb,clearcoat_normal_fragment_maps:Gb,clearcoat_pars_fragment:Vb,iridescence_pars_fragment:Hb,opaque_fragment:kb,packing:Wb,premultiplied_alpha_fragment:Xb,project_vertex:qb,dithering_fragment:$b,dithering_pars_fragment:Yb,roughnessmap_fragment:Zb,roughnessmap_pars_fragment:jb,shadowmap_pars_fragment:Jb,shadowmap_pars_vertex:Kb,shadowmap_vertex:Qb,shadowmask_pars_fragment:ew,skinbase_vertex:tw,skinning_pars_vertex:nw,skinning_vertex:iw,skinnormal_vertex:rw,specularmap_fragment:sw,specularmap_pars_fragment:aw,tonemapping_fragment:ow,tonemapping_pars_fragment:lw,transmission_fragment:cw,transmission_pars_fragment:hw,uv_pars_fragment:uw,uv_pars_vertex:fw,uv_vertex:dw,worldpos_vertex:pw,background_vert:mw,background_frag:vw,backgroundCube_vert:gw,backgroundCube_frag:yw,cube_vert:xw,cube_frag:_w,depth_vert:Mw,depth_frag:bw,distanceRGBA_vert:ww,distanceRGBA_frag:Sw,equirect_vert:Ew,equirect_frag:Tw,linedashed_vert:Aw,linedashed_frag:Cw,meshbasic_vert:Rw,meshbasic_frag:Pw,meshlambert_vert:Lw,meshlambert_frag:Iw,meshmatcap_vert:Dw,meshmatcap_frag:Nw,meshnormal_vert:Bw,meshnormal_frag:Uw,meshphong_vert:Fw,meshphong_frag:Ow,meshphysical_vert:zw,meshphysical_frag:Gw,meshtoon_vert:Vw,meshtoon_frag:Hw,points_vert:kw,points_frag:Ww,shadow_vert:Xw,shadow_frag:qw,sprite_vert:$w,sprite_frag:Yw},Ye={common:{diffuse:{value:new rt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Pt},alphaMap:{value:null},alphaMapTransform:{value:new Pt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Pt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Pt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Pt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Pt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Pt},normalScale:{value:new De(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Pt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Pt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Pt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Pt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new rt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new rt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Pt},alphaTest:{value:0},uvTransform:{value:new Pt}},sprite:{diffuse:{value:new rt(16777215)},opacity:{value:1},center:{value:new De(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Pt},alphaMap:{value:null},alphaMapTransform:{value:new Pt},alphaTest:{value:0}}},fi={basic:{uniforms:An([Ye.common,Ye.specularmap,Ye.envmap,Ye.aomap,Ye.lightmap,Ye.fog]),vertexShader:At.meshbasic_vert,fragmentShader:At.meshbasic_frag},lambert:{uniforms:An([Ye.common,Ye.specularmap,Ye.envmap,Ye.aomap,Ye.lightmap,Ye.emissivemap,Ye.bumpmap,Ye.normalmap,Ye.displacementmap,Ye.fog,Ye.lights,{emissive:{value:new rt(0)}}]),vertexShader:At.meshlambert_vert,fragmentShader:At.meshlambert_frag},phong:{uniforms:An([Ye.common,Ye.specularmap,Ye.envmap,Ye.aomap,Ye.lightmap,Ye.emissivemap,Ye.bumpmap,Ye.normalmap,Ye.displacementmap,Ye.fog,Ye.lights,{emissive:{value:new rt(0)},specular:{value:new rt(1118481)},shininess:{value:30}}]),vertexShader:At.meshphong_vert,fragmentShader:At.meshphong_frag},standard:{uniforms:An([Ye.common,Ye.envmap,Ye.aomap,Ye.lightmap,Ye.emissivemap,Ye.bumpmap,Ye.normalmap,Ye.displacementmap,Ye.roughnessmap,Ye.metalnessmap,Ye.fog,Ye.lights,{emissive:{value:new rt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:At.meshphysical_vert,fragmentShader:At.meshphysical_frag},toon:{uniforms:An([Ye.common,Ye.aomap,Ye.lightmap,Ye.emissivemap,Ye.bumpmap,Ye.normalmap,Ye.displacementmap,Ye.gradientmap,Ye.fog,Ye.lights,{emissive:{value:new rt(0)}}]),vertexShader:At.meshtoon_vert,fragmentShader:At.meshtoon_frag},matcap:{uniforms:An([Ye.common,Ye.bumpmap,Ye.normalmap,Ye.displacementmap,Ye.fog,{matcap:{value:null}}]),vertexShader:At.meshmatcap_vert,fragmentShader:At.meshmatcap_frag},points:{uniforms:An([Ye.points,Ye.fog]),vertexShader:At.points_vert,fragmentShader:At.points_frag},dashed:{uniforms:An([Ye.common,Ye.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:At.linedashed_vert,fragmentShader:At.linedashed_frag},depth:{uniforms:An([Ye.common,Ye.displacementmap]),vertexShader:At.depth_vert,fragmentShader:At.depth_frag},normal:{uniforms:An([Ye.common,Ye.bumpmap,Ye.normalmap,Ye.displacementmap,{opacity:{value:1}}]),vertexShader:At.meshnormal_vert,fragmentShader:At.meshnormal_frag},sprite:{uniforms:An([Ye.sprite,Ye.fog]),vertexShader:At.sprite_vert,fragmentShader:At.sprite_frag},background:{uniforms:{uvTransform:{value:new Pt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:At.background_vert,fragmentShader:At.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:At.backgroundCube_vert,fragmentShader:At.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:At.cube_vert,fragmentShader:At.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:At.equirect_vert,fragmentShader:At.equirect_frag},distanceRGBA:{uniforms:An([Ye.common,Ye.displacementmap,{referencePosition:{value:new K},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:At.distanceRGBA_vert,fragmentShader:At.distanceRGBA_frag},shadow:{uniforms:An([Ye.lights,Ye.fog,{color:{value:new rt(0)},opacity:{value:1}}]),vertexShader:At.shadow_vert,fragmentShader:At.shadow_frag}};fi.physical={uniforms:An([fi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Pt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Pt},clearcoatNormalScale:{value:new De(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Pt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Pt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Pt},sheen:{value:0},sheenColor:{value:new rt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Pt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Pt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Pt},transmissionSamplerSize:{value:new De},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Pt},attenuationDistance:{value:0},attenuationColor:{value:new rt(0)},specularColor:{value:new rt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Pt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Pt},anisotropyVector:{value:new De},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Pt}}]),vertexShader:At.meshphysical_vert,fragmentShader:At.meshphysical_frag};const Ul={r:0,b:0,g:0};function Zw(t,e,n,i,r,s,a){const o=new rt(0);let l=s===!0?0:1,c,h,u=null,f=0,d=null;function p(v,m){let y=!1,x=m.isScene===!0?m.background:null;x&&x.isTexture&&(x=(m.backgroundBlurriness>0?n:e).get(x)),x===null?g(o,l):x&&x.isColor&&(g(x,1),y=!0);const _=t.xr.getEnvironmentBlendMode();_==="additive"?i.buffers.color.setClear(0,0,0,1,a):_==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,a),(t.autoClear||y)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),x&&(x.isCubeTexture||x.mapping===ba)?(h===void 0&&(h=new an(new ul(1,1,1),new vi({name:"BackgroundCubeMaterial",uniforms:na(fi.backgroundCube.uniforms),vertexShader:fi.backgroundCube.vertexShader,fragmentShader:fi.backgroundCube.fragmentShader,side:Ln,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(b,w,S){this.matrixWorld.copyPosition(S.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(h)),h.material.uniforms.envMap.value=x,h.material.uniforms.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=m.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=m.backgroundIntensity,h.material.toneMapped=Bt.getTransfer(x.colorSpace)!==Gt,(u!==x||f!==x.version||d!==t.toneMapping)&&(h.material.needsUpdate=!0,u=x,f=x.version,d=t.toneMapping),h.layers.enableAll(),v.unshift(h,h.geometry,h.material,0,0,null)):x&&x.isTexture&&(c===void 0&&(c=new an(new Eh(2,2),new vi({name:"BackgroundMaterial",uniforms:na(fi.background.uniforms),vertexShader:fi.background.vertexShader,fragmentShader:fi.background.fragmentShader,side:Ji,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(c)),c.material.uniforms.t2D.value=x,c.material.uniforms.backgroundIntensity.value=m.backgroundIntensity,c.material.toneMapped=Bt.getTransfer(x.colorSpace)!==Gt,x.matrixAutoUpdate===!0&&x.updateMatrix(),c.material.uniforms.uvTransform.value.copy(x.matrix),(u!==x||f!==x.version||d!==t.toneMapping)&&(c.material.needsUpdate=!0,u=x,f=x.version,d=t.toneMapping),c.layers.enableAll(),v.unshift(c,c.geometry,c.material,0,0,null))}function g(v,m){v.getRGB(Ul,Qg(t)),i.buffers.color.setClear(Ul.r,Ul.g,Ul.b,m,a)}return{getClearColor:function(){return o},setClearColor:function(v,m=1){o.set(v),l=m,g(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(v){l=v,g(o,l)},render:p}}function jw(t,e,n,i){const r=t.getParameter(t.MAX_VERTEX_ATTRIBS),s=i.isWebGL2?null:e.get("OES_vertex_array_object"),a=i.isWebGL2||s!==null,o={},l=v(null);let c=l,h=!1;function u(F,V,ee,R,T){let H=!1;if(a){const O=g(R,ee,V);c!==O&&(c=O,d(c.object)),H=m(F,R,ee,T),H&&y(F,R,ee,T)}else{const O=V.wireframe===!0;(c.geometry!==R.id||c.program!==ee.id||c.wireframe!==O)&&(c.geometry=R.id,c.program=ee.id,c.wireframe=O,H=!0)}T!==null&&n.update(T,t.ELEMENT_ARRAY_BUFFER),(H||h)&&(h=!1,C(F,V,ee,R),T!==null&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n.get(T).buffer))}function f(){return i.isWebGL2?t.createVertexArray():s.createVertexArrayOES()}function d(F){return i.isWebGL2?t.bindVertexArray(F):s.bindVertexArrayOES(F)}function p(F){return i.isWebGL2?t.deleteVertexArray(F):s.deleteVertexArrayOES(F)}function g(F,V,ee){const R=ee.wireframe===!0;let T=o[F.id];T===void 0&&(T={},o[F.id]=T);let H=T[V.id];H===void 0&&(H={},T[V.id]=H);let O=H[R];return O===void 0&&(O=v(f()),H[R]=O),O}function v(F){const V=[],ee=[],R=[];for(let T=0;T<r;T++)V[T]=0,ee[T]=0,R[T]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:V,enabledAttributes:ee,attributeDivisors:R,object:F,attributes:{},index:null}}function m(F,V,ee,R){const T=c.attributes,H=V.attributes;let O=0;const B=ee.getAttributes();for(const q in B)if(B[q].location>=0){const A=T[q];let U=H[q];if(U===void 0&&(q==="instanceMatrix"&&F.instanceMatrix&&(U=F.instanceMatrix),q==="instanceColor"&&F.instanceColor&&(U=F.instanceColor)),A===void 0||A.attribute!==U||U&&A.data!==U.data)return!0;O++}return c.attributesNum!==O||c.index!==R}function y(F,V,ee,R){const T={},H=V.attributes;let O=0;const B=ee.getAttributes();for(const q in B)if(B[q].location>=0){let A=H[q];A===void 0&&(q==="instanceMatrix"&&F.instanceMatrix&&(A=F.instanceMatrix),q==="instanceColor"&&F.instanceColor&&(A=F.instanceColor));const U={};U.attribute=A,A&&A.data&&(U.data=A.data),T[q]=U,O++}c.attributes=T,c.attributesNum=O,c.index=R}function x(){const F=c.newAttributes;for(let V=0,ee=F.length;V<ee;V++)F[V]=0}function _(F){b(F,0)}function b(F,V){const ee=c.newAttributes,R=c.enabledAttributes,T=c.attributeDivisors;ee[F]=1,R[F]===0&&(t.enableVertexAttribArray(F),R[F]=1),T[F]!==V&&((i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](F,V),T[F]=V)}function w(){const F=c.newAttributes,V=c.enabledAttributes;for(let ee=0,R=V.length;ee<R;ee++)V[ee]!==F[ee]&&(t.disableVertexAttribArray(ee),V[ee]=0)}function S(F,V,ee,R,T,H,O){O===!0?t.vertexAttribIPointer(F,V,ee,T,H):t.vertexAttribPointer(F,V,ee,R,T,H)}function C(F,V,ee,R){if(i.isWebGL2===!1&&(F.isInstancedMesh||R.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;x();const T=R.attributes,H=ee.getAttributes(),O=V.defaultAttributeValues;for(const B in H){const q=H[B];if(q.location>=0){let G=T[B];if(G===void 0&&(B==="instanceMatrix"&&F.instanceMatrix&&(G=F.instanceMatrix),B==="instanceColor"&&F.instanceColor&&(G=F.instanceColor)),G!==void 0){const A=G.normalized,U=G.itemSize,J=n.get(G);if(J===void 0)continue;const $=J.buffer,ie=J.type,re=J.bytesPerElement,de=i.isWebGL2===!0&&(ie===t.INT||ie===t.UNSIGNED_INT||G.gpuType===yd);if(G.isInterleavedBufferAttribute){const me=G.data,X=me.stride,pe=G.offset;if(me.isInstancedInterleavedBuffer){for(let he=0;he<q.locationSize;he++)b(q.location+he,me.meshPerAttribute);F.isInstancedMesh!==!0&&R._maxInstanceCount===void 0&&(R._maxInstanceCount=me.meshPerAttribute*me.count)}else for(let he=0;he<q.locationSize;he++)_(q.location+he);t.bindBuffer(t.ARRAY_BUFFER,$);for(let he=0;he<q.locationSize;he++)S(q.location+he,U/q.locationSize,ie,A,X*re,(pe+U/q.locationSize*he)*re,de)}else{if(G.isInstancedBufferAttribute){for(let me=0;me<q.locationSize;me++)b(q.location+me,G.meshPerAttribute);F.isInstancedMesh!==!0&&R._maxInstanceCount===void 0&&(R._maxInstanceCount=G.meshPerAttribute*G.count)}else for(let me=0;me<q.locationSize;me++)_(q.location+me);t.bindBuffer(t.ARRAY_BUFFER,$);for(let me=0;me<q.locationSize;me++)S(q.location+me,U/q.locationSize,ie,A,U*re,U/q.locationSize*me*re,de)}}else if(O!==void 0){const A=O[B];if(A!==void 0)switch(A.length){case 2:t.vertexAttrib2fv(q.location,A);break;case 3:t.vertexAttrib3fv(q.location,A);break;case 4:t.vertexAttrib4fv(q.location,A);break;default:t.vertexAttrib1fv(q.location,A)}}}}w()}function L(){N();for(const F in o){const V=o[F];for(const ee in V){const R=V[ee];for(const T in R)p(R[T].object),delete R[T];delete V[ee]}delete o[F]}}function M(F){if(o[F.id]===void 0)return;const V=o[F.id];for(const ee in V){const R=V[ee];for(const T in R)p(R[T].object),delete R[T];delete V[ee]}delete o[F.id]}function E(F){for(const V in o){const ee=o[V];if(ee[F.id]===void 0)continue;const R=ee[F.id];for(const T in R)p(R[T].object),delete R[T];delete ee[F.id]}}function N(){k(),h=!0,c!==l&&(c=l,d(c.object))}function k(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:u,reset:N,resetDefaultState:k,dispose:L,releaseStatesOfGeometry:M,releaseStatesOfProgram:E,initAttributes:x,enableAttribute:_,disableUnusedAttributes:w}}function Jw(t,e,n,i){const r=i.isWebGL2;let s;function a(h){s=h}function o(h,u){t.drawArrays(s,h,u),n.update(u,s,1)}function l(h,u,f){if(f===0)return;let d,p;if(r)d=t,p="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),p="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[p](s,h,u,f),n.update(u,s,f)}function c(h,u,f){if(f===0)return;const d=e.get("WEBGL_multi_draw");if(d===null)for(let p=0;p<f;p++)this.render(h[p],u[p]);else{d.multiDrawArraysWEBGL(s,h,0,u,0,f);let p=0;for(let g=0;g<f;g++)p+=u[g];n.update(p,s,1)}}this.setMode=a,this.render=o,this.renderInstances=l,this.renderMultiDraw=c}function Kw(t,e,n){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const S=e.get("EXT_texture_filter_anisotropic");i=t.getParameter(S.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function s(S){if(S==="highp"){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";S="mediump"}return S==="mediump"&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext<"u"&&t.constructor.name==="WebGL2RenderingContext";let o=n.precision!==void 0?n.precision:"highp";const l=s(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const c=a||e.has("WEBGL_draw_buffers"),h=n.logarithmicDepthBuffer===!0,u=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),f=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),d=t.getParameter(t.MAX_TEXTURE_SIZE),p=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),g=t.getParameter(t.MAX_VERTEX_ATTRIBS),v=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),m=t.getParameter(t.MAX_VARYING_VECTORS),y=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),x=f>0,_=a||e.has("OES_texture_float"),b=x&&_,w=a?t.getParameter(t.MAX_SAMPLES):0;return{isWebGL2:a,drawBuffers:c,getMaxAnisotropy:r,getMaxPrecision:s,precision:o,logarithmicDepthBuffer:h,maxTextures:u,maxVertexTextures:f,maxTextureSize:d,maxCubemapSize:p,maxAttributes:g,maxVertexUniforms:v,maxVaryings:m,maxFragmentUniforms:y,vertexTextures:x,floatFragmentTextures:_,floatVertexTextures:b,maxSamples:w}}function Qw(t){const e=this;let n=null,i=0,r=!1,s=!1;const a=new Wi,o=new Pt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,f){const d=u.length!==0||f||i!==0||r;return r=f,i=u.length,d},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(u,f){n=h(u,f,0)},this.setState=function(u,f,d){const p=u.clippingPlanes,g=u.clipIntersection,v=u.clipShadows,m=t.get(u);if(!r||p===null||p.length===0||s&&!v)s?h(null):c();else{const y=s?0:i,x=y*4;let _=m.clippingState||null;l.value=_,_=h(p,f,x,d);for(let b=0;b!==x;++b)_[b]=n[b];m.clippingState=_,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=y}};function c(){l.value!==n&&(l.value=n,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(u,f,d,p){const g=u!==null?u.length:0;let v=null;if(g!==0){if(v=l.value,p!==!0||v===null){const m=d+g*4,y=f.matrixWorldInverse;o.getNormalMatrix(y),(v===null||v.length<m)&&(v=new Float32Array(m));for(let x=0,_=d;x!==g;++x,_+=4)a.copy(u[x]).applyMatrix4(y,o),a.normal.toArray(v,_),v[_+3]=a.constant}l.value=v,l.needsUpdate=!0}return e.numPlanes=g,e.numIntersection=0,v}}function e1(t){let e=new WeakMap;function n(a,o){return o===eo?a.mapping=Ki:o===to&&(a.mapping=Sr),a}function i(a){if(a&&a.isTexture){const o=a.mapping;if(o===eo||o===to)if(e.has(a)){const l=e.get(a).texture;return n(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const c=new ny(l.height);return c.fromEquirectangularTexture(t,a),e.set(a,c),a.addEventListener("dispose",r),n(c.texture,a.mapping)}else return null}}return a}function r(a){const o=a.target;o.removeEventListener("dispose",r);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}let Th=class extends Sh{constructor(e=-1,n=1,i=1,r=-1,s=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=n,this.top=i,this.bottom=r,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,n,i,r,s,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),n=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=i-e,a=i+e,o=r+n,l=r-n;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,a=s+c*this.view.width,o-=h*this.view.offsetY,l=o-h*this.view.height}this.projectionMatrix.makeOrthographic(s,a,o,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.zoom=this.zoom,n.object.left=this.left,n.object.right=this.right,n.object.top=this.top,n.object.bottom=this.bottom,n.object.near=this.near,n.object.far=this.far,this.view!==null&&(n.object.view=Object.assign({},this.view)),n}};const qs=4,kp=[.125,.215,.35,.446,.526,.582],jr=20,nu=new Th,Wp=new rt;let iu=null,ru=0,su=0;const qr=(1+Math.sqrt(5))/2,Bs=1/qr,Xp=[new K(1,1,1),new K(-1,1,1),new K(1,1,-1),new K(-1,1,-1),new K(0,qr,Bs),new K(0,qr,-Bs),new K(Bs,0,qr),new K(-Bs,0,qr),new K(qr,Bs,0),new K(-qr,Bs,0)];class Mf{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,n=0,i=.1,r=100){iu=this._renderer.getRenderTarget(),ru=this._renderer.getActiveCubeFace(),su=this._renderer.getActiveMipmapLevel(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,i,r,s),n>0&&this._blur(s,0,0,n),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,n=null){return this._fromTexture(e,n)}fromCubemap(e,n=null){return this._fromTexture(e,n)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Yp(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=$p(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(iu,ru,su),e.scissorTest=!1,Fl(e,0,0,e.width,e.height)}_fromTexture(e,n){e.mapping===Ki||e.mapping===Sr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),iu=this._renderer.getRenderTarget(),ru=this._renderer.getActiveCubeFace(),su=this._renderer.getActiveMipmapLevel();const i=n||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),n=4*this._cubeSize,i={magFilter:qt,minFilter:qt,generateMipmaps:!1,type:ea,format:Un,colorSpace:Ci,depthBuffer:!1},r=qp(e,n,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==n){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=qp(e,n,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=t1(s)),this._blurMaterial=n1(s,e,n)}return r}_compileMaterial(e){const n=new an(this._lodPlanes[0],e);this._renderer.compile(n,nu)}_sceneToCubeUV(e,n,i,r){const o=new pn(90,1,n,i),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],h=this._renderer,u=h.autoClear,f=h.toneMapping;h.getClearColor(Wp),h.toneMapping=Zi,h.autoClear=!1;const d=new Pr({name:"PMREM.Background",side:Ln,depthWrite:!1,depthTest:!1}),p=new an(new ul,d);let g=!1;const v=e.background;v?v.isColor&&(d.color.copy(v),e.background=null,g=!0):(d.color.copy(Wp),g=!0);for(let m=0;m<6;m++){const y=m%3;y===0?(o.up.set(0,l[m],0),o.lookAt(c[m],0,0)):y===1?(o.up.set(0,0,l[m]),o.lookAt(0,c[m],0)):(o.up.set(0,l[m],0),o.lookAt(0,0,c[m]));const x=this._cubeSize;Fl(r,y*x,m>2?x:0,x,x),h.setRenderTarget(r),g&&h.render(p,o),h.render(e,o)}p.geometry.dispose(),p.material.dispose(),h.toneMapping=f,h.autoClear=u,e.background=v}_textureToCubeUV(e,n){const i=this._renderer,r=e.mapping===Ki||e.mapping===Sr;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=Yp()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=$p());const s=r?this._cubemapMaterial:this._equirectMaterial,a=new an(this._lodPlanes[0],s),o=s.uniforms;o.envMap.value=e;const l=this._cubeSize;Fl(n,0,0,3*l,2*l),i.setRenderTarget(n),i.render(a,nu)}_applyPMREM(e){const n=this._renderer,i=n.autoClear;n.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const s=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=Xp[(r-1)%Xp.length];this._blur(e,r-1,r,s,a)}n.autoClear=i}_blur(e,n,i,r,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,n,i,r,"latitudinal",s),this._halfBlur(a,e,i,i,r,"longitudinal",s)}_halfBlur(e,n,i,r,s,a,o){const l=this._renderer,c=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new an(this._lodPlanes[r],c),f=c.uniforms,d=this._sizeLods[i]-1,p=isFinite(s)?Math.PI/(2*d):2*Math.PI/(2*jr-1),g=s/p,v=isFinite(s)?1+Math.floor(h*g):jr;v>jr&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${v} samples when the maximum is set to ${jr}`);const m=[];let y=0;for(let S=0;S<jr;++S){const C=S/g,L=Math.exp(-C*C/2);m.push(L),S===0?y+=L:S<v&&(y+=2*L)}for(let S=0;S<m.length;S++)m[S]=m[S]/y;f.envMap.value=e.texture,f.samples.value=v,f.weights.value=m,f.latitudinal.value=a==="latitudinal",o&&(f.poleAxis.value=o);const{_lodMax:x}=this;f.dTheta.value=p,f.mipInt.value=x-i;const _=this._sizeLods[r],b=3*_*(r>x-qs?r-x+qs:0),w=4*(this._cubeSize-_);Fl(n,b,w,3*_,2*_),l.setRenderTarget(n),l.render(u,nu)}}function t1(t){const e=[],n=[],i=[];let r=t;const s=t-qs+1+kp.length;for(let a=0;a<s;a++){const o=Math.pow(2,r);n.push(o);let l=1/o;a>t-qs?l=kp[a-t+qs-1]:a===0&&(l=0),i.push(l);const c=1/(o-2),h=-c,u=1+c,f=[h,h,u,h,u,u,h,h,u,u,h,u],d=6,p=6,g=3,v=2,m=1,y=new Float32Array(g*p*d),x=new Float32Array(v*p*d),_=new Float32Array(m*p*d);for(let w=0;w<d;w++){const S=w%3*2/3-1,C=w>2?0:-1,L=[S,C,0,S+2/3,C,0,S+2/3,C+1,0,S,C,0,S+2/3,C+1,0,S,C+1,0];y.set(L,g*p*w),x.set(f,v*p*w);const M=[w,w,w,w,w,w];_.set(M,m*p*w)}const b=new Lt;b.setAttribute("position",new Ut(y,g)),b.setAttribute("uv",new Ut(x,v)),b.setAttribute("faceIndex",new Ut(_,m)),e.push(b),r>qs&&r--}return{lodPlanes:e,sizeLods:n,sigmas:i}}function qp(t,e,n){const i=new mi(t,e,n);return i.texture.mapping=ba,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Fl(t,e,n,i,r){t.viewport.set(e,n,i,r),t.scissor.set(e,n,i,r)}function n1(t,e,n){const i=new Float32Array(jr),r=new K(0,1,0);return new vi({name:"SphericalGaussianBlur",defines:{n:jr,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:Nd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Yi,depthTest:!1,depthWrite:!1})}function $p(){return new vi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Nd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Yi,depthTest:!1,depthWrite:!1})}function Yp(){return new vi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Nd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Yi,depthTest:!1,depthWrite:!1})}function Nd(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function i1(t){let e=new WeakMap,n=null;function i(o){if(o&&o.isTexture){const l=o.mapping,c=l===eo||l===to,h=l===Ki||l===Sr;if(c||h)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let u=e.get(o);return n===null&&(n=new Mf(t)),u=c?n.fromEquirectangular(o,u):n.fromCubemap(o,u),e.set(o,u),u.texture}else{if(e.has(o))return e.get(o).texture;{const u=o.image;if(c&&u&&u.height>0||h&&u&&r(u)){n===null&&(n=new Mf(t));const f=c?n.fromEquirectangular(o):n.fromCubemap(o);return e.set(o,f),o.addEventListener("dispose",s),f.texture}else return null}}}return o}function r(o){let l=0;const c=6;for(let h=0;h<c;h++)o[h]!==void 0&&l++;return l===c}function s(o){const l=o.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function a(){e=new WeakMap,n!==null&&(n.dispose(),n=null)}return{get:i,dispose:a}}function r1(t){const e={};function n(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(i)}return e[i]=r,r}return{has:function(i){return n(i)!==null},init:function(i){i.isWebGL2?(n("EXT_color_buffer_float"),n("WEBGL_clip_cull_distance")):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(i){const r=n(i);return r===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function s1(t,e,n,i){const r={},s=new WeakMap;function a(u){const f=u.target;f.index!==null&&e.remove(f.index);for(const p in f.attributes)e.remove(f.attributes[p]);for(const p in f.morphAttributes){const g=f.morphAttributes[p];for(let v=0,m=g.length;v<m;v++)e.remove(g[v])}f.removeEventListener("dispose",a),delete r[f.id];const d=s.get(f);d&&(e.remove(d),s.delete(f)),i.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,n.memory.geometries--}function o(u,f){return r[f.id]===!0||(f.addEventListener("dispose",a),r[f.id]=!0,n.memory.geometries++),f}function l(u){const f=u.attributes;for(const p in f)e.update(f[p],t.ARRAY_BUFFER);const d=u.morphAttributes;for(const p in d){const g=d[p];for(let v=0,m=g.length;v<m;v++)e.update(g[v],t.ARRAY_BUFFER)}}function c(u){const f=[],d=u.index,p=u.attributes.position;let g=0;if(d!==null){const y=d.array;g=d.version;for(let x=0,_=y.length;x<_;x+=3){const b=y[x+0],w=y[x+1],S=y[x+2];f.push(b,w,w,S,S,b)}}else if(p!==void 0){const y=p.array;g=p.version;for(let x=0,_=y.length/3-1;x<_;x+=3){const b=x+0,w=x+1,S=x+2;f.push(b,w,w,S,S,b)}}else return;const v=new(Wg(f)?Dd:Id)(f,1);v.version=g;const m=s.get(u);m&&e.remove(m),s.set(u,v)}function h(u){const f=s.get(u);if(f){const d=u.index;d!==null&&f.version<d.version&&c(u)}else c(u);return s.get(u)}return{get:o,update:l,getWireframeAttribute:h}}function a1(t,e,n,i){const r=i.isWebGL2;let s;function a(d){s=d}let o,l;function c(d){o=d.type,l=d.bytesPerElement}function h(d,p){t.drawElements(s,p,o,d*l),n.update(p,s,1)}function u(d,p,g){if(g===0)return;let v,m;if(r)v=t,m="drawElementsInstanced";else if(v=e.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",v===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}v[m](s,p,o,d*l,g),n.update(p,s,g)}function f(d,p,g){if(g===0)return;const v=e.get("WEBGL_multi_draw");if(v===null)for(let m=0;m<g;m++)this.render(d[m]/l,p[m]);else{v.multiDrawElementsWEBGL(s,p,0,o,d,0,g);let m=0;for(let y=0;y<g;y++)m+=p[y];n.update(m,s,1)}}this.setMode=a,this.setIndex=c,this.render=h,this.renderInstances=u,this.renderMultiDraw=f}function o1(t){const e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,a,o){switch(n.calls++,a){case t.TRIANGLES:n.triangles+=o*(s/3);break;case t.LINES:n.lines+=o*(s/2);break;case t.LINE_STRIP:n.lines+=o*(s-1);break;case t.LINE_LOOP:n.lines+=o*s;break;case t.POINTS:n.points+=o*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function r(){n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:r,update:i}}function l1(t,e){return t[0]-e[0]}function c1(t,e){return Math.abs(e[1])-Math.abs(t[1])}function h1(t,e,n){const i={},r=new Float32Array(8),s=new WeakMap,a=new zt,o=[];for(let c=0;c<8;c++)o[c]=[c,0];function l(c,h,u){const f=c.morphTargetInfluences;if(e.isWebGL2===!0){const p=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color,g=p!==void 0?p.length:0;let v=s.get(h);if(v===void 0||v.count!==g){let V=function(){k.dispose(),s.delete(h),h.removeEventListener("dispose",V)};var d=V;v!==void 0&&v.texture.dispose();const x=h.morphAttributes.position!==void 0,_=h.morphAttributes.normal!==void 0,b=h.morphAttributes.color!==void 0,w=h.morphAttributes.position||[],S=h.morphAttributes.normal||[],C=h.morphAttributes.color||[];let L=0;x===!0&&(L=1),_===!0&&(L=2),b===!0&&(L=3);let M=h.attributes.position.count*L,E=1;M>e.maxTextureSize&&(E=Math.ceil(M/e.maxTextureSize),M=e.maxTextureSize);const N=new Float32Array(M*E*4*g),k=new bh(N,M,E,g);k.type=ti,k.needsUpdate=!0;const F=L*4;for(let ee=0;ee<g;ee++){const R=w[ee],T=S[ee],H=C[ee],O=M*E*4*ee;for(let B=0;B<R.count;B++){const q=B*F;x===!0&&(a.fromBufferAttribute(R,B),N[O+q+0]=a.x,N[O+q+1]=a.y,N[O+q+2]=a.z,N[O+q+3]=0),_===!0&&(a.fromBufferAttribute(T,B),N[O+q+4]=a.x,N[O+q+5]=a.y,N[O+q+6]=a.z,N[O+q+7]=0),b===!0&&(a.fromBufferAttribute(H,B),N[O+q+8]=a.x,N[O+q+9]=a.y,N[O+q+10]=a.z,N[O+q+11]=H.itemSize===4?a.w:1)}}v={count:g,texture:k,size:new De(M,E)},s.set(h,v),h.addEventListener("dispose",V)}let m=0;for(let x=0;x<f.length;x++)m+=f[x];const y=h.morphTargetsRelative?1:1-m;u.getUniforms().setValue(t,"morphTargetBaseInfluence",y),u.getUniforms().setValue(t,"morphTargetInfluences",f),u.getUniforms().setValue(t,"morphTargetsTexture",v.texture,n),u.getUniforms().setValue(t,"morphTargetsTextureSize",v.size)}else{const p=f===void 0?0:f.length;let g=i[h.id];if(g===void 0||g.length!==p){g=[];for(let _=0;_<p;_++)g[_]=[_,0];i[h.id]=g}for(let _=0;_<p;_++){const b=g[_];b[0]=_,b[1]=f[_]}g.sort(c1);for(let _=0;_<8;_++)_<p&&g[_][1]?(o[_][0]=g[_][0],o[_][1]=g[_][1]):(o[_][0]=Number.MAX_SAFE_INTEGER,o[_][1]=0);o.sort(l1);const v=h.morphAttributes.position,m=h.morphAttributes.normal;let y=0;for(let _=0;_<8;_++){const b=o[_],w=b[0],S=b[1];w!==Number.MAX_SAFE_INTEGER&&S?(v&&h.getAttribute("morphTarget"+_)!==v[w]&&h.setAttribute("morphTarget"+_,v[w]),m&&h.getAttribute("morphNormal"+_)!==m[w]&&h.setAttribute("morphNormal"+_,m[w]),r[_]=S,y+=S):(v&&h.hasAttribute("morphTarget"+_)===!0&&h.deleteAttribute("morphTarget"+_),m&&h.hasAttribute("morphNormal"+_)===!0&&h.deleteAttribute("morphNormal"+_),r[_]=0)}const x=h.morphTargetsRelative?1:1-y;u.getUniforms().setValue(t,"morphTargetBaseInfluence",x),u.getUniforms().setValue(t,"morphTargetInfluences",r)}}return{update:l}}function u1(t,e,n,i){let r=new WeakMap;function s(l){const c=i.render.frame,h=l.geometry,u=e.get(l,h);if(r.get(u)!==c&&(e.update(u),r.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),r.get(l)!==c&&(n.update(l.instanceMatrix,t.ARRAY_BUFFER),l.instanceColor!==null&&n.update(l.instanceColor,t.ARRAY_BUFFER),r.set(l,c))),l.isSkinnedMesh){const f=l.skeleton;r.get(f)!==c&&(f.update(),r.set(f,c))}return u}function a(){r=new WeakMap}function o(l){const c=l.target;c.removeEventListener("dispose",o),n.remove(c.instanceMatrix),c.instanceColor!==null&&n.remove(c.instanceColor)}return{update:s,dispose:a}}let Bd=class extends gn{constructor(e,n,i,r,s,a,o,l,c,h){if(h=h!==void 0?h:yr,h!==yr&&h!==cs)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&h===yr&&(i=qi),i===void 0&&h===cs&&(i=gr),super(null,r,s,a,o,l,h,i,c),this.isDepthTexture=!0,this.image={width:e,height:n},this.magFilter=o!==void 0?o:en,this.minFilter=l!==void 0?l:en,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const n=super.toJSON(e);return this.compareFunction!==null&&(n.compareFunction=this.compareFunction),n}};const sy=new gn,ay=new Bd(1,1);ay.compareFunction=Ad;const oy=new bh,ly=new Pd,cy=new fl,Zp=[],jp=[],Jp=new Float32Array(16),Kp=new Float32Array(9),Qp=new Float32Array(4);function wa(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let s=Zp[r];if(s===void 0&&(s=new Float32Array(r),Zp[r]=s),e!==0){i.toArray(s,0);for(let a=1,o=0;a!==e;++a)o+=n,t[a].toArray(s,o)}return s}function cn(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function hn(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function Ah(t,e){let n=jp[e];n===void 0&&(n=new Int32Array(e),jp[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function f1(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function d1(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(cn(n,e))return;t.uniform2fv(this.addr,e),hn(n,e)}}function p1(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(e.r!==void 0)(n[0]!==e.r||n[1]!==e.g||n[2]!==e.b)&&(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(cn(n,e))return;t.uniform3fv(this.addr,e),hn(n,e)}}function m1(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(cn(n,e))return;t.uniform4fv(this.addr,e),hn(n,e)}}function v1(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(cn(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),hn(n,e)}else{if(cn(n,i))return;Qp.set(i),t.uniformMatrix2fv(this.addr,!1,Qp),hn(n,i)}}function g1(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(cn(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),hn(n,e)}else{if(cn(n,i))return;Kp.set(i),t.uniformMatrix3fv(this.addr,!1,Kp),hn(n,i)}}function y1(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(cn(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),hn(n,e)}else{if(cn(n,i))return;Jp.set(i),t.uniformMatrix4fv(this.addr,!1,Jp),hn(n,i)}}function x1(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function _1(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2i(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(cn(n,e))return;t.uniform2iv(this.addr,e),hn(n,e)}}function M1(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3i(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(cn(n,e))return;t.uniform3iv(this.addr,e),hn(n,e)}}function b1(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4i(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(cn(n,e))return;t.uniform4iv(this.addr,e),hn(n,e)}}function w1(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function S1(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2ui(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(cn(n,e))return;t.uniform2uiv(this.addr,e),hn(n,e)}}function E1(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3ui(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(cn(n,e))return;t.uniform3uiv(this.addr,e),hn(n,e)}}function T1(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4ui(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(cn(n,e))return;t.uniform4uiv(this.addr,e),hn(n,e)}}function A1(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r);const s=this.type===t.SAMPLER_2D_SHADOW?ay:sy;n.setTexture2D(e||s,r)}function C1(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||ly,r)}function R1(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTextureCube(e||cy,r)}function P1(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||oy,r)}function L1(t){switch(t){case 5126:return f1;case 35664:return d1;case 35665:return p1;case 35666:return m1;case 35674:return v1;case 35675:return g1;case 35676:return y1;case 5124:case 35670:return x1;case 35667:case 35671:return _1;case 35668:case 35672:return M1;case 35669:case 35673:return b1;case 5125:return w1;case 36294:return S1;case 36295:return E1;case 36296:return T1;case 35678:case 36198:case 36298:case 36306:case 35682:return A1;case 35679:case 36299:case 36307:return C1;case 35680:case 36300:case 36308:case 36293:return R1;case 36289:case 36303:case 36311:case 36292:return P1}}function I1(t,e){t.uniform1fv(this.addr,e)}function D1(t,e){const n=wa(e,this.size,2);t.uniform2fv(this.addr,n)}function N1(t,e){const n=wa(e,this.size,3);t.uniform3fv(this.addr,n)}function B1(t,e){const n=wa(e,this.size,4);t.uniform4fv(this.addr,n)}function U1(t,e){const n=wa(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function F1(t,e){const n=wa(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function O1(t,e){const n=wa(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function z1(t,e){t.uniform1iv(this.addr,e)}function G1(t,e){t.uniform2iv(this.addr,e)}function V1(t,e){t.uniform3iv(this.addr,e)}function H1(t,e){t.uniform4iv(this.addr,e)}function k1(t,e){t.uniform1uiv(this.addr,e)}function W1(t,e){t.uniform2uiv(this.addr,e)}function X1(t,e){t.uniform3uiv(this.addr,e)}function q1(t,e){t.uniform4uiv(this.addr,e)}function $1(t,e,n){const i=this.cache,r=e.length,s=Ah(n,r);cn(i,s)||(t.uniform1iv(this.addr,s),hn(i,s));for(let a=0;a!==r;++a)n.setTexture2D(e[a]||sy,s[a])}function Y1(t,e,n){const i=this.cache,r=e.length,s=Ah(n,r);cn(i,s)||(t.uniform1iv(this.addr,s),hn(i,s));for(let a=0;a!==r;++a)n.setTexture3D(e[a]||ly,s[a])}function Z1(t,e,n){const i=this.cache,r=e.length,s=Ah(n,r);cn(i,s)||(t.uniform1iv(this.addr,s),hn(i,s));for(let a=0;a!==r;++a)n.setTextureCube(e[a]||cy,s[a])}function j1(t,e,n){const i=this.cache,r=e.length,s=Ah(n,r);cn(i,s)||(t.uniform1iv(this.addr,s),hn(i,s));for(let a=0;a!==r;++a)n.setTexture2DArray(e[a]||oy,s[a])}function J1(t){switch(t){case 5126:return I1;case 35664:return D1;case 35665:return N1;case 35666:return B1;case 35674:return U1;case 35675:return F1;case 35676:return O1;case 5124:case 35670:return z1;case 35667:case 35671:return G1;case 35668:case 35672:return V1;case 35669:case 35673:return H1;case 5125:return k1;case 36294:return W1;case 36295:return X1;case 36296:return q1;case 35678:case 36198:case 36298:case 36306:case 35682:return $1;case 35679:case 36299:case 36307:return Y1;case 35680:case 36300:case 36308:case 36293:return Z1;case 36289:case 36303:case 36311:case 36292:return j1}}let K1=class{constructor(e,n,i){this.id=e,this.addr=i,this.cache=[],this.type=n.type,this.setValue=L1(n.type)}},Q1=class{constructor(e,n,i){this.id=e,this.addr=i,this.cache=[],this.type=n.type,this.size=n.size,this.setValue=J1(n.type)}},eS=class{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,n,i){const r=this.seq;for(let s=0,a=r.length;s!==a;++s){const o=r[s];o.setValue(e,n[o.id],i)}}};const au=/(\w+)(\])?(\[|\.)?/g;function em(t,e){t.seq.push(e),t.map[e.id]=e}function tS(t,e,n){const i=t.name,r=i.length;for(au.lastIndex=0;;){const s=au.exec(i),a=au.lastIndex;let o=s[1];const l=s[2]==="]",c=s[3];if(l&&(o=o|0),c===void 0||c==="["&&a+2===r){em(n,c===void 0?new K1(o,t,e):new Q1(o,t,e));break}else{let u=n.map[o];u===void 0&&(u=new eS(o),em(n,u)),n=u}}}let Mc=class{constructor(e,n){this.seq=[],this.map={};const i=e.getProgramParameter(n,e.ACTIVE_UNIFORMS);for(let r=0;r<i;++r){const s=e.getActiveUniform(n,r),a=e.getUniformLocation(n,s.name);tS(s,a,this)}}setValue(e,n,i,r){const s=this.map[n];s!==void 0&&s.setValue(e,i,r)}setOptional(e,n,i){const r=n[i];r!==void 0&&this.setValue(e,i,r)}static upload(e,n,i,r){for(let s=0,a=n.length;s!==a;++s){const o=n[s],l=i[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,r)}}static seqWithValue(e,n){const i=[];for(let r=0,s=e.length;r!==s;++r){const a=e[r];a.id in n&&i.push(a)}return i}};function tm(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}const nS=37297;let iS=0;function rS(t,e){const n=t.split(`
`),i=[],r=Math.max(e-6,0),s=Math.min(e+6,n.length);for(let a=r;a<s;a++){const o=a+1;i.push(`${o===e?">":" "} ${o}: ${n[a]}`)}return i.join(`
`)}function sS(t){const e=Bt.getPrimaries(Bt.workingColorSpace),n=Bt.getPrimaries(t);let i;switch(e===n?i="":e===co&&n===lo?i="LinearDisplayP3ToLinearSRGB":e===lo&&n===co&&(i="LinearSRGBToLinearDisplayP3"),t){case Ci:case hl:return[i,"LinearTransferOETF"];case on:case Mh:return[i,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",t),[i,"LinearTransferOETF"]}}function nm(t,e,n){const i=t.getShaderParameter(e,t.COMPILE_STATUS),r=t.getShaderInfoLog(e).trim();if(i&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const a=parseInt(s[1]);return n.toUpperCase()+`

`+r+`

`+rS(t.getShaderSource(e),a)}else return r}function aS(t,e){const n=sS(e);return`vec4 ${t}( vec4 value ) { return ${n[0]}( ${n[1]}( value ) ); }`}function oS(t,e){let n;switch(e){case dg:n="Linear";break;case pg:n="Reinhard";break;case mg:n="OptimizedCineon";break;case vg:n="ACESFilmic";break;case yg:n="AgX";break;case gg:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function lS(t){return[t.extensionDerivatives||t.envMapCubeUVHeight||t.bumpMap||t.normalMapTangentSpace||t.clearcoatNormalMap||t.flatShading||t.alphaToCoverage||t.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter($s).join(`
`)}function cS(t){return[t.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",t.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter($s).join(`
`)}function hS(t){const e=[];for(const n in t){const i=t[n];i!==!1&&e.push("#define "+n+" "+i)}return e.join(`
`)}function uS(t,e){const n={},i=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const s=t.getActiveAttrib(e,r),a=s.name;let o=1;s.type===t.FLOAT_MAT2&&(o=2),s.type===t.FLOAT_MAT3&&(o=3),s.type===t.FLOAT_MAT4&&(o=4),n[a]={type:s.type,location:t.getAttribLocation(e,a),locationSize:o}}return n}function $s(t){return t!==""}function im(t,e){const n=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function rm(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const fS=/^[ \t]*#include +<([\w\d./]+)>/gm;function bf(t){return t.replace(fS,pS)}const dS=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function pS(t,e){let n=At[e];if(n===void 0){const i=dS.get(e);if(i!==void 0)n=At[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return bf(n)}const mS=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function sm(t){return t.replace(mS,vS)}function vS(t,e,n,i){let r="";for(let s=parseInt(e);s<parseInt(n);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function am(t){let e=`precision ${t.precision} float;
	precision ${t.precision} int;
	precision ${t.precision} sampler2D;
	precision ${t.precision} samplerCube;
	`;return t.isWebGL2&&(e+=`precision ${t.precision} sampler3D;
		precision ${t.precision} sampler2DArray;
		precision ${t.precision} sampler2DShadow;
		precision ${t.precision} samplerCubeShadow;
		precision ${t.precision} sampler2DArrayShadow;
		precision ${t.precision} isampler2D;
		precision ${t.precision} isampler3D;
		precision ${t.precision} isamplerCube;
		precision ${t.precision} isampler2DArray;
		precision ${t.precision} usampler2D;
		precision ${t.precision} usampler3D;
		precision ${t.precision} usamplerCube;
		precision ${t.precision} usampler2DArray;
		`),t.precision==="highp"?e+=`
#define HIGH_PRECISION`:t.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:t.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function gS(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===vd?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===gd?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===bi&&(e="SHADOWMAP_TYPE_VSM"),e}function yS(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case Ki:case Sr:e="ENVMAP_TYPE_CUBE";break;case ba:e="ENVMAP_TYPE_CUBE_UV";break}return e}function xS(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case Sr:e="ENVMAP_MODE_REFRACTION";break}return e}function _S(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case cl:e="ENVMAP_BLENDING_MULTIPLY";break;case ug:e="ENVMAP_BLENDING_MIX";break;case fg:e="ENVMAP_BLENDING_ADD";break}return e}function MS(t){const e=t.envMapCubeUVHeight;if(e===null)return null;const n=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,n),7*16)),texelHeight:i,maxMip:n}}function bS(t,e,n,i){const r=t.getContext(),s=n.defines;let a=n.vertexShader,o=n.fragmentShader;const l=gS(n),c=yS(n),h=xS(n),u=_S(n),f=MS(n),d=n.isWebGL2?"":lS(n),p=cS(n),g=hS(s),v=r.createProgram();let m,y,x=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(m=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,g].filter($s).join(`
`),m.length>0&&(m+=`
`),y=[d,"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,g].filter($s).join(`
`),y.length>0&&(y+=`
`)):(m=[am(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,g,n.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",n.batching?"#define USE_BATCHING":"",n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&n.flatShading===!1?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter($s).join(`
`),y=[d,am(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,g,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&n.flatShading===!1?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==Zi?"#define TONE_MAPPING":"",n.toneMapping!==Zi?At.tonemapping_pars_fragment:"",n.toneMapping!==Zi?oS("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",At.colorspace_pars_fragment,aS("linearToOutputTexel",n.outputColorSpace),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter($s).join(`
`)),a=bf(a),a=im(a,n),a=rm(a,n),o=bf(o),o=im(o,n),o=rm(o,n),a=sm(a),o=sm(o),n.isWebGL2&&n.isRawShaderMaterial!==!0&&(x=`#version 300 es
`,m=[p,"precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,y=["precision mediump sampler2DArray;","#define varying in",n.glslVersion===yf?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===yf?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+y);const _=x+m+a,b=x+y+o,w=tm(r,r.VERTEX_SHADER,_),S=tm(r,r.FRAGMENT_SHADER,b);r.attachShader(v,w),r.attachShader(v,S),n.index0AttributeName!==void 0?r.bindAttribLocation(v,0,n.index0AttributeName):n.morphTargets===!0&&r.bindAttribLocation(v,0,"position"),r.linkProgram(v);function C(N){if(t.debug.checkShaderErrors){const k=r.getProgramInfoLog(v).trim(),F=r.getShaderInfoLog(w).trim(),V=r.getShaderInfoLog(S).trim();let ee=!0,R=!0;if(r.getProgramParameter(v,r.LINK_STATUS)===!1)if(ee=!1,typeof t.debug.onShaderError=="function")t.debug.onShaderError(r,v,w,S);else{const T=nm(r,w,"vertex"),H=nm(r,S,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(v,r.VALIDATE_STATUS)+`

Material Name: `+N.name+`
Material Type: `+N.type+`

Program Info Log: `+k+`
`+T+`
`+H)}else k!==""?console.warn("THREE.WebGLProgram: Program Info Log:",k):(F===""||V==="")&&(R=!1);R&&(N.diagnostics={runnable:ee,programLog:k,vertexShader:{log:F,prefix:m},fragmentShader:{log:V,prefix:y}})}r.deleteShader(w),r.deleteShader(S),L=new Mc(r,v),M=uS(r,v)}let L;this.getUniforms=function(){return L===void 0&&C(this),L};let M;this.getAttributes=function(){return M===void 0&&C(this),M};let E=n.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return E===!1&&(E=r.getProgramParameter(v,nS)),E},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(v),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=iS++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=w,this.fragmentShader=S,this}let wS=0;class SS{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const n=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(n),s=this._getShaderStage(i),a=this._getShaderCacheForMaterial(e);return a.has(r)===!1&&(a.add(r),r.usedTimes++),a.has(s)===!1&&(a.add(s),s.usedTimes++),this}remove(e){const n=this.materialCache.get(e);for(const i of n)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const n=this.materialCache;let i=n.get(e);return i===void 0&&(i=new Set,n.set(e,i)),i}_getShaderStage(e){const n=this.shaderCache;let i=n.get(e);return i===void 0&&(i=new ES(e),n.set(e,i)),i}}class ES{constructor(e){this.id=wS++,this.code=e,this.usedTimes=0}}function TS(t,e,n,i,r,s,a){const o=new wh,l=new SS,c=new Set,h=[],u=r.isWebGL2,f=r.logarithmicDepthBuffer,d=r.vertexTextures;let p=r.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(M){return c.add(M),M===0?"uv":`uv${M}`}function m(M,E,N,k,F){const V=k.fog,ee=F.geometry,R=M.isMeshStandardMaterial?k.environment:null,T=(M.isMeshStandardMaterial?n:e).get(M.envMap||R),H=T&&T.mapping===ba?T.image.height:null,O=g[M.type];M.precision!==null&&(p=r.getMaxPrecision(M.precision),p!==M.precision&&console.warn("THREE.WebGLProgram.getParameters:",M.precision,"not supported, using",p,"instead."));const B=ee.morphAttributes.position||ee.morphAttributes.normal||ee.morphAttributes.color,q=B!==void 0?B.length:0;let G=0;ee.morphAttributes.position!==void 0&&(G=1),ee.morphAttributes.normal!==void 0&&(G=2),ee.morphAttributes.color!==void 0&&(G=3);let A,U,J,$;if(O){const _t=fi[O];A=_t.vertexShader,U=_t.fragmentShader}else A=M.vertexShader,U=M.fragmentShader,l.update(M),J=l.getVertexShaderID(M),$=l.getFragmentShaderID(M);const ie=t.getRenderTarget(),re=F.isInstancedMesh===!0,de=F.isBatchedMesh===!0,me=!!M.map,X=!!M.matcap,pe=!!T,he=!!M.aoMap,ce=!!M.lightMap,oe=!!M.bumpMap,ze=!!M.normalMap,Te=!!M.displacementMap,z=!!M.emissiveMap,I=!!M.metalnessMap,ue=!!M.roughnessMap,we=M.anisotropy>0,ve=M.clearcoat>0,ge=M.iridescence>0,ne=M.sheen>0,ye=M.transmission>0,xe=we&&!!M.anisotropyMap,Fe=ve&&!!M.clearcoatMap,Pe=ve&&!!M.clearcoatNormalMap,Ee=ve&&!!M.clearcoatRoughnessMap,it=ge&&!!M.iridescenceMap,je=ge&&!!M.iridescenceThicknessMap,Je=ne&&!!M.sheenColorMap,Ge=ne&&!!M.sheenRoughnessMap,We=!!M.specularMap,at=!!M.specularColorMap,se=!!M.specularIntensityMap,Oe=ye&&!!M.transmissionMap,He=ye&&!!M.thicknessMap,et=!!M.gradientMap,te=!!M.alphaMap,Ne=M.alphaTest>0,Ue=!!M.alphaHash,Ke=!!M.extensions;let lt=Zi;M.toneMapped&&(ie===null||ie.isXRRenderTarget===!0)&&(lt=t.toneMapping);const Et={isWebGL2:u,shaderID:O,shaderType:M.type,shaderName:M.name,vertexShader:A,fragmentShader:U,defines:M.defines,customVertexShaderID:J,customFragmentShaderID:$,isRawShaderMaterial:M.isRawShaderMaterial===!0,glslVersion:M.glslVersion,precision:p,batching:de,instancing:re,instancingColor:re&&F.instanceColor!==null,supportsVertexTextures:d,outputColorSpace:ie===null?t.outputColorSpace:ie.isXRRenderTarget===!0?ie.texture.colorSpace:Ci,alphaToCoverage:!!M.alphaToCoverage,map:me,matcap:X,envMap:pe,envMapMode:pe&&T.mapping,envMapCubeUVHeight:H,aoMap:he,lightMap:ce,bumpMap:oe,normalMap:ze,displacementMap:d&&Te,emissiveMap:z,normalMapObjectSpace:ze&&M.normalMapType===Dg,normalMapTangentSpace:ze&&M.normalMapType===Rr,metalnessMap:I,roughnessMap:ue,anisotropy:we,anisotropyMap:xe,clearcoat:ve,clearcoatMap:Fe,clearcoatNormalMap:Pe,clearcoatRoughnessMap:Ee,iridescence:ge,iridescenceMap:it,iridescenceThicknessMap:je,sheen:ne,sheenColorMap:Je,sheenRoughnessMap:Ge,specularMap:We,specularColorMap:at,specularIntensityMap:se,transmission:ye,transmissionMap:Oe,thicknessMap:He,gradientMap:et,opaque:M.transparent===!1&&M.blending===is&&M.alphaToCoverage===!1,alphaMap:te,alphaTest:Ne,alphaHash:Ue,combine:M.combine,mapUv:me&&v(M.map.channel),aoMapUv:he&&v(M.aoMap.channel),lightMapUv:ce&&v(M.lightMap.channel),bumpMapUv:oe&&v(M.bumpMap.channel),normalMapUv:ze&&v(M.normalMap.channel),displacementMapUv:Te&&v(M.displacementMap.channel),emissiveMapUv:z&&v(M.emissiveMap.channel),metalnessMapUv:I&&v(M.metalnessMap.channel),roughnessMapUv:ue&&v(M.roughnessMap.channel),anisotropyMapUv:xe&&v(M.anisotropyMap.channel),clearcoatMapUv:Fe&&v(M.clearcoatMap.channel),clearcoatNormalMapUv:Pe&&v(M.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Ee&&v(M.clearcoatRoughnessMap.channel),iridescenceMapUv:it&&v(M.iridescenceMap.channel),iridescenceThicknessMapUv:je&&v(M.iridescenceThicknessMap.channel),sheenColorMapUv:Je&&v(M.sheenColorMap.channel),sheenRoughnessMapUv:Ge&&v(M.sheenRoughnessMap.channel),specularMapUv:We&&v(M.specularMap.channel),specularColorMapUv:at&&v(M.specularColorMap.channel),specularIntensityMapUv:se&&v(M.specularIntensityMap.channel),transmissionMapUv:Oe&&v(M.transmissionMap.channel),thicknessMapUv:He&&v(M.thicknessMap.channel),alphaMapUv:te&&v(M.alphaMap.channel),vertexTangents:!!ee.attributes.tangent&&(ze||we),vertexColors:M.vertexColors,vertexAlphas:M.vertexColors===!0&&!!ee.attributes.color&&ee.attributes.color.itemSize===4,pointsUvs:F.isPoints===!0&&!!ee.attributes.uv&&(me||te),fog:!!V,useFog:M.fog===!0,fogExp2:!!V&&V.isFogExp2,flatShading:M.flatShading===!0,sizeAttenuation:M.sizeAttenuation===!0,logarithmicDepthBuffer:f,skinning:F.isSkinnedMesh===!0,morphTargets:ee.morphAttributes.position!==void 0,morphNormals:ee.morphAttributes.normal!==void 0,morphColors:ee.morphAttributes.color!==void 0,morphTargetsCount:q,morphTextureStride:G,numDirLights:E.directional.length,numPointLights:E.point.length,numSpotLights:E.spot.length,numSpotLightMaps:E.spotLightMap.length,numRectAreaLights:E.rectArea.length,numHemiLights:E.hemi.length,numDirLightShadows:E.directionalShadowMap.length,numPointLightShadows:E.pointShadowMap.length,numSpotLightShadows:E.spotShadowMap.length,numSpotLightShadowsWithMaps:E.numSpotLightShadowsWithMaps,numLightProbes:E.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:M.dithering,shadowMapEnabled:t.shadowMap.enabled&&N.length>0,shadowMapType:t.shadowMap.type,toneMapping:lt,useLegacyLights:t._useLegacyLights,decodeVideoTexture:me&&M.map.isVideoTexture===!0&&Bt.getTransfer(M.map.colorSpace)===Gt,premultipliedAlpha:M.premultipliedAlpha,doubleSided:M.side===Si,flipSided:M.side===Ln,useDepthPacking:M.depthPacking>=0,depthPacking:M.depthPacking||0,index0AttributeName:M.index0AttributeName,extensionDerivatives:Ke&&M.extensions.derivatives===!0,extensionFragDepth:Ke&&M.extensions.fragDepth===!0,extensionDrawBuffers:Ke&&M.extensions.drawBuffers===!0,extensionShaderTextureLOD:Ke&&M.extensions.shaderTextureLOD===!0,extensionClipCullDistance:Ke&&M.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:Ke&&M.extensions.multiDraw===!0&&i.has("WEBGL_multi_draw"),rendererExtensionFragDepth:u||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||i.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:M.customProgramCacheKey()};return Et.vertexUv1s=c.has(1),Et.vertexUv2s=c.has(2),Et.vertexUv3s=c.has(3),c.clear(),Et}function y(M){const E=[];if(M.shaderID?E.push(M.shaderID):(E.push(M.customVertexShaderID),E.push(M.customFragmentShaderID)),M.defines!==void 0)for(const N in M.defines)E.push(N),E.push(M.defines[N]);return M.isRawShaderMaterial===!1&&(x(E,M),_(E,M),E.push(t.outputColorSpace)),E.push(M.customProgramCacheKey),E.join()}function x(M,E){M.push(E.precision),M.push(E.outputColorSpace),M.push(E.envMapMode),M.push(E.envMapCubeUVHeight),M.push(E.mapUv),M.push(E.alphaMapUv),M.push(E.lightMapUv),M.push(E.aoMapUv),M.push(E.bumpMapUv),M.push(E.normalMapUv),M.push(E.displacementMapUv),M.push(E.emissiveMapUv),M.push(E.metalnessMapUv),M.push(E.roughnessMapUv),M.push(E.anisotropyMapUv),M.push(E.clearcoatMapUv),M.push(E.clearcoatNormalMapUv),M.push(E.clearcoatRoughnessMapUv),M.push(E.iridescenceMapUv),M.push(E.iridescenceThicknessMapUv),M.push(E.sheenColorMapUv),M.push(E.sheenRoughnessMapUv),M.push(E.specularMapUv),M.push(E.specularColorMapUv),M.push(E.specularIntensityMapUv),M.push(E.transmissionMapUv),M.push(E.thicknessMapUv),M.push(E.combine),M.push(E.fogExp2),M.push(E.sizeAttenuation),M.push(E.morphTargetsCount),M.push(E.morphAttributeCount),M.push(E.numDirLights),M.push(E.numPointLights),M.push(E.numSpotLights),M.push(E.numSpotLightMaps),M.push(E.numHemiLights),M.push(E.numRectAreaLights),M.push(E.numDirLightShadows),M.push(E.numPointLightShadows),M.push(E.numSpotLightShadows),M.push(E.numSpotLightShadowsWithMaps),M.push(E.numLightProbes),M.push(E.shadowMapType),M.push(E.toneMapping),M.push(E.numClippingPlanes),M.push(E.numClipIntersection),M.push(E.depthPacking)}function _(M,E){o.disableAll(),E.isWebGL2&&o.enable(0),E.supportsVertexTextures&&o.enable(1),E.instancing&&o.enable(2),E.instancingColor&&o.enable(3),E.matcap&&o.enable(4),E.envMap&&o.enable(5),E.normalMapObjectSpace&&o.enable(6),E.normalMapTangentSpace&&o.enable(7),E.clearcoat&&o.enable(8),E.iridescence&&o.enable(9),E.alphaTest&&o.enable(10),E.vertexColors&&o.enable(11),E.vertexAlphas&&o.enable(12),E.vertexUv1s&&o.enable(13),E.vertexUv2s&&o.enable(14),E.vertexUv3s&&o.enable(15),E.vertexTangents&&o.enable(16),E.anisotropy&&o.enable(17),E.alphaHash&&o.enable(18),E.batching&&o.enable(19),M.push(o.mask),o.disableAll(),E.fog&&o.enable(0),E.useFog&&o.enable(1),E.flatShading&&o.enable(2),E.logarithmicDepthBuffer&&o.enable(3),E.skinning&&o.enable(4),E.morphTargets&&o.enable(5),E.morphNormals&&o.enable(6),E.morphColors&&o.enable(7),E.premultipliedAlpha&&o.enable(8),E.shadowMapEnabled&&o.enable(9),E.useLegacyLights&&o.enable(10),E.doubleSided&&o.enable(11),E.flipSided&&o.enable(12),E.useDepthPacking&&o.enable(13),E.dithering&&o.enable(14),E.transmission&&o.enable(15),E.sheen&&o.enable(16),E.opaque&&o.enable(17),E.pointsUvs&&o.enable(18),E.decodeVideoTexture&&o.enable(19),E.alphaToCoverage&&o.enable(20),M.push(o.mask)}function b(M){const E=g[M.type];let N;if(E){const k=fi[E];N=ey.clone(k.uniforms)}else N=M.uniforms;return N}function w(M,E){let N;for(let k=0,F=h.length;k<F;k++){const V=h[k];if(V.cacheKey===E){N=V,++N.usedTimes;break}}return N===void 0&&(N=new bS(t,E,M,s),h.push(N)),N}function S(M){if(--M.usedTimes===0){const E=h.indexOf(M);h[E]=h[h.length-1],h.pop(),M.destroy()}}function C(M){l.remove(M)}function L(){l.dispose()}return{getParameters:m,getProgramCacheKey:y,getUniforms:b,acquireProgram:w,releaseProgram:S,releaseShaderCache:C,programs:h,dispose:L}}function AS(){let t=new WeakMap;function e(s){let a=t.get(s);return a===void 0&&(a={},t.set(s,a)),a}function n(s){t.delete(s)}function i(s,a,o){t.get(s)[a]=o}function r(){t=new WeakMap}return{get:e,remove:n,update:i,dispose:r}}function CS(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function om(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function lm(){const t=[];let e=0;const n=[],i=[],r=[];function s(){e=0,n.length=0,i.length=0,r.length=0}function a(u,f,d,p,g,v){let m=t[e];return m===void 0?(m={id:u.id,object:u,geometry:f,material:d,groupOrder:p,renderOrder:u.renderOrder,z:g,group:v},t[e]=m):(m.id=u.id,m.object=u,m.geometry=f,m.material=d,m.groupOrder=p,m.renderOrder=u.renderOrder,m.z=g,m.group=v),e++,m}function o(u,f,d,p,g,v){const m=a(u,f,d,p,g,v);d.transmission>0?i.push(m):d.transparent===!0?r.push(m):n.push(m)}function l(u,f,d,p,g,v){const m=a(u,f,d,p,g,v);d.transmission>0?i.unshift(m):d.transparent===!0?r.unshift(m):n.unshift(m)}function c(u,f){n.length>1&&n.sort(u||CS),i.length>1&&i.sort(f||om),r.length>1&&r.sort(f||om)}function h(){for(let u=e,f=t.length;u<f;u++){const d=t[u];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:n,transmissive:i,transparent:r,init:s,push:o,unshift:l,finish:h,sort:c}}function RS(){let t=new WeakMap;function e(i,r){const s=t.get(i);let a;return s===void 0?(a=new lm,t.set(i,[a])):r>=s.length?(a=new lm,s.push(a)):a=s[r],a}function n(){t=new WeakMap}return{get:e,dispose:n}}function PS(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new K,color:new rt};break;case"SpotLight":n={position:new K,direction:new K,color:new rt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new K,color:new rt,distance:0,decay:0};break;case"HemisphereLight":n={direction:new K,skyColor:new rt,groundColor:new rt};break;case"RectAreaLight":n={color:new rt,position:new K,halfWidth:new K,halfHeight:new K};break}return t[e.id]=n,n}}}function LS(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new De};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new De};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new De,shadowCameraNear:1,shadowCameraFar:1e3};break}return t[e.id]=n,n}}}let IS=0;function DS(t,e){return(e.castShadow?2:0)-(t.castShadow?2:0)+(e.map?1:0)-(t.map?1:0)}function NS(t,e){const n=new PS,i=LS(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let h=0;h<9;h++)r.probe.push(new K);const s=new K,a=new Mt,o=new Mt;function l(h,u){let f=0,d=0,p=0;for(let N=0;N<9;N++)r.probe[N].set(0,0,0);let g=0,v=0,m=0,y=0,x=0,_=0,b=0,w=0,S=0,C=0,L=0;h.sort(DS);const M=u===!0?Math.PI:1;for(let N=0,k=h.length;N<k;N++){const F=h[N],V=F.color,ee=F.intensity,R=F.distance,T=F.shadow&&F.shadow.map?F.shadow.map.texture:null;if(F.isAmbientLight)f+=V.r*ee*M,d+=V.g*ee*M,p+=V.b*ee*M;else if(F.isLightProbe){for(let H=0;H<9;H++)r.probe[H].addScaledVector(F.sh.coefficients[H],ee);L++}else if(F.isDirectionalLight){const H=n.get(F);if(H.color.copy(F.color).multiplyScalar(F.intensity*M),F.castShadow){const O=F.shadow,B=i.get(F);B.shadowBias=O.bias,B.shadowNormalBias=O.normalBias,B.shadowRadius=O.radius,B.shadowMapSize=O.mapSize,r.directionalShadow[g]=B,r.directionalShadowMap[g]=T,r.directionalShadowMatrix[g]=F.shadow.matrix,_++}r.directional[g]=H,g++}else if(F.isSpotLight){const H=n.get(F);H.position.setFromMatrixPosition(F.matrixWorld),H.color.copy(V).multiplyScalar(ee*M),H.distance=R,H.coneCos=Math.cos(F.angle),H.penumbraCos=Math.cos(F.angle*(1-F.penumbra)),H.decay=F.decay,r.spot[m]=H;const O=F.shadow;if(F.map&&(r.spotLightMap[S]=F.map,S++,O.updateMatrices(F),F.castShadow&&C++),r.spotLightMatrix[m]=O.matrix,F.castShadow){const B=i.get(F);B.shadowBias=O.bias,B.shadowNormalBias=O.normalBias,B.shadowRadius=O.radius,B.shadowMapSize=O.mapSize,r.spotShadow[m]=B,r.spotShadowMap[m]=T,w++}m++}else if(F.isRectAreaLight){const H=n.get(F);H.color.copy(V).multiplyScalar(ee),H.halfWidth.set(F.width*.5,0,0),H.halfHeight.set(0,F.height*.5,0),r.rectArea[y]=H,y++}else if(F.isPointLight){const H=n.get(F);if(H.color.copy(F.color).multiplyScalar(F.intensity*M),H.distance=F.distance,H.decay=F.decay,F.castShadow){const O=F.shadow,B=i.get(F);B.shadowBias=O.bias,B.shadowNormalBias=O.normalBias,B.shadowRadius=O.radius,B.shadowMapSize=O.mapSize,B.shadowCameraNear=O.camera.near,B.shadowCameraFar=O.camera.far,r.pointShadow[v]=B,r.pointShadowMap[v]=T,r.pointShadowMatrix[v]=F.shadow.matrix,b++}r.point[v]=H,v++}else if(F.isHemisphereLight){const H=n.get(F);H.skyColor.copy(F.color).multiplyScalar(ee*M),H.groundColor.copy(F.groundColor).multiplyScalar(ee*M),r.hemi[x]=H,x++}}y>0&&(e.isWebGL2?t.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=Ye.LTC_FLOAT_1,r.rectAreaLTC2=Ye.LTC_FLOAT_2):(r.rectAreaLTC1=Ye.LTC_HALF_1,r.rectAreaLTC2=Ye.LTC_HALF_2):t.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=Ye.LTC_FLOAT_1,r.rectAreaLTC2=Ye.LTC_FLOAT_2):t.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=Ye.LTC_HALF_1,r.rectAreaLTC2=Ye.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=f,r.ambient[1]=d,r.ambient[2]=p;const E=r.hash;(E.directionalLength!==g||E.pointLength!==v||E.spotLength!==m||E.rectAreaLength!==y||E.hemiLength!==x||E.numDirectionalShadows!==_||E.numPointShadows!==b||E.numSpotShadows!==w||E.numSpotMaps!==S||E.numLightProbes!==L)&&(r.directional.length=g,r.spot.length=m,r.rectArea.length=y,r.point.length=v,r.hemi.length=x,r.directionalShadow.length=_,r.directionalShadowMap.length=_,r.pointShadow.length=b,r.pointShadowMap.length=b,r.spotShadow.length=w,r.spotShadowMap.length=w,r.directionalShadowMatrix.length=_,r.pointShadowMatrix.length=b,r.spotLightMatrix.length=w+S-C,r.spotLightMap.length=S,r.numSpotLightShadowsWithMaps=C,r.numLightProbes=L,E.directionalLength=g,E.pointLength=v,E.spotLength=m,E.rectAreaLength=y,E.hemiLength=x,E.numDirectionalShadows=_,E.numPointShadows=b,E.numSpotShadows=w,E.numSpotMaps=S,E.numLightProbes=L,r.version=IS++)}function c(h,u){let f=0,d=0,p=0,g=0,v=0;const m=u.matrixWorldInverse;for(let y=0,x=h.length;y<x;y++){const _=h[y];if(_.isDirectionalLight){const b=r.directional[f];b.direction.setFromMatrixPosition(_.matrixWorld),s.setFromMatrixPosition(_.target.matrixWorld),b.direction.sub(s),b.direction.transformDirection(m),f++}else if(_.isSpotLight){const b=r.spot[p];b.position.setFromMatrixPosition(_.matrixWorld),b.position.applyMatrix4(m),b.direction.setFromMatrixPosition(_.matrixWorld),s.setFromMatrixPosition(_.target.matrixWorld),b.direction.sub(s),b.direction.transformDirection(m),p++}else if(_.isRectAreaLight){const b=r.rectArea[g];b.position.setFromMatrixPosition(_.matrixWorld),b.position.applyMatrix4(m),o.identity(),a.copy(_.matrixWorld),a.premultiply(m),o.extractRotation(a),b.halfWidth.set(_.width*.5,0,0),b.halfHeight.set(0,_.height*.5,0),b.halfWidth.applyMatrix4(o),b.halfHeight.applyMatrix4(o),g++}else if(_.isPointLight){const b=r.point[d];b.position.setFromMatrixPosition(_.matrixWorld),b.position.applyMatrix4(m),d++}else if(_.isHemisphereLight){const b=r.hemi[v];b.direction.setFromMatrixPosition(_.matrixWorld),b.direction.transformDirection(m),v++}}}return{setup:l,setupView:c,state:r}}function cm(t,e){const n=new NS(t,e),i=[],r=[];function s(){i.length=0,r.length=0}function a(u){i.push(u)}function o(u){r.push(u)}function l(u){n.setup(i,u)}function c(u){n.setupView(i,u)}return{init:s,state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:l,setupLightsView:c,pushLight:a,pushShadow:o}}function BS(t,e){let n=new WeakMap;function i(s,a=0){const o=n.get(s);let l;return o===void 0?(l=new cm(t,e),n.set(s,[l])):a>=o.length?(l=new cm(t,e),o.push(l)):l=o[a],l}function r(){n=new WeakMap}return{get:i,dispose:r}}let Ud=class extends En{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Lg,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}},Fd=class extends En{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}};const US=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,FS=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function OS(t,e,n){let i=new dl;const r=new De,s=new De,a=new zt,o=new Ud({depthPacking:Ig}),l=new Fd,c={},h=n.maxTextureSize,u={[Ji]:Ln,[Ln]:Ji,[Si]:Si},f=new vi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new De},radius:{value:4}},vertexShader:US,fragmentShader:FS}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const p=new Lt;p.setAttribute("position",new Ut(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new an(p,f),v=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=vd;let m=this.type;this.render=function(w,S,C){if(v.enabled===!1||v.autoUpdate===!1&&v.needsUpdate===!1||w.length===0)return;const L=t.getRenderTarget(),M=t.getActiveCubeFace(),E=t.getActiveMipmapLevel(),N=t.state;N.setBlending(Yi),N.buffers.color.setClear(1,1,1,1),N.buffers.depth.setTest(!0),N.setScissorTest(!1);const k=m!==bi&&this.type===bi,F=m===bi&&this.type!==bi;for(let V=0,ee=w.length;V<ee;V++){const R=w[V],T=R.shadow;if(T===void 0){console.warn("THREE.WebGLShadowMap:",R,"has no shadow.");continue}if(T.autoUpdate===!1&&T.needsUpdate===!1)continue;r.copy(T.mapSize);const H=T.getFrameExtents();if(r.multiply(H),s.copy(T.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(s.x=Math.floor(h/H.x),r.x=s.x*H.x,T.mapSize.x=s.x),r.y>h&&(s.y=Math.floor(h/H.y),r.y=s.y*H.y,T.mapSize.y=s.y)),T.map===null||k===!0||F===!0){const B=this.type!==bi?{minFilter:en,magFilter:en}:{};T.map!==null&&T.map.dispose(),T.map=new mi(r.x,r.y,B),T.map.texture.name=R.name+".shadowMap",T.camera.updateProjectionMatrix()}t.setRenderTarget(T.map),t.clear();const O=T.getViewportCount();for(let B=0;B<O;B++){const q=T.getViewport(B);a.set(s.x*q.x,s.y*q.y,s.x*q.z,s.y*q.w),N.viewport(a),T.updateMatrices(R,B),i=T.getFrustum(),_(S,C,T.camera,R,this.type)}T.isPointLightShadow!==!0&&this.type===bi&&y(T,C),T.needsUpdate=!1}m=this.type,v.needsUpdate=!1,t.setRenderTarget(L,M,E)};function y(w,S){const C=e.update(g);f.defines.VSM_SAMPLES!==w.blurSamples&&(f.defines.VSM_SAMPLES=w.blurSamples,d.defines.VSM_SAMPLES=w.blurSamples,f.needsUpdate=!0,d.needsUpdate=!0),w.mapPass===null&&(w.mapPass=new mi(r.x,r.y)),f.uniforms.shadow_pass.value=w.map.texture,f.uniforms.resolution.value=w.mapSize,f.uniforms.radius.value=w.radius,t.setRenderTarget(w.mapPass),t.clear(),t.renderBufferDirect(S,null,C,f,g,null),d.uniforms.shadow_pass.value=w.mapPass.texture,d.uniforms.resolution.value=w.mapSize,d.uniforms.radius.value=w.radius,t.setRenderTarget(w.map),t.clear(),t.renderBufferDirect(S,null,C,d,g,null)}function x(w,S,C,L){let M=null;const E=C.isPointLight===!0?w.customDistanceMaterial:w.customDepthMaterial;if(E!==void 0)M=E;else if(M=C.isPointLight===!0?l:o,t.localClippingEnabled&&S.clipShadows===!0&&Array.isArray(S.clippingPlanes)&&S.clippingPlanes.length!==0||S.displacementMap&&S.displacementScale!==0||S.alphaMap&&S.alphaTest>0||S.map&&S.alphaTest>0){const N=M.uuid,k=S.uuid;let F=c[N];F===void 0&&(F={},c[N]=F);let V=F[k];V===void 0&&(V=M.clone(),F[k]=V,S.addEventListener("dispose",b)),M=V}if(M.visible=S.visible,M.wireframe=S.wireframe,L===bi?M.side=S.shadowSide!==null?S.shadowSide:S.side:M.side=S.shadowSide!==null?S.shadowSide:u[S.side],M.alphaMap=S.alphaMap,M.alphaTest=S.alphaTest,M.map=S.map,M.clipShadows=S.clipShadows,M.clippingPlanes=S.clippingPlanes,M.clipIntersection=S.clipIntersection,M.displacementMap=S.displacementMap,M.displacementScale=S.displacementScale,M.displacementBias=S.displacementBias,M.wireframeLinewidth=S.wireframeLinewidth,M.linewidth=S.linewidth,C.isPointLight===!0&&M.isMeshDistanceMaterial===!0){const N=t.properties.get(M);N.light=C}return M}function _(w,S,C,L,M){if(w.visible===!1)return;if(w.layers.test(S.layers)&&(w.isMesh||w.isLine||w.isPoints)&&(w.castShadow||w.receiveShadow&&M===bi)&&(!w.frustumCulled||i.intersectsObject(w))){w.modelViewMatrix.multiplyMatrices(C.matrixWorldInverse,w.matrixWorld);const k=e.update(w),F=w.material;if(Array.isArray(F)){const V=k.groups;for(let ee=0,R=V.length;ee<R;ee++){const T=V[ee],H=F[T.materialIndex];if(H&&H.visible){const O=x(w,H,L,M);w.onBeforeShadow(t,w,S,C,k,O,T),t.renderBufferDirect(C,null,k,O,w,T),w.onAfterShadow(t,w,S,C,k,O,T)}}}else if(F.visible){const V=x(w,F,L,M);w.onBeforeShadow(t,w,S,C,k,V,null),t.renderBufferDirect(C,null,k,V,w,null),w.onAfterShadow(t,w,S,C,k,V,null)}}const N=w.children;for(let k=0,F=N.length;k<F;k++)_(N[k],S,C,L,M)}function b(w){w.target.removeEventListener("dispose",b);for(const C in c){const L=c[C],M=w.target.uuid;M in L&&(L[M].dispose(),delete L[M])}}}function zS(t,e,n){const i=n.isWebGL2;function r(){let te=!1;const Ne=new zt;let Ue=null;const Ke=new zt(0,0,0,0);return{setMask:function(lt){Ue!==lt&&!te&&(t.colorMask(lt,lt,lt,lt),Ue=lt)},setLocked:function(lt){te=lt},setClear:function(lt,Et,_t,gt,be){be===!0&&(lt*=gt,Et*=gt,_t*=gt),Ne.set(lt,Et,_t,gt),Ke.equals(Ne)===!1&&(t.clearColor(lt,Et,_t,gt),Ke.copy(Ne))},reset:function(){te=!1,Ue=null,Ke.set(-1,0,0,0)}}}function s(){let te=!1,Ne=null,Ue=null,Ke=null;return{setTest:function(lt){lt?re(t.DEPTH_TEST):de(t.DEPTH_TEST)},setMask:function(lt){Ne!==lt&&!te&&(t.depthMask(lt),Ne=lt)},setFunc:function(lt){if(Ue!==lt){switch(lt){case rg:t.depthFunc(t.NEVER);break;case sg:t.depthFunc(t.ALWAYS);break;case ag:t.depthFunc(t.LESS);break;case Qa:t.depthFunc(t.LEQUAL);break;case og:t.depthFunc(t.EQUAL);break;case lg:t.depthFunc(t.GEQUAL);break;case cg:t.depthFunc(t.GREATER);break;case hg:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}Ue=lt}},setLocked:function(lt){te=lt},setClear:function(lt){Ke!==lt&&(t.clearDepth(lt),Ke=lt)},reset:function(){te=!1,Ne=null,Ue=null,Ke=null}}}function a(){let te=!1,Ne=null,Ue=null,Ke=null,lt=null,Et=null,_t=null,gt=null,be=null;return{setTest:function(Me){te||(Me?re(t.STENCIL_TEST):de(t.STENCIL_TEST))},setMask:function(Me){Ne!==Me&&!te&&(t.stencilMask(Me),Ne=Me)},setFunc:function(Me,Ce,Re){(Ue!==Me||Ke!==Ce||lt!==Re)&&(t.stencilFunc(Me,Ce,Re),Ue=Me,Ke=Ce,lt=Re)},setOp:function(Me,Ce,Re){(Et!==Me||_t!==Ce||gt!==Re)&&(t.stencilOp(Me,Ce,Re),Et=Me,_t=Ce,gt=Re)},setLocked:function(Me){te=Me},setClear:function(Me){be!==Me&&(t.clearStencil(Me),be=Me)},reset:function(){te=!1,Ne=null,Ue=null,Ke=null,lt=null,Et=null,_t=null,gt=null,be=null}}}const o=new r,l=new s,c=new a,h=new WeakMap,u=new WeakMap;let f={},d={},p=new WeakMap,g=[],v=null,m=!1,y=null,x=null,_=null,b=null,w=null,S=null,C=null,L=new rt(0,0,0),M=0,E=!1,N=null,k=null,F=null,V=null,ee=null;const R=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let T=!1,H=0;const O=t.getParameter(t.VERSION);O.indexOf("WebGL")!==-1?(H=parseFloat(/^WebGL (\d)/.exec(O)[1]),T=H>=1):O.indexOf("OpenGL ES")!==-1&&(H=parseFloat(/^OpenGL ES (\d)/.exec(O)[1]),T=H>=2);let B=null,q={};const G=t.getParameter(t.SCISSOR_BOX),A=t.getParameter(t.VIEWPORT),U=new zt().fromArray(G),J=new zt().fromArray(A);function $(te,Ne,Ue,Ke){const lt=new Uint8Array(4),Et=t.createTexture();t.bindTexture(te,Et),t.texParameteri(te,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(te,t.TEXTURE_MAG_FILTER,t.NEAREST);for(let _t=0;_t<Ue;_t++)i&&(te===t.TEXTURE_3D||te===t.TEXTURE_2D_ARRAY)?t.texImage3D(Ne,0,t.RGBA,1,1,Ke,0,t.RGBA,t.UNSIGNED_BYTE,lt):t.texImage2D(Ne+_t,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,lt);return Et}const ie={};ie[t.TEXTURE_2D]=$(t.TEXTURE_2D,t.TEXTURE_2D,1),ie[t.TEXTURE_CUBE_MAP]=$(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),i&&(ie[t.TEXTURE_2D_ARRAY]=$(t.TEXTURE_2D_ARRAY,t.TEXTURE_2D_ARRAY,1,1),ie[t.TEXTURE_3D]=$(t.TEXTURE_3D,t.TEXTURE_3D,1,1)),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),re(t.DEPTH_TEST),l.setFunc(Qa),Te(!1),z(Ou),re(t.CULL_FACE),oe(Yi);function re(te){f[te]!==!0&&(t.enable(te),f[te]=!0)}function de(te){f[te]!==!1&&(t.disable(te),f[te]=!1)}function me(te,Ne){return d[te]!==Ne?(t.bindFramebuffer(te,Ne),d[te]=Ne,i&&(te===t.DRAW_FRAMEBUFFER&&(d[t.FRAMEBUFFER]=Ne),te===t.FRAMEBUFFER&&(d[t.DRAW_FRAMEBUFFER]=Ne)),!0):!1}function X(te,Ne){let Ue=g,Ke=!1;if(te)if(Ue=p.get(Ne),Ue===void 0&&(Ue=[],p.set(Ne,Ue)),te.isWebGLMultipleRenderTargets){const lt=te.texture;if(Ue.length!==lt.length||Ue[0]!==t.COLOR_ATTACHMENT0){for(let Et=0,_t=lt.length;Et<_t;Et++)Ue[Et]=t.COLOR_ATTACHMENT0+Et;Ue.length=lt.length,Ke=!0}}else Ue[0]!==t.COLOR_ATTACHMENT0&&(Ue[0]=t.COLOR_ATTACHMENT0,Ke=!0);else Ue[0]!==t.BACK&&(Ue[0]=t.BACK,Ke=!0);Ke&&(n.isWebGL2?t.drawBuffers(Ue):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Ue))}function pe(te){return v!==te?(t.useProgram(te),v=te,!0):!1}const he={[dr]:t.FUNC_ADD,[kv]:t.FUNC_SUBTRACT,[Wv]:t.FUNC_REVERSE_SUBTRACT};if(i)he[Hu]=t.MIN,he[ku]=t.MAX;else{const te=e.get("EXT_blend_minmax");te!==null&&(he[Hu]=te.MIN_EXT,he[ku]=te.MAX_EXT)}const ce={[Xv]:t.ZERO,[qv]:t.ONE,[$v]:t.SRC_COLOR,[Ec]:t.SRC_ALPHA,[Qv]:t.SRC_ALPHA_SATURATE,[Jv]:t.DST_COLOR,[Zv]:t.DST_ALPHA,[Yv]:t.ONE_MINUS_SRC_COLOR,[Tc]:t.ONE_MINUS_SRC_ALPHA,[Kv]:t.ONE_MINUS_DST_COLOR,[jv]:t.ONE_MINUS_DST_ALPHA,[eg]:t.CONSTANT_COLOR,[tg]:t.ONE_MINUS_CONSTANT_COLOR,[ng]:t.CONSTANT_ALPHA,[ig]:t.ONE_MINUS_CONSTANT_ALPHA};function oe(te,Ne,Ue,Ke,lt,Et,_t,gt,be,Me){if(te===Yi){m===!0&&(de(t.BLEND),m=!1);return}if(m===!1&&(re(t.BLEND),m=!0),te!==Hv){if(te!==y||Me!==E){if((x!==dr||w!==dr)&&(t.blendEquation(t.FUNC_ADD),x=dr,w=dr),Me)switch(te){case is:t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case zu:t.blendFunc(t.ONE,t.ONE);break;case Gu:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case Vu:t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",te);break}else switch(te){case is:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case zu:t.blendFunc(t.SRC_ALPHA,t.ONE);break;case Gu:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case Vu:t.blendFunc(t.ZERO,t.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",te);break}_=null,b=null,S=null,C=null,L.set(0,0,0),M=0,y=te,E=Me}return}lt=lt||Ne,Et=Et||Ue,_t=_t||Ke,(Ne!==x||lt!==w)&&(t.blendEquationSeparate(he[Ne],he[lt]),x=Ne,w=lt),(Ue!==_||Ke!==b||Et!==S||_t!==C)&&(t.blendFuncSeparate(ce[Ue],ce[Ke],ce[Et],ce[_t]),_=Ue,b=Ke,S=Et,C=_t),(gt.equals(L)===!1||be!==M)&&(t.blendColor(gt.r,gt.g,gt.b,be),L.copy(gt),M=be),y=te,E=!1}function ze(te,Ne){te.side===Si?de(t.CULL_FACE):re(t.CULL_FACE);let Ue=te.side===Ln;Ne&&(Ue=!Ue),Te(Ue),te.blending===is&&te.transparent===!1?oe(Yi):oe(te.blending,te.blendEquation,te.blendSrc,te.blendDst,te.blendEquationAlpha,te.blendSrcAlpha,te.blendDstAlpha,te.blendColor,te.blendAlpha,te.premultipliedAlpha),l.setFunc(te.depthFunc),l.setTest(te.depthTest),l.setMask(te.depthWrite),o.setMask(te.colorWrite);const Ke=te.stencilWrite;c.setTest(Ke),Ke&&(c.setMask(te.stencilWriteMask),c.setFunc(te.stencilFunc,te.stencilRef,te.stencilFuncMask),c.setOp(te.stencilFail,te.stencilZFail,te.stencilZPass)),ue(te.polygonOffset,te.polygonOffsetFactor,te.polygonOffsetUnits),te.alphaToCoverage===!0?re(t.SAMPLE_ALPHA_TO_COVERAGE):de(t.SAMPLE_ALPHA_TO_COVERAGE)}function Te(te){N!==te&&(te?t.frontFace(t.CW):t.frontFace(t.CCW),N=te)}function z(te){te!==Gv?(re(t.CULL_FACE),te!==k&&(te===Ou?t.cullFace(t.BACK):te===Vv?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):de(t.CULL_FACE),k=te}function I(te){te!==F&&(T&&t.lineWidth(te),F=te)}function ue(te,Ne,Ue){te?(re(t.POLYGON_OFFSET_FILL),(V!==Ne||ee!==Ue)&&(t.polygonOffset(Ne,Ue),V=Ne,ee=Ue)):de(t.POLYGON_OFFSET_FILL)}function we(te){te?re(t.SCISSOR_TEST):de(t.SCISSOR_TEST)}function ve(te){te===void 0&&(te=t.TEXTURE0+R-1),B!==te&&(t.activeTexture(te),B=te)}function ge(te,Ne,Ue){Ue===void 0&&(B===null?Ue=t.TEXTURE0+R-1:Ue=B);let Ke=q[Ue];Ke===void 0&&(Ke={type:void 0,texture:void 0},q[Ue]=Ke),(Ke.type!==te||Ke.texture!==Ne)&&(B!==Ue&&(t.activeTexture(Ue),B=Ue),t.bindTexture(te,Ne||ie[te]),Ke.type=te,Ke.texture=Ne)}function ne(){const te=q[B];te!==void 0&&te.type!==void 0&&(t.bindTexture(te.type,null),te.type=void 0,te.texture=void 0)}function ye(){try{t.compressedTexImage2D.apply(t,arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function xe(){try{t.compressedTexImage3D.apply(t,arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function Fe(){try{t.texSubImage2D.apply(t,arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function Pe(){try{t.texSubImage3D.apply(t,arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function Ee(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function it(){try{t.compressedTexSubImage3D.apply(t,arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function je(){try{t.texStorage2D.apply(t,arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function Je(){try{t.texStorage3D.apply(t,arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function Ge(){try{t.texImage2D.apply(t,arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function We(){try{t.texImage3D.apply(t,arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function at(te){U.equals(te)===!1&&(t.scissor(te.x,te.y,te.z,te.w),U.copy(te))}function se(te){J.equals(te)===!1&&(t.viewport(te.x,te.y,te.z,te.w),J.copy(te))}function Oe(te,Ne){let Ue=u.get(Ne);Ue===void 0&&(Ue=new WeakMap,u.set(Ne,Ue));let Ke=Ue.get(te);Ke===void 0&&(Ke=t.getUniformBlockIndex(Ne,te.name),Ue.set(te,Ke))}function He(te,Ne){const Ke=u.get(Ne).get(te);h.get(Ne)!==Ke&&(t.uniformBlockBinding(Ne,Ke,te.__bindingPointIndex),h.set(Ne,Ke))}function et(){t.disable(t.BLEND),t.disable(t.CULL_FACE),t.disable(t.DEPTH_TEST),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.SAMPLE_ALPHA_TO_COVERAGE),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ZERO),t.blendFuncSeparate(t.ONE,t.ZERO,t.ONE,t.ZERO),t.blendColor(0,0,0,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(t.LESS),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(t.ALWAYS,0,4294967295),t.stencilOp(t.KEEP,t.KEEP,t.KEEP),t.clearStencil(0),t.cullFace(t.BACK),t.frontFace(t.CCW),t.polygonOffset(0,0),t.activeTexture(t.TEXTURE0),t.bindFramebuffer(t.FRAMEBUFFER,null),i===!0&&(t.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),t.bindFramebuffer(t.READ_FRAMEBUFFER,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),f={},B=null,q={},d={},p=new WeakMap,g=[],v=null,m=!1,y=null,x=null,_=null,b=null,w=null,S=null,C=null,L=new rt(0,0,0),M=0,E=!1,N=null,k=null,F=null,V=null,ee=null,U.set(0,0,t.canvas.width,t.canvas.height),J.set(0,0,t.canvas.width,t.canvas.height),o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:re,disable:de,bindFramebuffer:me,drawBuffers:X,useProgram:pe,setBlending:oe,setMaterial:ze,setFlipSided:Te,setCullFace:z,setLineWidth:I,setPolygonOffset:ue,setScissorTest:we,activeTexture:ve,bindTexture:ge,unbindTexture:ne,compressedTexImage2D:ye,compressedTexImage3D:xe,texImage2D:Ge,texImage3D:We,updateUBOMapping:Oe,uniformBlockBinding:He,texStorage2D:je,texStorage3D:Je,texSubImage2D:Fe,texSubImage3D:Pe,compressedTexSubImage2D:Ee,compressedTexSubImage3D:it,scissor:at,viewport:se,reset:et}}function GS(t,e,n,i,r,s,a){const o=r.isWebGL2,l=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,c=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),h=new WeakMap;let u;const f=new WeakMap;let d=!1;try{d=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(z,I){return d?new OffscreenCanvas(z,I):fo("canvas")}function g(z,I,ue,we){let ve=1;if((z.width>we||z.height>we)&&(ve=we/Math.max(z.width,z.height)),ve<1||I===!0)if(typeof HTMLImageElement<"u"&&z instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&z instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&z instanceof ImageBitmap){const ge=I?Rc:Math.floor,ne=ge(ve*z.width),ye=ge(ve*z.height);u===void 0&&(u=p(ne,ye));const xe=ue?p(ne,ye):u;return xe.width=ne,xe.height=ye,xe.getContext("2d").drawImage(z,0,0,ne,ye),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+z.width+"x"+z.height+") to ("+ne+"x"+ye+")."),xe}else return"data"in z&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+z.width+"x"+z.height+")."),z;return z}function v(z){return xf(z.width)&&xf(z.height)}function m(z){return o?!1:z.wrapS!==bn||z.wrapT!==bn||z.minFilter!==en&&z.minFilter!==qt}function y(z,I){return z.generateMipmaps&&I&&z.minFilter!==en&&z.minFilter!==qt}function x(z){t.generateMipmap(z)}function _(z,I,ue,we,ve=!1){if(o===!1)return I;if(z!==null){if(t[z]!==void 0)return t[z];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+z+"'")}let ge=I;if(I===t.RED&&(ue===t.FLOAT&&(ge=t.R32F),ue===t.HALF_FLOAT&&(ge=t.R16F),ue===t.UNSIGNED_BYTE&&(ge=t.R8)),I===t.RED_INTEGER&&(ue===t.UNSIGNED_BYTE&&(ge=t.R8UI),ue===t.UNSIGNED_SHORT&&(ge=t.R16UI),ue===t.UNSIGNED_INT&&(ge=t.R32UI),ue===t.BYTE&&(ge=t.R8I),ue===t.SHORT&&(ge=t.R16I),ue===t.INT&&(ge=t.R32I)),I===t.RG&&(ue===t.FLOAT&&(ge=t.RG32F),ue===t.HALF_FLOAT&&(ge=t.RG16F),ue===t.UNSIGNED_BYTE&&(ge=t.RG8)),I===t.RGBA){const ne=ve?oo:Bt.getTransfer(we);ue===t.FLOAT&&(ge=t.RGBA32F),ue===t.HALF_FLOAT&&(ge=t.RGBA16F),ue===t.UNSIGNED_BYTE&&(ge=ne===Gt?t.SRGB8_ALPHA8:t.RGBA8),ue===t.UNSIGNED_SHORT_4_4_4_4&&(ge=t.RGBA4),ue===t.UNSIGNED_SHORT_5_5_5_1&&(ge=t.RGB5_A1)}return(ge===t.R16F||ge===t.R32F||ge===t.RG16F||ge===t.RG32F||ge===t.RGBA16F||ge===t.RGBA32F)&&e.get("EXT_color_buffer_float"),ge}function b(z,I,ue){return y(z,ue)===!0||z.isFramebufferTexture&&z.minFilter!==en&&z.minFilter!==qt?Math.log2(Math.max(I.width,I.height))+1:z.mipmaps!==void 0&&z.mipmaps.length>0?z.mipmaps.length:z.isCompressedTexture&&Array.isArray(z.image)?I.mipmaps.length:1}function w(z){return z===en||z===Ac||z===Zr?t.NEAREST:t.LINEAR}function S(z){const I=z.target;I.removeEventListener("dispose",S),L(I),I.isVideoTexture&&h.delete(I)}function C(z){const I=z.target;I.removeEventListener("dispose",C),E(I)}function L(z){const I=i.get(z);if(I.__webglInit===void 0)return;const ue=z.source,we=f.get(ue);if(we){const ve=we[I.__cacheKey];ve.usedTimes--,ve.usedTimes===0&&M(z),Object.keys(we).length===0&&f.delete(ue)}i.remove(z)}function M(z){const I=i.get(z);t.deleteTexture(I.__webglTexture);const ue=z.source,we=f.get(ue);delete we[I.__cacheKey],a.memory.textures--}function E(z){const I=z.texture,ue=i.get(z),we=i.get(I);if(we.__webglTexture!==void 0&&(t.deleteTexture(we.__webglTexture),a.memory.textures--),z.depthTexture&&z.depthTexture.dispose(),z.isWebGLCubeRenderTarget)for(let ve=0;ve<6;ve++){if(Array.isArray(ue.__webglFramebuffer[ve]))for(let ge=0;ge<ue.__webglFramebuffer[ve].length;ge++)t.deleteFramebuffer(ue.__webglFramebuffer[ve][ge]);else t.deleteFramebuffer(ue.__webglFramebuffer[ve]);ue.__webglDepthbuffer&&t.deleteRenderbuffer(ue.__webglDepthbuffer[ve])}else{if(Array.isArray(ue.__webglFramebuffer))for(let ve=0;ve<ue.__webglFramebuffer.length;ve++)t.deleteFramebuffer(ue.__webglFramebuffer[ve]);else t.deleteFramebuffer(ue.__webglFramebuffer);if(ue.__webglDepthbuffer&&t.deleteRenderbuffer(ue.__webglDepthbuffer),ue.__webglMultisampledFramebuffer&&t.deleteFramebuffer(ue.__webglMultisampledFramebuffer),ue.__webglColorRenderbuffer)for(let ve=0;ve<ue.__webglColorRenderbuffer.length;ve++)ue.__webglColorRenderbuffer[ve]&&t.deleteRenderbuffer(ue.__webglColorRenderbuffer[ve]);ue.__webglDepthRenderbuffer&&t.deleteRenderbuffer(ue.__webglDepthRenderbuffer)}if(z.isWebGLMultipleRenderTargets)for(let ve=0,ge=I.length;ve<ge;ve++){const ne=i.get(I[ve]);ne.__webglTexture&&(t.deleteTexture(ne.__webglTexture),a.memory.textures--),i.remove(I[ve])}i.remove(I),i.remove(z)}let N=0;function k(){N=0}function F(){const z=N;return z>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+z+" texture units while this GPU supports only "+r.maxTextures),N+=1,z}function V(z){const I=[];return I.push(z.wrapS),I.push(z.wrapT),I.push(z.wrapR||0),I.push(z.magFilter),I.push(z.minFilter),I.push(z.anisotropy),I.push(z.internalFormat),I.push(z.format),I.push(z.type),I.push(z.generateMipmaps),I.push(z.premultiplyAlpha),I.push(z.flipY),I.push(z.unpackAlignment),I.push(z.colorSpace),I.join()}function ee(z,I){const ue=i.get(z);if(z.isVideoTexture&&ze(z),z.isRenderTargetTexture===!1&&z.version>0&&ue.__version!==z.version){const we=z.image;if(we===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(we.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{U(ue,z,I);return}}n.bindTexture(t.TEXTURE_2D,ue.__webglTexture,t.TEXTURE0+I)}function R(z,I){const ue=i.get(z);if(z.version>0&&ue.__version!==z.version){U(ue,z,I);return}n.bindTexture(t.TEXTURE_2D_ARRAY,ue.__webglTexture,t.TEXTURE0+I)}function T(z,I){const ue=i.get(z);if(z.version>0&&ue.__version!==z.version){U(ue,z,I);return}n.bindTexture(t.TEXTURE_3D,ue.__webglTexture,t.TEXTURE0+I)}function H(z,I){const ue=i.get(z);if(z.version>0&&ue.__version!==z.version){J(ue,z,I);return}n.bindTexture(t.TEXTURE_CUBE_MAP,ue.__webglTexture,t.TEXTURE0+I)}const O={[no]:t.REPEAT,[bn]:t.CLAMP_TO_EDGE,[io]:t.MIRRORED_REPEAT},B={[en]:t.NEAREST,[Ac]:t.NEAREST_MIPMAP_NEAREST,[Zr]:t.NEAREST_MIPMAP_LINEAR,[qt]:t.LINEAR,[qa]:t.LINEAR_MIPMAP_NEAREST,[Ti]:t.LINEAR_MIPMAP_LINEAR},q={[Ng]:t.NEVER,[Gg]:t.ALWAYS,[Bg]:t.LESS,[Ad]:t.LEQUAL,[Ug]:t.EQUAL,[zg]:t.GEQUAL,[Fg]:t.GREATER,[Og]:t.NOTEQUAL};function G(z,I,ue){if(I.type===ti&&e.has("OES_texture_float_linear")===!1&&(I.magFilter===qt||I.magFilter===qa||I.magFilter===Zr||I.magFilter===Ti||I.minFilter===qt||I.minFilter===qa||I.minFilter===Zr||I.minFilter===Ti)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),ue?(t.texParameteri(z,t.TEXTURE_WRAP_S,O[I.wrapS]),t.texParameteri(z,t.TEXTURE_WRAP_T,O[I.wrapT]),(z===t.TEXTURE_3D||z===t.TEXTURE_2D_ARRAY)&&t.texParameteri(z,t.TEXTURE_WRAP_R,O[I.wrapR]),t.texParameteri(z,t.TEXTURE_MAG_FILTER,B[I.magFilter]),t.texParameteri(z,t.TEXTURE_MIN_FILTER,B[I.minFilter])):(t.texParameteri(z,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(z,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),(z===t.TEXTURE_3D||z===t.TEXTURE_2D_ARRAY)&&t.texParameteri(z,t.TEXTURE_WRAP_R,t.CLAMP_TO_EDGE),(I.wrapS!==bn||I.wrapT!==bn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(z,t.TEXTURE_MAG_FILTER,w(I.magFilter)),t.texParameteri(z,t.TEXTURE_MIN_FILTER,w(I.minFilter)),I.minFilter!==en&&I.minFilter!==qt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),I.compareFunction&&(t.texParameteri(z,t.TEXTURE_COMPARE_MODE,t.COMPARE_REF_TO_TEXTURE),t.texParameteri(z,t.TEXTURE_COMPARE_FUNC,q[I.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const we=e.get("EXT_texture_filter_anisotropic");if(I.magFilter===en||I.minFilter!==Zr&&I.minFilter!==Ti||I.type===ti&&e.has("OES_texture_float_linear")===!1||o===!1&&I.type===ea&&e.has("OES_texture_half_float_linear")===!1)return;(I.anisotropy>1||i.get(I).__currentAnisotropy)&&(t.texParameterf(z,we.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(I.anisotropy,r.getMaxAnisotropy())),i.get(I).__currentAnisotropy=I.anisotropy)}}function A(z,I){let ue=!1;z.__webglInit===void 0&&(z.__webglInit=!0,I.addEventListener("dispose",S));const we=I.source;let ve=f.get(we);ve===void 0&&(ve={},f.set(we,ve));const ge=V(I);if(ge!==z.__cacheKey){ve[ge]===void 0&&(ve[ge]={texture:t.createTexture(),usedTimes:0},a.memory.textures++,ue=!0),ve[ge].usedTimes++;const ne=ve[z.__cacheKey];ne!==void 0&&(ve[z.__cacheKey].usedTimes--,ne.usedTimes===0&&M(I)),z.__cacheKey=ge,z.__webglTexture=ve[ge].texture}return ue}function U(z,I,ue){let we=t.TEXTURE_2D;(I.isDataArrayTexture||I.isCompressedArrayTexture)&&(we=t.TEXTURE_2D_ARRAY),I.isData3DTexture&&(we=t.TEXTURE_3D);const ve=A(z,I),ge=I.source;n.bindTexture(we,z.__webglTexture,t.TEXTURE0+ue);const ne=i.get(ge);if(ge.version!==ne.__version||ve===!0){n.activeTexture(t.TEXTURE0+ue);const ye=Bt.getPrimaries(Bt.workingColorSpace),xe=I.colorSpace===Xn?null:Bt.getPrimaries(I.colorSpace),Fe=I.colorSpace===Xn||ye===xe?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,I.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,I.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,I.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,Fe);const Pe=m(I)&&v(I.image)===!1;let Ee=g(I.image,Pe,!1,r.maxTextureSize);Ee=Te(I,Ee);const it=v(Ee)||o,je=s.convert(I.format,I.colorSpace);let Je=s.convert(I.type),Ge=_(I.internalFormat,je,Je,I.colorSpace,I.isVideoTexture);G(we,I,it);let We;const at=I.mipmaps,se=o&&I.isVideoTexture!==!0&&Ge!==Sd,Oe=ne.__version===void 0||ve===!0,He=ge.dataReady,et=b(I,Ee,it);if(I.isDepthTexture)Ge=t.DEPTH_COMPONENT,o?I.type===ti?Ge=t.DEPTH_COMPONENT32F:I.type===qi?Ge=t.DEPTH_COMPONENT24:I.type===gr?Ge=t.DEPTH24_STENCIL8:Ge=t.DEPTH_COMPONENT16:I.type===ti&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),I.format===yr&&Ge===t.DEPTH_COMPONENT&&I.type!==xh&&I.type!==qi&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),I.type=qi,Je=s.convert(I.type)),I.format===cs&&Ge===t.DEPTH_COMPONENT&&(Ge=t.DEPTH_STENCIL,I.type!==gr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),I.type=gr,Je=s.convert(I.type))),Oe&&(se?n.texStorage2D(t.TEXTURE_2D,1,Ge,Ee.width,Ee.height):n.texImage2D(t.TEXTURE_2D,0,Ge,Ee.width,Ee.height,0,je,Je,null));else if(I.isDataTexture)if(at.length>0&&it){se&&Oe&&n.texStorage2D(t.TEXTURE_2D,et,Ge,at[0].width,at[0].height);for(let te=0,Ne=at.length;te<Ne;te++)We=at[te],se?He&&n.texSubImage2D(t.TEXTURE_2D,te,0,0,We.width,We.height,je,Je,We.data):n.texImage2D(t.TEXTURE_2D,te,Ge,We.width,We.height,0,je,Je,We.data);I.generateMipmaps=!1}else se?(Oe&&n.texStorage2D(t.TEXTURE_2D,et,Ge,Ee.width,Ee.height),He&&n.texSubImage2D(t.TEXTURE_2D,0,0,0,Ee.width,Ee.height,je,Je,Ee.data)):n.texImage2D(t.TEXTURE_2D,0,Ge,Ee.width,Ee.height,0,je,Je,Ee.data);else if(I.isCompressedTexture)if(I.isCompressedArrayTexture){se&&Oe&&n.texStorage3D(t.TEXTURE_2D_ARRAY,et,Ge,at[0].width,at[0].height,Ee.depth);for(let te=0,Ne=at.length;te<Ne;te++)We=at[te],I.format!==Un?je!==null?se?He&&n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,te,0,0,0,We.width,We.height,Ee.depth,je,We.data,0,0):n.compressedTexImage3D(t.TEXTURE_2D_ARRAY,te,Ge,We.width,We.height,Ee.depth,0,We.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):se?He&&n.texSubImage3D(t.TEXTURE_2D_ARRAY,te,0,0,0,We.width,We.height,Ee.depth,je,Je,We.data):n.texImage3D(t.TEXTURE_2D_ARRAY,te,Ge,We.width,We.height,Ee.depth,0,je,Je,We.data)}else{se&&Oe&&n.texStorage2D(t.TEXTURE_2D,et,Ge,at[0].width,at[0].height);for(let te=0,Ne=at.length;te<Ne;te++)We=at[te],I.format!==Un?je!==null?se?He&&n.compressedTexSubImage2D(t.TEXTURE_2D,te,0,0,We.width,We.height,je,We.data):n.compressedTexImage2D(t.TEXTURE_2D,te,Ge,We.width,We.height,0,We.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):se?He&&n.texSubImage2D(t.TEXTURE_2D,te,0,0,We.width,We.height,je,Je,We.data):n.texImage2D(t.TEXTURE_2D,te,Ge,We.width,We.height,0,je,Je,We.data)}else if(I.isDataArrayTexture)se?(Oe&&n.texStorage3D(t.TEXTURE_2D_ARRAY,et,Ge,Ee.width,Ee.height,Ee.depth),He&&n.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,0,Ee.width,Ee.height,Ee.depth,je,Je,Ee.data)):n.texImage3D(t.TEXTURE_2D_ARRAY,0,Ge,Ee.width,Ee.height,Ee.depth,0,je,Je,Ee.data);else if(I.isData3DTexture)se?(Oe&&n.texStorage3D(t.TEXTURE_3D,et,Ge,Ee.width,Ee.height,Ee.depth),He&&n.texSubImage3D(t.TEXTURE_3D,0,0,0,0,Ee.width,Ee.height,Ee.depth,je,Je,Ee.data)):n.texImage3D(t.TEXTURE_3D,0,Ge,Ee.width,Ee.height,Ee.depth,0,je,Je,Ee.data);else if(I.isFramebufferTexture){if(Oe)if(se)n.texStorage2D(t.TEXTURE_2D,et,Ge,Ee.width,Ee.height);else{let te=Ee.width,Ne=Ee.height;for(let Ue=0;Ue<et;Ue++)n.texImage2D(t.TEXTURE_2D,Ue,Ge,te,Ne,0,je,Je,null),te>>=1,Ne>>=1}}else if(at.length>0&&it){se&&Oe&&n.texStorage2D(t.TEXTURE_2D,et,Ge,at[0].width,at[0].height);for(let te=0,Ne=at.length;te<Ne;te++)We=at[te],se?He&&n.texSubImage2D(t.TEXTURE_2D,te,0,0,je,Je,We):n.texImage2D(t.TEXTURE_2D,te,Ge,je,Je,We);I.generateMipmaps=!1}else se?(Oe&&n.texStorage2D(t.TEXTURE_2D,et,Ge,Ee.width,Ee.height),He&&n.texSubImage2D(t.TEXTURE_2D,0,0,0,je,Je,Ee)):n.texImage2D(t.TEXTURE_2D,0,Ge,je,Je,Ee);y(I,it)&&x(we),ne.__version=ge.version,I.onUpdate&&I.onUpdate(I)}z.__version=I.version}function J(z,I,ue){if(I.image.length!==6)return;const we=A(z,I),ve=I.source;n.bindTexture(t.TEXTURE_CUBE_MAP,z.__webglTexture,t.TEXTURE0+ue);const ge=i.get(ve);if(ve.version!==ge.__version||we===!0){n.activeTexture(t.TEXTURE0+ue);const ne=Bt.getPrimaries(Bt.workingColorSpace),ye=I.colorSpace===Xn?null:Bt.getPrimaries(I.colorSpace),xe=I.colorSpace===Xn||ne===ye?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,I.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,I.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,I.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,xe);const Fe=I.isCompressedTexture||I.image[0].isCompressedTexture,Pe=I.image[0]&&I.image[0].isDataTexture,Ee=[];for(let te=0;te<6;te++)!Fe&&!Pe?Ee[te]=g(I.image[te],!1,!0,r.maxCubemapSize):Ee[te]=Pe?I.image[te].image:I.image[te],Ee[te]=Te(I,Ee[te]);const it=Ee[0],je=v(it)||o,Je=s.convert(I.format,I.colorSpace),Ge=s.convert(I.type),We=_(I.internalFormat,Je,Ge,I.colorSpace),at=o&&I.isVideoTexture!==!0,se=ge.__version===void 0||we===!0,Oe=ve.dataReady;let He=b(I,it,je);G(t.TEXTURE_CUBE_MAP,I,je);let et;if(Fe){at&&se&&n.texStorage2D(t.TEXTURE_CUBE_MAP,He,We,it.width,it.height);for(let te=0;te<6;te++){et=Ee[te].mipmaps;for(let Ne=0;Ne<et.length;Ne++){const Ue=et[Ne];I.format!==Un?Je!==null?at?Oe&&n.compressedTexSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+te,Ne,0,0,Ue.width,Ue.height,Je,Ue.data):n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+te,Ne,We,Ue.width,Ue.height,0,Ue.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):at?Oe&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+te,Ne,0,0,Ue.width,Ue.height,Je,Ge,Ue.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+te,Ne,We,Ue.width,Ue.height,0,Je,Ge,Ue.data)}}}else{et=I.mipmaps,at&&se&&(et.length>0&&He++,n.texStorage2D(t.TEXTURE_CUBE_MAP,He,We,Ee[0].width,Ee[0].height));for(let te=0;te<6;te++)if(Pe){at?Oe&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+te,0,0,0,Ee[te].width,Ee[te].height,Je,Ge,Ee[te].data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+te,0,We,Ee[te].width,Ee[te].height,0,Je,Ge,Ee[te].data);for(let Ne=0;Ne<et.length;Ne++){const Ke=et[Ne].image[te].image;at?Oe&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+te,Ne+1,0,0,Ke.width,Ke.height,Je,Ge,Ke.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+te,Ne+1,We,Ke.width,Ke.height,0,Je,Ge,Ke.data)}}else{at?Oe&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+te,0,0,0,Je,Ge,Ee[te]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+te,0,We,Je,Ge,Ee[te]);for(let Ne=0;Ne<et.length;Ne++){const Ue=et[Ne];at?Oe&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+te,Ne+1,0,0,Je,Ge,Ue.image[te]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+te,Ne+1,We,Je,Ge,Ue.image[te])}}}y(I,je)&&x(t.TEXTURE_CUBE_MAP),ge.__version=ve.version,I.onUpdate&&I.onUpdate(I)}z.__version=I.version}function $(z,I,ue,we,ve,ge){const ne=s.convert(ue.format,ue.colorSpace),ye=s.convert(ue.type),xe=_(ue.internalFormat,ne,ye,ue.colorSpace);if(!i.get(I).__hasExternalTextures){const Pe=Math.max(1,I.width>>ge),Ee=Math.max(1,I.height>>ge);ve===t.TEXTURE_3D||ve===t.TEXTURE_2D_ARRAY?n.texImage3D(ve,ge,xe,Pe,Ee,I.depth,0,ne,ye,null):n.texImage2D(ve,ge,xe,Pe,Ee,0,ne,ye,null)}n.bindFramebuffer(t.FRAMEBUFFER,z),oe(I)?l.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,we,ve,i.get(ue).__webglTexture,0,ce(I)):(ve===t.TEXTURE_2D||ve>=t.TEXTURE_CUBE_MAP_POSITIVE_X&&ve<=t.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&t.framebufferTexture2D(t.FRAMEBUFFER,we,ve,i.get(ue).__webglTexture,ge),n.bindFramebuffer(t.FRAMEBUFFER,null)}function ie(z,I,ue){if(t.bindRenderbuffer(t.RENDERBUFFER,z),I.depthBuffer&&!I.stencilBuffer){let we=o===!0?t.DEPTH_COMPONENT24:t.DEPTH_COMPONENT16;if(ue||oe(I)){const ve=I.depthTexture;ve&&ve.isDepthTexture&&(ve.type===ti?we=t.DEPTH_COMPONENT32F:ve.type===qi&&(we=t.DEPTH_COMPONENT24));const ge=ce(I);oe(I)?l.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,ge,we,I.width,I.height):t.renderbufferStorageMultisample(t.RENDERBUFFER,ge,we,I.width,I.height)}else t.renderbufferStorage(t.RENDERBUFFER,we,I.width,I.height);t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,z)}else if(I.depthBuffer&&I.stencilBuffer){const we=ce(I);ue&&oe(I)===!1?t.renderbufferStorageMultisample(t.RENDERBUFFER,we,t.DEPTH24_STENCIL8,I.width,I.height):oe(I)?l.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,we,t.DEPTH24_STENCIL8,I.width,I.height):t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,I.width,I.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,z)}else{const we=I.isWebGLMultipleRenderTargets===!0?I.texture:[I.texture];for(let ve=0;ve<we.length;ve++){const ge=we[ve],ne=s.convert(ge.format,ge.colorSpace),ye=s.convert(ge.type),xe=_(ge.internalFormat,ne,ye,ge.colorSpace),Fe=ce(I);ue&&oe(I)===!1?t.renderbufferStorageMultisample(t.RENDERBUFFER,Fe,xe,I.width,I.height):oe(I)?l.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,Fe,xe,I.width,I.height):t.renderbufferStorage(t.RENDERBUFFER,xe,I.width,I.height)}}t.bindRenderbuffer(t.RENDERBUFFER,null)}function re(z,I){if(I&&I.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(t.FRAMEBUFFER,z),!(I.depthTexture&&I.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(I.depthTexture).__webglTexture||I.depthTexture.image.width!==I.width||I.depthTexture.image.height!==I.height)&&(I.depthTexture.image.width=I.width,I.depthTexture.image.height=I.height,I.depthTexture.needsUpdate=!0),ee(I.depthTexture,0);const we=i.get(I.depthTexture).__webglTexture,ve=ce(I);if(I.depthTexture.format===yr)oe(I)?l.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,we,0,ve):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,we,0);else if(I.depthTexture.format===cs)oe(I)?l.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,we,0,ve):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,we,0);else throw new Error("Unknown depthTexture format")}function de(z){const I=i.get(z),ue=z.isWebGLCubeRenderTarget===!0;if(z.depthTexture&&!I.__autoAllocateDepthBuffer){if(ue)throw new Error("target.depthTexture not supported in Cube render targets");re(I.__webglFramebuffer,z)}else if(ue){I.__webglDepthbuffer=[];for(let we=0;we<6;we++)n.bindFramebuffer(t.FRAMEBUFFER,I.__webglFramebuffer[we]),I.__webglDepthbuffer[we]=t.createRenderbuffer(),ie(I.__webglDepthbuffer[we],z,!1)}else n.bindFramebuffer(t.FRAMEBUFFER,I.__webglFramebuffer),I.__webglDepthbuffer=t.createRenderbuffer(),ie(I.__webglDepthbuffer,z,!1);n.bindFramebuffer(t.FRAMEBUFFER,null)}function me(z,I,ue){const we=i.get(z);I!==void 0&&$(we.__webglFramebuffer,z,z.texture,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,0),ue!==void 0&&de(z)}function X(z){const I=z.texture,ue=i.get(z),we=i.get(I);z.addEventListener("dispose",C),z.isWebGLMultipleRenderTargets!==!0&&(we.__webglTexture===void 0&&(we.__webglTexture=t.createTexture()),we.__version=I.version,a.memory.textures++);const ve=z.isWebGLCubeRenderTarget===!0,ge=z.isWebGLMultipleRenderTargets===!0,ne=v(z)||o;if(ve){ue.__webglFramebuffer=[];for(let ye=0;ye<6;ye++)if(o&&I.mipmaps&&I.mipmaps.length>0){ue.__webglFramebuffer[ye]=[];for(let xe=0;xe<I.mipmaps.length;xe++)ue.__webglFramebuffer[ye][xe]=t.createFramebuffer()}else ue.__webglFramebuffer[ye]=t.createFramebuffer()}else{if(o&&I.mipmaps&&I.mipmaps.length>0){ue.__webglFramebuffer=[];for(let ye=0;ye<I.mipmaps.length;ye++)ue.__webglFramebuffer[ye]=t.createFramebuffer()}else ue.__webglFramebuffer=t.createFramebuffer();if(ge)if(r.drawBuffers){const ye=z.texture;for(let xe=0,Fe=ye.length;xe<Fe;xe++){const Pe=i.get(ye[xe]);Pe.__webglTexture===void 0&&(Pe.__webglTexture=t.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&z.samples>0&&oe(z)===!1){const ye=ge?I:[I];ue.__webglMultisampledFramebuffer=t.createFramebuffer(),ue.__webglColorRenderbuffer=[],n.bindFramebuffer(t.FRAMEBUFFER,ue.__webglMultisampledFramebuffer);for(let xe=0;xe<ye.length;xe++){const Fe=ye[xe];ue.__webglColorRenderbuffer[xe]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,ue.__webglColorRenderbuffer[xe]);const Pe=s.convert(Fe.format,Fe.colorSpace),Ee=s.convert(Fe.type),it=_(Fe.internalFormat,Pe,Ee,Fe.colorSpace,z.isXRRenderTarget===!0),je=ce(z);t.renderbufferStorageMultisample(t.RENDERBUFFER,je,it,z.width,z.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+xe,t.RENDERBUFFER,ue.__webglColorRenderbuffer[xe])}t.bindRenderbuffer(t.RENDERBUFFER,null),z.depthBuffer&&(ue.__webglDepthRenderbuffer=t.createRenderbuffer(),ie(ue.__webglDepthRenderbuffer,z,!0)),n.bindFramebuffer(t.FRAMEBUFFER,null)}}if(ve){n.bindTexture(t.TEXTURE_CUBE_MAP,we.__webglTexture),G(t.TEXTURE_CUBE_MAP,I,ne);for(let ye=0;ye<6;ye++)if(o&&I.mipmaps&&I.mipmaps.length>0)for(let xe=0;xe<I.mipmaps.length;xe++)$(ue.__webglFramebuffer[ye][xe],z,I,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+ye,xe);else $(ue.__webglFramebuffer[ye],z,I,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+ye,0);y(I,ne)&&x(t.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(ge){const ye=z.texture;for(let xe=0,Fe=ye.length;xe<Fe;xe++){const Pe=ye[xe],Ee=i.get(Pe);n.bindTexture(t.TEXTURE_2D,Ee.__webglTexture),G(t.TEXTURE_2D,Pe,ne),$(ue.__webglFramebuffer,z,Pe,t.COLOR_ATTACHMENT0+xe,t.TEXTURE_2D,0),y(Pe,ne)&&x(t.TEXTURE_2D)}n.unbindTexture()}else{let ye=t.TEXTURE_2D;if((z.isWebGL3DRenderTarget||z.isWebGLArrayRenderTarget)&&(o?ye=z.isWebGL3DRenderTarget?t.TEXTURE_3D:t.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(ye,we.__webglTexture),G(ye,I,ne),o&&I.mipmaps&&I.mipmaps.length>0)for(let xe=0;xe<I.mipmaps.length;xe++)$(ue.__webglFramebuffer[xe],z,I,t.COLOR_ATTACHMENT0,ye,xe);else $(ue.__webglFramebuffer,z,I,t.COLOR_ATTACHMENT0,ye,0);y(I,ne)&&x(ye),n.unbindTexture()}z.depthBuffer&&de(z)}function pe(z){const I=v(z)||o,ue=z.isWebGLMultipleRenderTargets===!0?z.texture:[z.texture];for(let we=0,ve=ue.length;we<ve;we++){const ge=ue[we];if(y(ge,I)){const ne=z.isWebGLCubeRenderTarget?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,ye=i.get(ge).__webglTexture;n.bindTexture(ne,ye),x(ne),n.unbindTexture()}}}function he(z){if(o&&z.samples>0&&oe(z)===!1){const I=z.isWebGLMultipleRenderTargets?z.texture:[z.texture],ue=z.width,we=z.height;let ve=t.COLOR_BUFFER_BIT;const ge=[],ne=z.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,ye=i.get(z),xe=z.isWebGLMultipleRenderTargets===!0;if(xe)for(let Fe=0;Fe<I.length;Fe++)n.bindFramebuffer(t.FRAMEBUFFER,ye.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+Fe,t.RENDERBUFFER,null),n.bindFramebuffer(t.FRAMEBUFFER,ye.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+Fe,t.TEXTURE_2D,null,0);n.bindFramebuffer(t.READ_FRAMEBUFFER,ye.__webglMultisampledFramebuffer),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,ye.__webglFramebuffer);for(let Fe=0;Fe<I.length;Fe++){ge.push(t.COLOR_ATTACHMENT0+Fe),z.depthBuffer&&ge.push(ne);const Pe=ye.__ignoreDepthValues!==void 0?ye.__ignoreDepthValues:!1;if(Pe===!1&&(z.depthBuffer&&(ve|=t.DEPTH_BUFFER_BIT),z.stencilBuffer&&(ve|=t.STENCIL_BUFFER_BIT)),xe&&t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,ye.__webglColorRenderbuffer[Fe]),Pe===!0&&(t.invalidateFramebuffer(t.READ_FRAMEBUFFER,[ne]),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,[ne])),xe){const Ee=i.get(I[Fe]).__webglTexture;t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,Ee,0)}t.blitFramebuffer(0,0,ue,we,0,0,ue,we,ve,t.NEAREST),c&&t.invalidateFramebuffer(t.READ_FRAMEBUFFER,ge)}if(n.bindFramebuffer(t.READ_FRAMEBUFFER,null),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),xe)for(let Fe=0;Fe<I.length;Fe++){n.bindFramebuffer(t.FRAMEBUFFER,ye.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+Fe,t.RENDERBUFFER,ye.__webglColorRenderbuffer[Fe]);const Pe=i.get(I[Fe]).__webglTexture;n.bindFramebuffer(t.FRAMEBUFFER,ye.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+Fe,t.TEXTURE_2D,Pe,0)}n.bindFramebuffer(t.DRAW_FRAMEBUFFER,ye.__webglMultisampledFramebuffer)}}function ce(z){return Math.min(r.maxSamples,z.samples)}function oe(z){const I=i.get(z);return o&&z.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&I.__useRenderToTexture!==!1}function ze(z){const I=a.render.frame;h.get(z)!==I&&(h.set(z,I),z.update())}function Te(z,I){const ue=z.colorSpace,we=z.format,ve=z.type;return z.isCompressedTexture===!0||z.isVideoTexture===!0||z.format===Cc||ue!==Ci&&ue!==Xn&&(Bt.getTransfer(ue)===Gt?o===!1?e.has("EXT_sRGB")===!0&&we===Un?(z.format=Cc,z.minFilter=qt,z.generateMipmaps=!1):I=Rd.sRGBToLinear(I):(we!==Un||ve!==ji)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",ue)),I}this.allocateTextureUnit=F,this.resetTextureUnits=k,this.setTexture2D=ee,this.setTexture2DArray=R,this.setTexture3D=T,this.setTextureCube=H,this.rebindTextures=me,this.setupRenderTarget=X,this.updateRenderTargetMipmap=pe,this.updateMultisampleRenderTarget=he,this.setupDepthRenderbuffer=de,this.setupFrameBufferTexture=$,this.useMultisampledRTT=oe}function hy(t,e,n){const i=n.isWebGL2;function r(s,a=Xn){let o;const l=Bt.getTransfer(a);if(s===ji)return t.UNSIGNED_BYTE;if(s===xd)return t.UNSIGNED_SHORT_4_4_4_4;if(s===_d)return t.UNSIGNED_SHORT_5_5_5_1;if(s===_g)return t.BYTE;if(s===Mg)return t.SHORT;if(s===xh)return t.UNSIGNED_SHORT;if(s===yd)return t.INT;if(s===qi)return t.UNSIGNED_INT;if(s===ti)return t.FLOAT;if(s===ea)return i?t.HALF_FLOAT:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(s===bg)return t.ALPHA;if(s===Un)return t.RGBA;if(s===wg)return t.LUMINANCE;if(s===Sg)return t.LUMINANCE_ALPHA;if(s===yr)return t.DEPTH_COMPONENT;if(s===cs)return t.DEPTH_STENCIL;if(s===Cc)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(s===Eg)return t.RED;if(s===Md)return t.RED_INTEGER;if(s===Tg)return t.RG;if(s===bd)return t.RG_INTEGER;if(s===wd)return t.RGBA_INTEGER;if(s===dc||s===pc||s===mc||s===vc)if(l===Gt)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(s===dc)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===pc)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===mc)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===vc)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(s===dc)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===pc)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===mc)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===vc)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Xu||s===qu||s===$u||s===Yu)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(s===Xu)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===qu)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===$u)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Yu)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Sd)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===Zu||s===ju)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(s===Zu)return l===Gt?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(s===ju)return l===Gt?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===Ju||s===Ku||s===Qu||s===ef||s===tf||s===nf||s===rf||s===sf||s===af||s===of||s===lf||s===cf||s===hf||s===uf)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(s===Ju)return l===Gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===Ku)return l===Gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===Qu)return l===Gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===ef)return l===Gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===tf)return l===Gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===nf)return l===Gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===rf)return l===Gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===sf)return l===Gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===af)return l===Gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===of)return l===Gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===lf)return l===Gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===cf)return l===Gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===hf)return l===Gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===uf)return l===Gt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===gc||s===ff||s===df)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(s===gc)return l===Gt?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(s===ff)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(s===df)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(s===Ag||s===pf||s===mf||s===vf)if(o=e.get("EXT_texture_compression_rgtc"),o!==null){if(s===gc)return o.COMPRESSED_RED_RGTC1_EXT;if(s===pf)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===mf)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===vf)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===gr?i?t.UNSIGNED_INT_24_8:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):t[s]!==void 0?t[s]:null}return{convert:r}}let uy=class extends pn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}},Ys=class extends Ft{constructor(){super(),this.isGroup=!0,this.type="Group"}};const VS={type:"move"};class ou{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Ys,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Ys,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new K,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new K),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Ys,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new K,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new K),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const n=this._hand;if(n)for(const i of e.hand.values())this._getHandJoint(n,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,n,i){let r=null,s=null,a=null;const o=this._targetRay,l=this._grip,c=this._hand;if(e&&n.session.visibilityState!=="visible-blurred"){if(c&&e.hand){a=!0;for(const g of e.hand.values()){const v=n.getJointPose(g,i),m=this._getHandJoint(c,g);v!==null&&(m.matrix.fromArray(v.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.matrixWorldNeedsUpdate=!0,m.jointRadius=v.radius),m.visible=v!==null}const h=c.joints["index-finger-tip"],u=c.joints["thumb-tip"],f=h.position.distanceTo(u.position),d=.02,p=.005;c.inputState.pinching&&f>d+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&f<=d-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=n.getPose(e.gripSpace,i),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(r=n.getPose(e.targetRaySpace,i),r===null&&s!==null&&(r=s),r!==null&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(VS)))}return o!==null&&(o.visible=r!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=a!==null),this}_getHandJoint(e,n){if(e.joints[n.jointName]===void 0){const i=new Ys;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[n.jointName]=i,e.add(i)}return e.joints[n.jointName]}}const HS=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,kS=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepthEXT = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepthEXT = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class WS{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,n,i){if(this.texture===null){const r=new gn,s=e.properties.get(r);s.__webglTexture=n.texture,(n.depthNear!=i.depthNear||n.depthFar!=i.depthFar)&&(this.depthNear=n.depthNear,this.depthFar=n.depthFar),this.texture=r}}render(e,n){if(this.texture!==null){if(this.mesh===null){const i=n.cameras[0].viewport,r=new vi({extensions:{fragDepth:!0},vertexShader:HS,fragmentShader:kS,uniforms:{depthColor:{value:this.texture},depthWidth:{value:i.z},depthHeight:{value:i.w}}});this.mesh=new an(new Eh(20,20),r)}e.render(this.mesh,n)}}reset(){this.texture=null,this.mesh=null}}class XS extends Ni{constructor(e,n){super();const i=this;let r=null,s=1,a=null,o="local-floor",l=1,c=null,h=null,u=null,f=null,d=null,p=null;const g=new WS,v=n.getContextAttributes();let m=null,y=null;const x=[],_=[],b=new De;let w=null;const S=new pn;S.layers.enable(1),S.viewport=new zt;const C=new pn;C.layers.enable(2),C.viewport=new zt;const L=[S,C],M=new uy;M.layers.enable(1),M.layers.enable(2);let E=null,N=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(A){let U=x[A];return U===void 0&&(U=new ou,x[A]=U),U.getTargetRaySpace()},this.getControllerGrip=function(A){let U=x[A];return U===void 0&&(U=new ou,x[A]=U),U.getGripSpace()},this.getHand=function(A){let U=x[A];return U===void 0&&(U=new ou,x[A]=U),U.getHandSpace()};function k(A){const U=_.indexOf(A.inputSource);if(U===-1)return;const J=x[U];J!==void 0&&(J.update(A.inputSource,A.frame,c||a),J.dispatchEvent({type:A.type,data:A.inputSource}))}function F(){r.removeEventListener("select",k),r.removeEventListener("selectstart",k),r.removeEventListener("selectend",k),r.removeEventListener("squeeze",k),r.removeEventListener("squeezestart",k),r.removeEventListener("squeezeend",k),r.removeEventListener("end",F),r.removeEventListener("inputsourceschange",V);for(let A=0;A<x.length;A++){const U=_[A];U!==null&&(_[A]=null,x[A].disconnect(U))}E=null,N=null,g.reset(),e.setRenderTarget(m),d=null,f=null,u=null,r=null,y=null,G.stop(),i.isPresenting=!1,e.setPixelRatio(w),e.setSize(b.width,b.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(A){s=A,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(A){o=A,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||a},this.setReferenceSpace=function(A){c=A},this.getBaseLayer=function(){return f!==null?f:d},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return r},this.setSession=async function(A){if(r=A,r!==null){if(m=e.getRenderTarget(),r.addEventListener("select",k),r.addEventListener("selectstart",k),r.addEventListener("selectend",k),r.addEventListener("squeeze",k),r.addEventListener("squeezestart",k),r.addEventListener("squeezeend",k),r.addEventListener("end",F),r.addEventListener("inputsourceschange",V),v.xrCompatible!==!0&&await n.makeXRCompatible(),w=e.getPixelRatio(),e.getSize(b),r.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const U={antialias:r.renderState.layers===void 0?v.antialias:!0,alpha:!0,depth:v.depth,stencil:v.stencil,framebufferScaleFactor:s};d=new XRWebGLLayer(r,n,U),r.updateRenderState({baseLayer:d}),e.setPixelRatio(1),e.setSize(d.framebufferWidth,d.framebufferHeight,!1),y=new mi(d.framebufferWidth,d.framebufferHeight,{format:Un,type:ji,colorSpace:e.outputColorSpace,stencilBuffer:v.stencil})}else{let U=null,J=null,$=null;v.depth&&($=v.stencil?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT24,U=v.stencil?cs:yr,J=v.stencil?gr:qi);const ie={colorFormat:n.RGBA8,depthFormat:$,scaleFactor:s};u=new XRWebGLBinding(r,n),f=u.createProjectionLayer(ie),r.updateRenderState({layers:[f]}),e.setPixelRatio(1),e.setSize(f.textureWidth,f.textureHeight,!1),y=new mi(f.textureWidth,f.textureHeight,{format:Un,type:ji,depthTexture:new Bd(f.textureWidth,f.textureHeight,J,void 0,void 0,void 0,void 0,void 0,void 0,U),stencilBuffer:v.stencil,colorSpace:e.outputColorSpace,samples:v.antialias?4:0});const re=e.properties.get(y);re.__ignoreDepthValues=f.ignoreDepthValues}y.isXRRenderTarget=!0,this.setFoveation(l),c=null,a=await r.requestReferenceSpace(o),G.setContext(r),G.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode};function V(A){for(let U=0;U<A.removed.length;U++){const J=A.removed[U],$=_.indexOf(J);$>=0&&(_[$]=null,x[$].disconnect(J))}for(let U=0;U<A.added.length;U++){const J=A.added[U];let $=_.indexOf(J);if($===-1){for(let re=0;re<x.length;re++)if(re>=_.length){_.push(J),$=re;break}else if(_[re]===null){_[re]=J,$=re;break}if($===-1)break}const ie=x[$];ie&&ie.connect(J)}}const ee=new K,R=new K;function T(A,U,J){ee.setFromMatrixPosition(U.matrixWorld),R.setFromMatrixPosition(J.matrixWorld);const $=ee.distanceTo(R),ie=U.projectionMatrix.elements,re=J.projectionMatrix.elements,de=ie[14]/(ie[10]-1),me=ie[14]/(ie[10]+1),X=(ie[9]+1)/ie[5],pe=(ie[9]-1)/ie[5],he=(ie[8]-1)/ie[0],ce=(re[8]+1)/re[0],oe=de*he,ze=de*ce,Te=$/(-he+ce),z=Te*-he;U.matrixWorld.decompose(A.position,A.quaternion,A.scale),A.translateX(z),A.translateZ(Te),A.matrixWorld.compose(A.position,A.quaternion,A.scale),A.matrixWorldInverse.copy(A.matrixWorld).invert();const I=de+Te,ue=me+Te,we=oe-z,ve=ze+($-z),ge=X*me/ue*I,ne=pe*me/ue*I;A.projectionMatrix.makePerspective(we,ve,ge,ne,I,ue),A.projectionMatrixInverse.copy(A.projectionMatrix).invert()}function H(A,U){U===null?A.matrixWorld.copy(A.matrix):A.matrixWorld.multiplyMatrices(U.matrixWorld,A.matrix),A.matrixWorldInverse.copy(A.matrixWorld).invert()}this.updateCamera=function(A){if(r===null)return;g.texture!==null&&(A.near=g.depthNear,A.far=g.depthFar),M.near=C.near=S.near=A.near,M.far=C.far=S.far=A.far,(E!==M.near||N!==M.far)&&(r.updateRenderState({depthNear:M.near,depthFar:M.far}),E=M.near,N=M.far,S.near=E,S.far=N,C.near=E,C.far=N,S.updateProjectionMatrix(),C.updateProjectionMatrix(),A.updateProjectionMatrix());const U=A.parent,J=M.cameras;H(M,U);for(let $=0;$<J.length;$++)H(J[$],U);J.length===2?T(M,S,C):M.projectionMatrix.copy(S.projectionMatrix),O(A,M,U)};function O(A,U,J){J===null?A.matrix.copy(U.matrixWorld):(A.matrix.copy(J.matrixWorld),A.matrix.invert(),A.matrix.multiply(U.matrixWorld)),A.matrix.decompose(A.position,A.quaternion,A.scale),A.updateMatrixWorld(!0),A.projectionMatrix.copy(U.projectionMatrix),A.projectionMatrixInverse.copy(U.projectionMatrixInverse),A.isPerspectiveCamera&&(A.fov=ta*2*Math.atan(1/A.projectionMatrix.elements[5]),A.zoom=1)}this.getCamera=function(){return M},this.getFoveation=function(){if(!(f===null&&d===null))return l},this.setFoveation=function(A){l=A,f!==null&&(f.fixedFoveation=A),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=A)},this.hasDepthSensing=function(){return g.texture!==null};let B=null;function q(A,U){if(h=U.getViewerPose(c||a),p=U,h!==null){const J=h.views;d!==null&&(e.setRenderTargetFramebuffer(y,d.framebuffer),e.setRenderTarget(y));let $=!1;J.length!==M.cameras.length&&(M.cameras.length=0,$=!0);for(let re=0;re<J.length;re++){const de=J[re];let me=null;if(d!==null)me=d.getViewport(de);else{const pe=u.getViewSubImage(f,de);me=pe.viewport,re===0&&(e.setRenderTargetTextures(y,pe.colorTexture,f.ignoreDepthValues?void 0:pe.depthStencilTexture),e.setRenderTarget(y))}let X=L[re];X===void 0&&(X=new pn,X.layers.enable(re),X.viewport=new zt,L[re]=X),X.matrix.fromArray(de.transform.matrix),X.matrix.decompose(X.position,X.quaternion,X.scale),X.projectionMatrix.fromArray(de.projectionMatrix),X.projectionMatrixInverse.copy(X.projectionMatrix).invert(),X.viewport.set(me.x,me.y,me.width,me.height),re===0&&(M.matrix.copy(X.matrix),M.matrix.decompose(M.position,M.quaternion,M.scale)),$===!0&&M.cameras.push(X)}const ie=r.enabledFeatures;if(ie&&ie.includes("depth-sensing")){const re=u.getDepthInformation(J[0]);re&&re.isValid&&re.texture&&g.init(e,re,r.renderState)}}for(let J=0;J<x.length;J++){const $=_[J],ie=x[J];$!==null&&ie!==void 0&&ie.update($,U,c||a)}g.render(e,M),B&&B(A,U),U.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:U}),p=null}const G=new iy;G.setAnimationLoop(q),this.setAnimationLoop=function(A){B=A},this.dispose=function(){}}}function qS(t,e){function n(v,m){v.matrixAutoUpdate===!0&&v.updateMatrix(),m.value.copy(v.matrix)}function i(v,m){m.color.getRGB(v.fogColor.value,Qg(t)),m.isFog?(v.fogNear.value=m.near,v.fogFar.value=m.far):m.isFogExp2&&(v.fogDensity.value=m.density)}function r(v,m,y,x,_){m.isMeshBasicMaterial||m.isMeshLambertMaterial?s(v,m):m.isMeshToonMaterial?(s(v,m),u(v,m)):m.isMeshPhongMaterial?(s(v,m),h(v,m)):m.isMeshStandardMaterial?(s(v,m),f(v,m),m.isMeshPhysicalMaterial&&d(v,m,_)):m.isMeshMatcapMaterial?(s(v,m),p(v,m)):m.isMeshDepthMaterial?s(v,m):m.isMeshDistanceMaterial?(s(v,m),g(v,m)):m.isMeshNormalMaterial?s(v,m):m.isLineBasicMaterial?(a(v,m),m.isLineDashedMaterial&&o(v,m)):m.isPointsMaterial?l(v,m,y,x):m.isSpriteMaterial?c(v,m):m.isShadowMaterial?(v.color.value.copy(m.color),v.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function s(v,m){v.opacity.value=m.opacity,m.color&&v.diffuse.value.copy(m.color),m.emissive&&v.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(v.map.value=m.map,n(m.map,v.mapTransform)),m.alphaMap&&(v.alphaMap.value=m.alphaMap,n(m.alphaMap,v.alphaMapTransform)),m.bumpMap&&(v.bumpMap.value=m.bumpMap,n(m.bumpMap,v.bumpMapTransform),v.bumpScale.value=m.bumpScale,m.side===Ln&&(v.bumpScale.value*=-1)),m.normalMap&&(v.normalMap.value=m.normalMap,n(m.normalMap,v.normalMapTransform),v.normalScale.value.copy(m.normalScale),m.side===Ln&&v.normalScale.value.negate()),m.displacementMap&&(v.displacementMap.value=m.displacementMap,n(m.displacementMap,v.displacementMapTransform),v.displacementScale.value=m.displacementScale,v.displacementBias.value=m.displacementBias),m.emissiveMap&&(v.emissiveMap.value=m.emissiveMap,n(m.emissiveMap,v.emissiveMapTransform)),m.specularMap&&(v.specularMap.value=m.specularMap,n(m.specularMap,v.specularMapTransform)),m.alphaTest>0&&(v.alphaTest.value=m.alphaTest);const y=e.get(m).envMap;if(y&&(v.envMap.value=y,v.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,v.reflectivity.value=m.reflectivity,v.ior.value=m.ior,v.refractionRatio.value=m.refractionRatio),m.lightMap){v.lightMap.value=m.lightMap;const x=t._useLegacyLights===!0?Math.PI:1;v.lightMapIntensity.value=m.lightMapIntensity*x,n(m.lightMap,v.lightMapTransform)}m.aoMap&&(v.aoMap.value=m.aoMap,v.aoMapIntensity.value=m.aoMapIntensity,n(m.aoMap,v.aoMapTransform))}function a(v,m){v.diffuse.value.copy(m.color),v.opacity.value=m.opacity,m.map&&(v.map.value=m.map,n(m.map,v.mapTransform))}function o(v,m){v.dashSize.value=m.dashSize,v.totalSize.value=m.dashSize+m.gapSize,v.scale.value=m.scale}function l(v,m,y,x){v.diffuse.value.copy(m.color),v.opacity.value=m.opacity,v.size.value=m.size*y,v.scale.value=x*.5,m.map&&(v.map.value=m.map,n(m.map,v.uvTransform)),m.alphaMap&&(v.alphaMap.value=m.alphaMap,n(m.alphaMap,v.alphaMapTransform)),m.alphaTest>0&&(v.alphaTest.value=m.alphaTest)}function c(v,m){v.diffuse.value.copy(m.color),v.opacity.value=m.opacity,v.rotation.value=m.rotation,m.map&&(v.map.value=m.map,n(m.map,v.mapTransform)),m.alphaMap&&(v.alphaMap.value=m.alphaMap,n(m.alphaMap,v.alphaMapTransform)),m.alphaTest>0&&(v.alphaTest.value=m.alphaTest)}function h(v,m){v.specular.value.copy(m.specular),v.shininess.value=Math.max(m.shininess,1e-4)}function u(v,m){m.gradientMap&&(v.gradientMap.value=m.gradientMap)}function f(v,m){v.metalness.value=m.metalness,m.metalnessMap&&(v.metalnessMap.value=m.metalnessMap,n(m.metalnessMap,v.metalnessMapTransform)),v.roughness.value=m.roughness,m.roughnessMap&&(v.roughnessMap.value=m.roughnessMap,n(m.roughnessMap,v.roughnessMapTransform)),e.get(m).envMap&&(v.envMapIntensity.value=m.envMapIntensity)}function d(v,m,y){v.ior.value=m.ior,m.sheen>0&&(v.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),v.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(v.sheenColorMap.value=m.sheenColorMap,n(m.sheenColorMap,v.sheenColorMapTransform)),m.sheenRoughnessMap&&(v.sheenRoughnessMap.value=m.sheenRoughnessMap,n(m.sheenRoughnessMap,v.sheenRoughnessMapTransform))),m.clearcoat>0&&(v.clearcoat.value=m.clearcoat,v.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(v.clearcoatMap.value=m.clearcoatMap,n(m.clearcoatMap,v.clearcoatMapTransform)),m.clearcoatRoughnessMap&&(v.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap,n(m.clearcoatRoughnessMap,v.clearcoatRoughnessMapTransform)),m.clearcoatNormalMap&&(v.clearcoatNormalMap.value=m.clearcoatNormalMap,n(m.clearcoatNormalMap,v.clearcoatNormalMapTransform),v.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),m.side===Ln&&v.clearcoatNormalScale.value.negate())),m.iridescence>0&&(v.iridescence.value=m.iridescence,v.iridescenceIOR.value=m.iridescenceIOR,v.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],v.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(v.iridescenceMap.value=m.iridescenceMap,n(m.iridescenceMap,v.iridescenceMapTransform)),m.iridescenceThicknessMap&&(v.iridescenceThicknessMap.value=m.iridescenceThicknessMap,n(m.iridescenceThicknessMap,v.iridescenceThicknessMapTransform))),m.transmission>0&&(v.transmission.value=m.transmission,v.transmissionSamplerMap.value=y.texture,v.transmissionSamplerSize.value.set(y.width,y.height),m.transmissionMap&&(v.transmissionMap.value=m.transmissionMap,n(m.transmissionMap,v.transmissionMapTransform)),v.thickness.value=m.thickness,m.thicknessMap&&(v.thicknessMap.value=m.thicknessMap,n(m.thicknessMap,v.thicknessMapTransform)),v.attenuationDistance.value=m.attenuationDistance,v.attenuationColor.value.copy(m.attenuationColor)),m.anisotropy>0&&(v.anisotropyVector.value.set(m.anisotropy*Math.cos(m.anisotropyRotation),m.anisotropy*Math.sin(m.anisotropyRotation)),m.anisotropyMap&&(v.anisotropyMap.value=m.anisotropyMap,n(m.anisotropyMap,v.anisotropyMapTransform))),v.specularIntensity.value=m.specularIntensity,v.specularColor.value.copy(m.specularColor),m.specularColorMap&&(v.specularColorMap.value=m.specularColorMap,n(m.specularColorMap,v.specularColorMapTransform)),m.specularIntensityMap&&(v.specularIntensityMap.value=m.specularIntensityMap,n(m.specularIntensityMap,v.specularIntensityMapTransform))}function p(v,m){m.matcap&&(v.matcap.value=m.matcap)}function g(v,m){const y=e.get(m).light;v.referencePosition.value.setFromMatrixPosition(y.matrixWorld),v.nearDistance.value=y.shadow.camera.near,v.farDistance.value=y.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:r}}function $S(t,e,n,i){let r={},s={},a=[];const o=n.isWebGL2?t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(y,x){const _=x.program;i.uniformBlockBinding(y,_)}function c(y,x){let _=r[y.id];_===void 0&&(p(y),_=h(y),r[y.id]=_,y.addEventListener("dispose",v));const b=x.program;i.updateUBOMapping(y,b);const w=e.render.frame;s[y.id]!==w&&(f(y),s[y.id]=w)}function h(y){const x=u();y.__bindingPointIndex=x;const _=t.createBuffer(),b=y.__size,w=y.usage;return t.bindBuffer(t.UNIFORM_BUFFER,_),t.bufferData(t.UNIFORM_BUFFER,b,w),t.bindBuffer(t.UNIFORM_BUFFER,null),t.bindBufferBase(t.UNIFORM_BUFFER,x,_),_}function u(){for(let y=0;y<o;y++)if(a.indexOf(y)===-1)return a.push(y),y;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(y){const x=r[y.id],_=y.uniforms,b=y.__cache;t.bindBuffer(t.UNIFORM_BUFFER,x);for(let w=0,S=_.length;w<S;w++){const C=Array.isArray(_[w])?_[w]:[_[w]];for(let L=0,M=C.length;L<M;L++){const E=C[L];if(d(E,w,L,b)===!0){const N=E.__offset,k=Array.isArray(E.value)?E.value:[E.value];let F=0;for(let V=0;V<k.length;V++){const ee=k[V],R=g(ee);typeof ee=="number"||typeof ee=="boolean"?(E.__data[0]=ee,t.bufferSubData(t.UNIFORM_BUFFER,N+F,E.__data)):ee.isMatrix3?(E.__data[0]=ee.elements[0],E.__data[1]=ee.elements[1],E.__data[2]=ee.elements[2],E.__data[3]=0,E.__data[4]=ee.elements[3],E.__data[5]=ee.elements[4],E.__data[6]=ee.elements[5],E.__data[7]=0,E.__data[8]=ee.elements[6],E.__data[9]=ee.elements[7],E.__data[10]=ee.elements[8],E.__data[11]=0):(ee.toArray(E.__data,F),F+=R.storage/Float32Array.BYTES_PER_ELEMENT)}t.bufferSubData(t.UNIFORM_BUFFER,N,E.__data)}}}t.bindBuffer(t.UNIFORM_BUFFER,null)}function d(y,x,_,b){const w=y.value,S=x+"_"+_;if(b[S]===void 0)return typeof w=="number"||typeof w=="boolean"?b[S]=w:b[S]=w.clone(),!0;{const C=b[S];if(typeof w=="number"||typeof w=="boolean"){if(C!==w)return b[S]=w,!0}else if(C.equals(w)===!1)return C.copy(w),!0}return!1}function p(y){const x=y.uniforms;let _=0;const b=16;for(let S=0,C=x.length;S<C;S++){const L=Array.isArray(x[S])?x[S]:[x[S]];for(let M=0,E=L.length;M<E;M++){const N=L[M],k=Array.isArray(N.value)?N.value:[N.value];for(let F=0,V=k.length;F<V;F++){const ee=k[F],R=g(ee),T=_%b;T!==0&&b-T<R.boundary&&(_+=b-T),N.__data=new Float32Array(R.storage/Float32Array.BYTES_PER_ELEMENT),N.__offset=_,_+=R.storage}}}const w=_%b;return w>0&&(_+=b-w),y.__size=_,y.__cache={},this}function g(y){const x={boundary:0,storage:0};return typeof y=="number"||typeof y=="boolean"?(x.boundary=4,x.storage=4):y.isVector2?(x.boundary=8,x.storage=8):y.isVector3||y.isColor?(x.boundary=16,x.storage=12):y.isVector4?(x.boundary=16,x.storage=16):y.isMatrix3?(x.boundary=48,x.storage=48):y.isMatrix4?(x.boundary=64,x.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),x}function v(y){const x=y.target;x.removeEventListener("dispose",v);const _=a.indexOf(x.__bindingPointIndex);a.splice(_,1),t.deleteBuffer(r[x.id]),delete r[x.id],delete s[x.id]}function m(){for(const y in r)t.deleteBuffer(r[y]);a=[],r={},s={}}return{bind:l,update:c,dispose:m}}let Od=class{constructor(e={}){const{canvas:n=Xg(),context:i=null,depth:r=!0,stencil:s=!0,alpha:a=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1}=e;this.isWebGLRenderer=!0;let f;i!==null?f=i.getContextAttributes().alpha:f=a;const d=new Uint32Array(4),p=new Int32Array(4);let g=null,v=null;const m=[],y=[];this.domElement=n,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=on,this._useLegacyLights=!1,this.toneMapping=Zi,this.toneMappingExposure=1;const x=this;let _=!1,b=0,w=0,S=null,C=-1,L=null;const M=new zt,E=new zt;let N=null;const k=new rt(0);let F=0,V=n.width,ee=n.height,R=1,T=null,H=null;const O=new zt(0,0,V,ee),B=new zt(0,0,V,ee);let q=!1;const G=new dl;let A=!1,U=!1,J=null;const $=new Mt,ie=new De,re=new K,de={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function me(){return S===null?R:1}let X=i;function pe(P,Q){for(let le=0;le<P.length;le++){const Z=P[le],ae=n.getContext(Z,Q);if(ae!==null)return ae}return null}try{const P={alpha:!0,depth:r,stencil:s,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in n&&n.setAttribute("data-engine",`three.js r${gh}`),n.addEventListener("webglcontextlost",et,!1),n.addEventListener("webglcontextrestored",te,!1),n.addEventListener("webglcontextcreationerror",Ne,!1),X===null){const Q=["webgl2","webgl","experimental-webgl"];if(x.isWebGL1Renderer===!0&&Q.shift(),X=pe(Q,P),X===null)throw pe(Q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&X instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),X.getShaderPrecisionFormat===void 0&&(X.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(P){throw console.error("THREE.WebGLRenderer: "+P.message),P}let he,ce,oe,ze,Te,z,I,ue,we,ve,ge,ne,ye,xe,Fe,Pe,Ee,it,je,Je,Ge,We,at,se;function Oe(){he=new r1(X),ce=new Kw(X,he,e),he.init(ce),We=new hy(X,he,ce),oe=new zS(X,he,ce),ze=new o1(X),Te=new AS,z=new GS(X,he,oe,Te,ce,We,ze),I=new e1(x),ue=new i1(x),we=new mM(X,ce),at=new jw(X,he,we,ce),ve=new s1(X,we,ze,at),ge=new u1(X,ve,we,ze),je=new h1(X,ce,z),Pe=new Qw(Te),ne=new TS(x,I,ue,he,ce,at,Pe),ye=new qS(x,Te),xe=new RS,Fe=new BS(he,ce),it=new Zw(x,I,ue,oe,ge,f,l),Ee=new OS(x,ge,ce),se=new $S(X,ze,ce,oe),Je=new Jw(X,he,ze,ce),Ge=new a1(X,he,ze,ce),ze.programs=ne.programs,x.capabilities=ce,x.extensions=he,x.properties=Te,x.renderLists=xe,x.shadowMap=Ee,x.state=oe,x.info=ze}Oe();const He=new XS(x,X);this.xr=He,this.getContext=function(){return X},this.getContextAttributes=function(){return X.getContextAttributes()},this.forceContextLoss=function(){const P=he.get("WEBGL_lose_context");P&&P.loseContext()},this.forceContextRestore=function(){const P=he.get("WEBGL_lose_context");P&&P.restoreContext()},this.getPixelRatio=function(){return R},this.setPixelRatio=function(P){P!==void 0&&(R=P,this.setSize(V,ee,!1))},this.getSize=function(P){return P.set(V,ee)},this.setSize=function(P,Q,le=!0){if(He.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}V=P,ee=Q,n.width=Math.floor(P*R),n.height=Math.floor(Q*R),le===!0&&(n.style.width=P+"px",n.style.height=Q+"px"),this.setViewport(0,0,P,Q)},this.getDrawingBufferSize=function(P){return P.set(V*R,ee*R).floor()},this.setDrawingBufferSize=function(P,Q,le){V=P,ee=Q,R=le,n.width=Math.floor(P*le),n.height=Math.floor(Q*le),this.setViewport(0,0,P,Q)},this.getCurrentViewport=function(P){return P.copy(M)},this.getViewport=function(P){return P.copy(O)},this.setViewport=function(P,Q,le,Z){P.isVector4?O.set(P.x,P.y,P.z,P.w):O.set(P,Q,le,Z),oe.viewport(M.copy(O).multiplyScalar(R).floor())},this.getScissor=function(P){return P.copy(B)},this.setScissor=function(P,Q,le,Z){P.isVector4?B.set(P.x,P.y,P.z,P.w):B.set(P,Q,le,Z),oe.scissor(E.copy(B).multiplyScalar(R).floor())},this.getScissorTest=function(){return q},this.setScissorTest=function(P){oe.setScissorTest(q=P)},this.setOpaqueSort=function(P){T=P},this.setTransparentSort=function(P){H=P},this.getClearColor=function(P){return P.copy(it.getClearColor())},this.setClearColor=function(){it.setClearColor.apply(it,arguments)},this.getClearAlpha=function(){return it.getClearAlpha()},this.setClearAlpha=function(){it.setClearAlpha.apply(it,arguments)},this.clear=function(P=!0,Q=!0,le=!0){let Z=0;if(P){let ae=!1;if(S!==null){const Se=S.texture.format;ae=Se===wd||Se===bd||Se===Md}if(ae){const Se=S.texture.type,Be=Se===ji||Se===qi||Se===xh||Se===gr||Se===xd||Se===_d,Le=it.getClearColor(),Ae=it.getClearAlpha(),Ie=Le.r,Xe=Le.g,tt=Le.b;Be?(d[0]=Ie,d[1]=Xe,d[2]=tt,d[3]=Ae,X.clearBufferuiv(X.COLOR,0,d)):(p[0]=Ie,p[1]=Xe,p[2]=tt,p[3]=Ae,X.clearBufferiv(X.COLOR,0,p))}else Z|=X.COLOR_BUFFER_BIT}Q&&(Z|=X.DEPTH_BUFFER_BIT),le&&(Z|=X.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),X.clear(Z)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){n.removeEventListener("webglcontextlost",et,!1),n.removeEventListener("webglcontextrestored",te,!1),n.removeEventListener("webglcontextcreationerror",Ne,!1),xe.dispose(),Fe.dispose(),Te.dispose(),I.dispose(),ue.dispose(),ge.dispose(),at.dispose(),se.dispose(),ne.dispose(),He.dispose(),He.removeEventListener("sessionstart",be),He.removeEventListener("sessionend",Me),J&&(J.dispose(),J=null),Ce.stop()};function et(P){P.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),_=!0}function te(){console.log("THREE.WebGLRenderer: Context Restored."),_=!1;const P=ze.autoReset,Q=Ee.enabled,le=Ee.autoUpdate,Z=Ee.needsUpdate,ae=Ee.type;Oe(),ze.autoReset=P,Ee.enabled=Q,Ee.autoUpdate=le,Ee.needsUpdate=Z,Ee.type=ae}function Ne(P){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",P.statusMessage)}function Ue(P){const Q=P.target;Q.removeEventListener("dispose",Ue),Ke(Q)}function Ke(P){lt(P),Te.remove(P)}function lt(P){const Q=Te.get(P).programs;Q!==void 0&&(Q.forEach(function(le){ne.releaseProgram(le)}),P.isShaderMaterial&&ne.releaseShaderCache(P))}this.renderBufferDirect=function(P,Q,le,Z,ae,Se){Q===null&&(Q=de);const Be=ae.isMesh&&ae.matrixWorld.determinant()<0,Le=W(P,Q,le,Z,ae);oe.setMaterial(Z,Be);let Ae=le.index,Ie=1;if(Z.wireframe===!0){if(Ae=ve.getWireframeAttribute(le),Ae===void 0)return;Ie=2}const Xe=le.drawRange,tt=le.attributes.position;let ut=Xe.start*Ie,Dt=(Xe.start+Xe.count)*Ie;Se!==null&&(ut=Math.max(ut,Se.start*Ie),Dt=Math.min(Dt,(Se.start+Se.count)*Ie)),Ae!==null?(ut=Math.max(ut,0),Dt=Math.min(Dt,Ae.count)):tt!=null&&(ut=Math.max(ut,0),Dt=Math.min(Dt,tt.count));const bt=Dt-ut;if(bt<0||bt===1/0)return;at.setup(ae,Z,Le,le,Ae);let yt,It=Je;if(Ae!==null&&(yt=we.get(Ae),It=Ge,It.setIndex(yt)),ae.isMesh)Z.wireframe===!0?(oe.setLineWidth(Z.wireframeLinewidth*me()),It.setMode(X.LINES)):It.setMode(X.TRIANGLES);else if(ae.isLine){let st=Z.linewidth;st===void 0&&(st=1),oe.setLineWidth(st*me()),ae.isLineSegments?It.setMode(X.LINES):ae.isLineLoop?It.setMode(X.LINE_LOOP):It.setMode(X.LINE_STRIP)}else ae.isPoints?It.setMode(X.POINTS):ae.isSprite&&It.setMode(X.TRIANGLES);if(ae.isBatchedMesh)It.renderMultiDraw(ae._multiDrawStarts,ae._multiDrawCounts,ae._multiDrawCount);else if(ae.isInstancedMesh)It.renderInstances(ut,bt,ae.count);else if(le.isInstancedBufferGeometry){const st=le._maxInstanceCount!==void 0?le._maxInstanceCount:1/0,yn=Math.min(le.instanceCount,st);It.renderInstances(ut,bt,yn)}else It.render(ut,bt)};function Et(P,Q,le){P.transparent===!0&&P.side===Si&&P.forceSinglePass===!1?(P.side=Ln,P.needsUpdate=!0,_e(P,Q,le),P.side=Ji,P.needsUpdate=!0,_e(P,Q,le),P.side=Si):_e(P,Q,le)}this.compile=function(P,Q,le=null){le===null&&(le=P),v=Fe.get(le),v.init(),y.push(v),le.traverseVisible(function(ae){ae.isLight&&ae.layers.test(Q.layers)&&(v.pushLight(ae),ae.castShadow&&v.pushShadow(ae))}),P!==le&&P.traverseVisible(function(ae){ae.isLight&&ae.layers.test(Q.layers)&&(v.pushLight(ae),ae.castShadow&&v.pushShadow(ae))}),v.setupLights(x._useLegacyLights);const Z=new Set;return P.traverse(function(ae){const Se=ae.material;if(Se)if(Array.isArray(Se))for(let Be=0;Be<Se.length;Be++){const Le=Se[Be];Et(Le,le,ae),Z.add(Le)}else Et(Se,le,ae),Z.add(Se)}),y.pop(),v=null,Z},this.compileAsync=function(P,Q,le=null){const Z=this.compile(P,Q,le);return new Promise(ae=>{function Se(){if(Z.forEach(function(Be){Te.get(Be).currentProgram.isReady()&&Z.delete(Be)}),Z.size===0){ae(P);return}setTimeout(Se,10)}he.get("KHR_parallel_shader_compile")!==null?Se():setTimeout(Se,10)})};let _t=null;function gt(P){_t&&_t(P)}function be(){Ce.stop()}function Me(){Ce.start()}const Ce=new iy;Ce.setAnimationLoop(gt),typeof self<"u"&&Ce.setContext(self),this.setAnimationLoop=function(P){_t=P,He.setAnimationLoop(P),P===null?Ce.stop():Ce.start()},He.addEventListener("sessionstart",be),He.addEventListener("sessionend",Me),this.render=function(P,Q){if(Q!==void 0&&Q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(_===!0)return;P.matrixWorldAutoUpdate===!0&&P.updateMatrixWorld(),Q.parent===null&&Q.matrixWorldAutoUpdate===!0&&Q.updateMatrixWorld(),He.enabled===!0&&He.isPresenting===!0&&(He.cameraAutoUpdate===!0&&He.updateCamera(Q),Q=He.getCamera()),P.isScene===!0&&P.onBeforeRender(x,P,Q,S),v=Fe.get(P,y.length),v.init(),y.push(v),$.multiplyMatrices(Q.projectionMatrix,Q.matrixWorldInverse),G.setFromProjectionMatrix($),U=this.localClippingEnabled,A=Pe.init(this.clippingPlanes,U),g=xe.get(P,m.length),g.init(),m.push(g),Re(P,Q,0,x.sortObjects),g.finish(),x.sortObjects===!0&&g.sort(T,H),this.info.render.frame++,A===!0&&Pe.beginShadows();const le=v.state.shadowsArray;if(Ee.render(le,P,Q),A===!0&&Pe.endShadows(),this.info.autoReset===!0&&this.info.reset(),(He.enabled===!1||He.isPresenting===!1||He.hasDepthSensing()===!1)&&it.render(g,P),v.setupLights(x._useLegacyLights),Q.isArrayCamera){const Z=Q.cameras;for(let ae=0,Se=Z.length;ae<Se;ae++){const Be=Z[ae];mt(g,P,Be,Be.viewport)}}else mt(g,P,Q);S!==null&&(z.updateMultisampleRenderTarget(S),z.updateRenderTargetMipmap(S)),P.isScene===!0&&P.onAfterRender(x,P,Q),at.resetDefaultState(),C=-1,L=null,y.pop(),y.length>0?v=y[y.length-1]:v=null,m.pop(),m.length>0?g=m[m.length-1]:g=null};function Re(P,Q,le,Z){if(P.visible===!1)return;if(P.layers.test(Q.layers)){if(P.isGroup)le=P.renderOrder;else if(P.isLOD)P.autoUpdate===!0&&P.update(Q);else if(P.isLight)v.pushLight(P),P.castShadow&&v.pushShadow(P);else if(P.isSprite){if(!P.frustumCulled||G.intersectsSprite(P)){Z&&re.setFromMatrixPosition(P.matrixWorld).applyMatrix4($);const Be=ge.update(P),Le=P.material;Le.visible&&g.push(P,Be,Le,le,re.z,null)}}else if((P.isMesh||P.isLine||P.isPoints)&&(!P.frustumCulled||G.intersectsObject(P))){const Be=ge.update(P),Le=P.material;if(Z&&(P.boundingSphere!==void 0?(P.boundingSphere===null&&P.computeBoundingSphere(),re.copy(P.boundingSphere.center)):(Be.boundingSphere===null&&Be.computeBoundingSphere(),re.copy(Be.boundingSphere.center)),re.applyMatrix4(P.matrixWorld).applyMatrix4($)),Array.isArray(Le)){const Ae=Be.groups;for(let Ie=0,Xe=Ae.length;Ie<Xe;Ie++){const tt=Ae[Ie],ut=Le[tt.materialIndex];ut&&ut.visible&&g.push(P,Be,ut,le,re.z,tt)}}else Le.visible&&g.push(P,Be,Le,le,re.z,null)}}const Se=P.children;for(let Be=0,Le=Se.length;Be<Le;Be++)Re(Se[Be],Q,le,Z)}function mt(P,Q,le,Z){const ae=P.opaque,Se=P.transmissive,Be=P.transparent;v.setupLightsView(le),A===!0&&Pe.setGlobalState(x.clippingPlanes,le),Se.length>0&&Ze(ae,Se,Q,le),Z&&oe.viewport(M.copy(Z)),ae.length>0&&Ve(ae,Q,le),Se.length>0&&Ve(Se,Q,le),Be.length>0&&Ve(Be,Q,le),oe.buffers.depth.setTest(!0),oe.buffers.depth.setMask(!0),oe.buffers.color.setMask(!0),oe.setPolygonOffset(!1)}function Ze(P,Q,le,Z){if((le.isScene===!0?le.overrideMaterial:null)!==null)return;const Se=ce.isWebGL2;J===null&&(J=new mi(1,1,{generateMipmaps:!0,type:he.has("EXT_color_buffer_half_float")?ea:ji,minFilter:Ti,samples:Se?4:0})),x.getDrawingBufferSize(ie),Se?J.setSize(ie.x,ie.y):J.setSize(Rc(ie.x),Rc(ie.y));const Be=x.getRenderTarget();x.setRenderTarget(J),x.getClearColor(k),F=x.getClearAlpha(),F<1&&x.setClearColor(16777215,.5),x.clear();const Le=x.toneMapping;x.toneMapping=Zi,Ve(P,le,Z),z.updateMultisampleRenderTarget(J),z.updateRenderTargetMipmap(J);let Ae=!1;for(let Ie=0,Xe=Q.length;Ie<Xe;Ie++){const tt=Q[Ie],ut=tt.object,Dt=tt.geometry,bt=tt.material,yt=tt.group;if(bt.side===Si&&ut.layers.test(Z.layers)){const It=bt.side;bt.side=Ln,bt.needsUpdate=!0,$e(ut,le,Z,Dt,bt,yt),bt.side=It,bt.needsUpdate=!0,Ae=!0}}Ae===!0&&(z.updateMultisampleRenderTarget(J),z.updateRenderTargetMipmap(J)),x.setRenderTarget(Be),x.setClearColor(k,F),x.toneMapping=Le}function Ve(P,Q,le){const Z=Q.isScene===!0?Q.overrideMaterial:null;for(let ae=0,Se=P.length;ae<Se;ae++){const Be=P[ae],Le=Be.object,Ae=Be.geometry,Ie=Z===null?Be.material:Z,Xe=Be.group;Le.layers.test(le.layers)&&$e(Le,Q,le,Ae,Ie,Xe)}}function $e(P,Q,le,Z,ae,Se){P.onBeforeRender(x,Q,le,Z,ae,Se),P.modelViewMatrix.multiplyMatrices(le.matrixWorldInverse,P.matrixWorld),P.normalMatrix.getNormalMatrix(P.modelViewMatrix),ae.onBeforeRender(x,Q,le,Z,P,Se),ae.transparent===!0&&ae.side===Si&&ae.forceSinglePass===!1?(ae.side=Ln,ae.needsUpdate=!0,x.renderBufferDirect(le,Q,Z,ae,P,Se),ae.side=Ji,ae.needsUpdate=!0,x.renderBufferDirect(le,Q,Z,ae,P,Se),ae.side=Si):x.renderBufferDirect(le,Q,Z,ae,P,Se),P.onAfterRender(x,Q,le,Z,ae,Se)}function _e(P,Q,le){Q.isScene!==!0&&(Q=de);const Z=Te.get(P),ae=v.state.lights,Se=v.state.shadowsArray,Be=ae.state.version,Le=ne.getParameters(P,ae.state,Se,Q,le),Ae=ne.getProgramCacheKey(Le);let Ie=Z.programs;Z.environment=P.isMeshStandardMaterial?Q.environment:null,Z.fog=Q.fog,Z.envMap=(P.isMeshStandardMaterial?ue:I).get(P.envMap||Z.environment),Ie===void 0&&(P.addEventListener("dispose",Ue),Ie=new Map,Z.programs=Ie);let Xe=Ie.get(Ae);if(Xe!==void 0){if(Z.currentProgram===Xe&&Z.lightsStateVersion===Be)return D(P,Le),Xe}else Le.uniforms=ne.getUniforms(P),P.onBuild(le,Le,x),P.onBeforeCompile(Le,x),Xe=ne.acquireProgram(Le,Ae),Ie.set(Ae,Xe),Z.uniforms=Le.uniforms;const tt=Z.uniforms;return(!P.isShaderMaterial&&!P.isRawShaderMaterial||P.clipping===!0)&&(tt.clippingPlanes=Pe.uniform),D(P,Le),Z.needsLights=fe(P),Z.lightsStateVersion=Be,Z.needsLights&&(tt.ambientLightColor.value=ae.state.ambient,tt.lightProbe.value=ae.state.probe,tt.directionalLights.value=ae.state.directional,tt.directionalLightShadows.value=ae.state.directionalShadow,tt.spotLights.value=ae.state.spot,tt.spotLightShadows.value=ae.state.spotShadow,tt.rectAreaLights.value=ae.state.rectArea,tt.ltc_1.value=ae.state.rectAreaLTC1,tt.ltc_2.value=ae.state.rectAreaLTC2,tt.pointLights.value=ae.state.point,tt.pointLightShadows.value=ae.state.pointShadow,tt.hemisphereLights.value=ae.state.hemi,tt.directionalShadowMap.value=ae.state.directionalShadowMap,tt.directionalShadowMatrix.value=ae.state.directionalShadowMatrix,tt.spotShadowMap.value=ae.state.spotShadowMap,tt.spotLightMatrix.value=ae.state.spotLightMatrix,tt.spotLightMap.value=ae.state.spotLightMap,tt.pointShadowMap.value=ae.state.pointShadowMap,tt.pointShadowMatrix.value=ae.state.pointShadowMatrix),Z.currentProgram=Xe,Z.uniformsList=null,Xe}function ke(P){if(P.uniformsList===null){const Q=P.currentProgram.getUniforms();P.uniformsList=Mc.seqWithValue(Q.seq,P.uniforms)}return P.uniformsList}function D(P,Q){const le=Te.get(P);le.outputColorSpace=Q.outputColorSpace,le.batching=Q.batching,le.instancing=Q.instancing,le.instancingColor=Q.instancingColor,le.skinning=Q.skinning,le.morphTargets=Q.morphTargets,le.morphNormals=Q.morphNormals,le.morphColors=Q.morphColors,le.morphTargetsCount=Q.morphTargetsCount,le.numClippingPlanes=Q.numClippingPlanes,le.numIntersection=Q.numClipIntersection,le.vertexAlphas=Q.vertexAlphas,le.vertexTangents=Q.vertexTangents,le.toneMapping=Q.toneMapping}function W(P,Q,le,Z,ae){Q.isScene!==!0&&(Q=de),z.resetTextureUnits();const Se=Q.fog,Be=Z.isMeshStandardMaterial?Q.environment:null,Le=S===null?x.outputColorSpace:S.isXRRenderTarget===!0?S.texture.colorSpace:Ci,Ae=(Z.isMeshStandardMaterial?ue:I).get(Z.envMap||Be),Ie=Z.vertexColors===!0&&!!le.attributes.color&&le.attributes.color.itemSize===4,Xe=!!le.attributes.tangent&&(!!Z.normalMap||Z.anisotropy>0),tt=!!le.morphAttributes.position,ut=!!le.morphAttributes.normal,Dt=!!le.morphAttributes.color;let bt=Zi;Z.toneMapped&&(S===null||S.isXRRenderTarget===!0)&&(bt=x.toneMapping);const yt=le.morphAttributes.position||le.morphAttributes.normal||le.morphAttributes.color,It=yt!==void 0?yt.length:0,st=Te.get(Z),yn=v.state.lights;if(A===!0&&(U===!0||P!==L)){const rn=P===L&&Z.id===C;Pe.setState(Z,P,rn)}let Tt=!1;Z.version===st.__version?(st.needsLights&&st.lightsStateVersion!==yn.state.version||st.outputColorSpace!==Le||ae.isBatchedMesh&&st.batching===!1||!ae.isBatchedMesh&&st.batching===!0||ae.isInstancedMesh&&st.instancing===!1||!ae.isInstancedMesh&&st.instancing===!0||ae.isSkinnedMesh&&st.skinning===!1||!ae.isSkinnedMesh&&st.skinning===!0||ae.isInstancedMesh&&st.instancingColor===!0&&ae.instanceColor===null||ae.isInstancedMesh&&st.instancingColor===!1&&ae.instanceColor!==null||st.envMap!==Ae||Z.fog===!0&&st.fog!==Se||st.numClippingPlanes!==void 0&&(st.numClippingPlanes!==Pe.numPlanes||st.numIntersection!==Pe.numIntersection)||st.vertexAlphas!==Ie||st.vertexTangents!==Xe||st.morphTargets!==tt||st.morphNormals!==ut||st.morphColors!==Dt||st.toneMapping!==bt||ce.isWebGL2===!0&&st.morphTargetsCount!==It)&&(Tt=!0):(Tt=!0,st.__version=Z.version);let kt=st.currentProgram;Tt===!0&&(kt=_e(Z,Q,ae));let nn=!1,un=!1,zn=!1;const ct=kt.getUniforms(),Kt=st.uniforms;if(oe.useProgram(kt.program)&&(nn=!0,un=!0,zn=!0),Z.id!==C&&(C=Z.id,un=!0),nn||L!==P){ct.setValue(X,"projectionMatrix",P.projectionMatrix),ct.setValue(X,"viewMatrix",P.matrixWorldInverse);const rn=ct.map.cameraPosition;rn!==void 0&&rn.setValue(X,re.setFromMatrixPosition(P.matrixWorld)),ce.logarithmicDepthBuffer&&ct.setValue(X,"logDepthBufFC",2/(Math.log(P.far+1)/Math.LN2)),(Z.isMeshPhongMaterial||Z.isMeshToonMaterial||Z.isMeshLambertMaterial||Z.isMeshBasicMaterial||Z.isMeshStandardMaterial||Z.isShaderMaterial)&&ct.setValue(X,"isOrthographic",P.isOrthographicCamera===!0),L!==P&&(L=P,un=!0,zn=!0)}if(ae.isSkinnedMesh){ct.setOptional(X,ae,"bindMatrix"),ct.setOptional(X,ae,"bindMatrixInverse");const rn=ae.skeleton;rn&&(ce.floatVertexTextures?(rn.boneTexture===null&&rn.computeBoneTexture(),ct.setValue(X,"boneTexture",rn.boneTexture,z)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}ae.isBatchedMesh&&(ct.setOptional(X,ae,"batchingTexture"),ct.setValue(X,"batchingTexture",ae._matricesTexture,z));const Zt=le.morphAttributes;if((Zt.position!==void 0||Zt.normal!==void 0||Zt.color!==void 0&&ce.isWebGL2===!0)&&je.update(ae,le,kt),(un||st.receiveShadow!==ae.receiveShadow)&&(st.receiveShadow=ae.receiveShadow,ct.setValue(X,"receiveShadow",ae.receiveShadow)),Z.isMeshGouraudMaterial&&Z.envMap!==null&&(Kt.envMap.value=Ae,Kt.flipEnvMap.value=Ae.isCubeTexture&&Ae.isRenderTargetTexture===!1?-1:1),un&&(ct.setValue(X,"toneMappingExposure",x.toneMappingExposure),st.needsLights&&Y(Kt,zn),Se&&Z.fog===!0&&ye.refreshFogUniforms(Kt,Se),ye.refreshMaterialUniforms(Kt,Z,R,ee,J),Mc.upload(X,ke(st),Kt,z)),Z.isShaderMaterial&&Z.uniformsNeedUpdate===!0&&(Mc.upload(X,ke(st),Kt,z),Z.uniformsNeedUpdate=!1),Z.isSpriteMaterial&&ct.setValue(X,"center",ae.center),ct.setValue(X,"modelViewMatrix",ae.modelViewMatrix),ct.setValue(X,"normalMatrix",ae.normalMatrix),ct.setValue(X,"modelMatrix",ae.matrixWorld),Z.isShaderMaterial||Z.isRawShaderMaterial){const rn=Z.uniformsGroups;for(let oi=0,Oh=rn.length;oi<Oh;oi++)if(ce.isWebGL2){const vl=rn[oi];se.update(vl,kt),se.bind(vl,kt)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return kt}function Y(P,Q){P.ambientLightColor.needsUpdate=Q,P.lightProbe.needsUpdate=Q,P.directionalLights.needsUpdate=Q,P.directionalLightShadows.needsUpdate=Q,P.pointLights.needsUpdate=Q,P.pointLightShadows.needsUpdate=Q,P.spotLights.needsUpdate=Q,P.spotLightShadows.needsUpdate=Q,P.rectAreaLights.needsUpdate=Q,P.hemisphereLights.needsUpdate=Q}function fe(P){return P.isMeshLambertMaterial||P.isMeshToonMaterial||P.isMeshPhongMaterial||P.isMeshStandardMaterial||P.isShadowMaterial||P.isShaderMaterial&&P.lights===!0}this.getActiveCubeFace=function(){return b},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return S},this.setRenderTargetTextures=function(P,Q,le){Te.get(P.texture).__webglTexture=Q,Te.get(P.depthTexture).__webglTexture=le;const Z=Te.get(P);Z.__hasExternalTextures=!0,Z.__hasExternalTextures&&(Z.__autoAllocateDepthBuffer=le===void 0,Z.__autoAllocateDepthBuffer||he.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),Z.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(P,Q){const le=Te.get(P);le.__webglFramebuffer=Q,le.__useDefaultFramebuffer=Q===void 0},this.setRenderTarget=function(P,Q=0,le=0){S=P,b=Q,w=le;let Z=!0,ae=null,Se=!1,Be=!1;if(P){const Ae=Te.get(P);Ae.__useDefaultFramebuffer!==void 0?(oe.bindFramebuffer(X.FRAMEBUFFER,null),Z=!1):Ae.__webglFramebuffer===void 0?z.setupRenderTarget(P):Ae.__hasExternalTextures&&z.rebindTextures(P,Te.get(P.texture).__webglTexture,Te.get(P.depthTexture).__webglTexture);const Ie=P.texture;(Ie.isData3DTexture||Ie.isDataArrayTexture||Ie.isCompressedArrayTexture)&&(Be=!0);const Xe=Te.get(P).__webglFramebuffer;P.isWebGLCubeRenderTarget?(Array.isArray(Xe[Q])?ae=Xe[Q][le]:ae=Xe[Q],Se=!0):ce.isWebGL2&&P.samples>0&&z.useMultisampledRTT(P)===!1?ae=Te.get(P).__webglMultisampledFramebuffer:Array.isArray(Xe)?ae=Xe[le]:ae=Xe,M.copy(P.viewport),E.copy(P.scissor),N=P.scissorTest}else M.copy(O).multiplyScalar(R).floor(),E.copy(B).multiplyScalar(R).floor(),N=q;if(oe.bindFramebuffer(X.FRAMEBUFFER,ae)&&ce.drawBuffers&&Z&&oe.drawBuffers(P,ae),oe.viewport(M),oe.scissor(E),oe.setScissorTest(N),Se){const Ae=Te.get(P.texture);X.framebufferTexture2D(X.FRAMEBUFFER,X.COLOR_ATTACHMENT0,X.TEXTURE_CUBE_MAP_POSITIVE_X+Q,Ae.__webglTexture,le)}else if(Be){const Ae=Te.get(P.texture),Ie=Q||0;X.framebufferTextureLayer(X.FRAMEBUFFER,X.COLOR_ATTACHMENT0,Ae.__webglTexture,le||0,Ie)}C=-1},this.readRenderTargetPixels=function(P,Q,le,Z,ae,Se,Be){if(!(P&&P.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Le=Te.get(P).__webglFramebuffer;if(P.isWebGLCubeRenderTarget&&Be!==void 0&&(Le=Le[Be]),Le){oe.bindFramebuffer(X.FRAMEBUFFER,Le);try{const Ae=P.texture,Ie=Ae.format,Xe=Ae.type;if(Ie!==Un&&We.convert(Ie)!==X.getParameter(X.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const tt=Xe===ea&&(he.has("EXT_color_buffer_half_float")||ce.isWebGL2&&he.has("EXT_color_buffer_float"));if(Xe!==ji&&We.convert(Xe)!==X.getParameter(X.IMPLEMENTATION_COLOR_READ_TYPE)&&!(Xe===ti&&(ce.isWebGL2||he.has("OES_texture_float")||he.has("WEBGL_color_buffer_float")))&&!tt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Q>=0&&Q<=P.width-Z&&le>=0&&le<=P.height-ae&&X.readPixels(Q,le,Z,ae,We.convert(Ie),We.convert(Xe),Se)}finally{const Ae=S!==null?Te.get(S).__webglFramebuffer:null;oe.bindFramebuffer(X.FRAMEBUFFER,Ae)}}},this.copyFramebufferToTexture=function(P,Q,le=0){const Z=Math.pow(2,-le),ae=Math.floor(Q.image.width*Z),Se=Math.floor(Q.image.height*Z);z.setTexture2D(Q,0),X.copyTexSubImage2D(X.TEXTURE_2D,le,0,0,P.x,P.y,ae,Se),oe.unbindTexture()},this.copyTextureToTexture=function(P,Q,le,Z=0){const ae=Q.image.width,Se=Q.image.height,Be=We.convert(le.format),Le=We.convert(le.type);z.setTexture2D(le,0),X.pixelStorei(X.UNPACK_FLIP_Y_WEBGL,le.flipY),X.pixelStorei(X.UNPACK_PREMULTIPLY_ALPHA_WEBGL,le.premultiplyAlpha),X.pixelStorei(X.UNPACK_ALIGNMENT,le.unpackAlignment),Q.isDataTexture?X.texSubImage2D(X.TEXTURE_2D,Z,P.x,P.y,ae,Se,Be,Le,Q.image.data):Q.isCompressedTexture?X.compressedTexSubImage2D(X.TEXTURE_2D,Z,P.x,P.y,Q.mipmaps[0].width,Q.mipmaps[0].height,Be,Q.mipmaps[0].data):X.texSubImage2D(X.TEXTURE_2D,Z,P.x,P.y,Be,Le,Q.image),Z===0&&le.generateMipmaps&&X.generateMipmap(X.TEXTURE_2D),oe.unbindTexture()},this.copyTextureToTexture3D=function(P,Q,le,Z,ae=0){if(x.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Se=P.max.x-P.min.x+1,Be=P.max.y-P.min.y+1,Le=P.max.z-P.min.z+1,Ae=We.convert(Z.format),Ie=We.convert(Z.type);let Xe;if(Z.isData3DTexture)z.setTexture3D(Z,0),Xe=X.TEXTURE_3D;else if(Z.isDataArrayTexture||Z.isCompressedArrayTexture)z.setTexture2DArray(Z,0),Xe=X.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}X.pixelStorei(X.UNPACK_FLIP_Y_WEBGL,Z.flipY),X.pixelStorei(X.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Z.premultiplyAlpha),X.pixelStorei(X.UNPACK_ALIGNMENT,Z.unpackAlignment);const tt=X.getParameter(X.UNPACK_ROW_LENGTH),ut=X.getParameter(X.UNPACK_IMAGE_HEIGHT),Dt=X.getParameter(X.UNPACK_SKIP_PIXELS),bt=X.getParameter(X.UNPACK_SKIP_ROWS),yt=X.getParameter(X.UNPACK_SKIP_IMAGES),It=le.isCompressedTexture?le.mipmaps[ae]:le.image;X.pixelStorei(X.UNPACK_ROW_LENGTH,It.width),X.pixelStorei(X.UNPACK_IMAGE_HEIGHT,It.height),X.pixelStorei(X.UNPACK_SKIP_PIXELS,P.min.x),X.pixelStorei(X.UNPACK_SKIP_ROWS,P.min.y),X.pixelStorei(X.UNPACK_SKIP_IMAGES,P.min.z),le.isDataTexture||le.isData3DTexture?X.texSubImage3D(Xe,ae,Q.x,Q.y,Q.z,Se,Be,Le,Ae,Ie,It.data):le.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),X.compressedTexSubImage3D(Xe,ae,Q.x,Q.y,Q.z,Se,Be,Le,Ae,It.data)):X.texSubImage3D(Xe,ae,Q.x,Q.y,Q.z,Se,Be,Le,Ae,Ie,It),X.pixelStorei(X.UNPACK_ROW_LENGTH,tt),X.pixelStorei(X.UNPACK_IMAGE_HEIGHT,ut),X.pixelStorei(X.UNPACK_SKIP_PIXELS,Dt),X.pixelStorei(X.UNPACK_SKIP_ROWS,bt),X.pixelStorei(X.UNPACK_SKIP_IMAGES,yt),ae===0&&Z.generateMipmaps&&X.generateMipmap(Xe),oe.unbindTexture()},this.initTexture=function(P){P.isCubeTexture?z.setTextureCube(P,0):P.isData3DTexture?z.setTexture3D(P,0):P.isDataArrayTexture||P.isCompressedArrayTexture?z.setTexture2DArray(P,0):z.setTexture2D(P,0),oe.unbindTexture()},this.resetState=function(){b=0,w=0,S=null,oe.reset(),at.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Ai}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const n=this.getContext();n.drawingBufferColorSpace=e===Mh?"display-p3":"srgb",n.unpackColorSpace=Bt.workingColorSpace===hl?"display-p3":"srgb"}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===on?xr:Td}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===xr?on:Ci}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}};class fy extends Od{}fy.prototype.isWebGL1Renderer=!0;let dy=class py{constructor(e,n=25e-5){this.isFogExp2=!0,this.name="",this.color=new rt(e),this.density=n}clone(){return new py(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}},my=class vy{constructor(e,n=1,i=1e3){this.isFog=!0,this.name="",this.color=new rt(e),this.near=n,this.far=i}clone(){return new vy(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}},zd=class extends Ft{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,n){return super.copy(e,n),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const n=super.toJSON(e);return this.fog!==null&&(n.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(n.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(n.object.backgroundIntensity=this.backgroundIntensity),n}},Ch=class{constructor(e,n){this.isInterleavedBuffer=!0,this.array=e,this.stride=n,this.count=e!==void 0?e.length/n:0,this.usage=ho,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.version=0,this.uuid=qn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return ss("THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,n){this.updateRanges.push({start:e,count:n})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,n,i){e*=this.stride,i*=n.stride;for(let r=0,s=this.stride;r<s;r++)this.array[e+r]=n.array[i+r];return this}set(e,n=0){return this.array.set(e,n),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=qn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const n=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(n,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=qn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}};const Tn=new K;let po=class gy{constructor(e,n,i,r=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=n,this.offset=i,this.normalized=r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let n=0,i=this.data.count;n<i;n++)Tn.fromBufferAttribute(this,n),Tn.applyMatrix4(e),this.setXYZ(n,Tn.x,Tn.y,Tn.z);return this}applyNormalMatrix(e){for(let n=0,i=this.count;n<i;n++)Tn.fromBufferAttribute(this,n),Tn.applyNormalMatrix(e),this.setXYZ(n,Tn.x,Tn.y,Tn.z);return this}transformDirection(e){for(let n=0,i=this.count;n<i;n++)Tn.fromBufferAttribute(this,n),Tn.transformDirection(e),this.setXYZ(n,Tn.x,Tn.y,Tn.z);return this}getComponent(e,n){let i=this.array[e*this.data.stride+this.offset+n];return this.normalized&&(i=Cn(i,this.array)),i}setComponent(e,n,i){return this.normalized&&(i=St(i,this.array)),this.data.array[e*this.data.stride+this.offset+n]=i,this}setX(e,n){return this.normalized&&(n=St(n,this.array)),this.data.array[e*this.data.stride+this.offset]=n,this}setY(e,n){return this.normalized&&(n=St(n,this.array)),this.data.array[e*this.data.stride+this.offset+1]=n,this}setZ(e,n){return this.normalized&&(n=St(n,this.array)),this.data.array[e*this.data.stride+this.offset+2]=n,this}setW(e,n){return this.normalized&&(n=St(n,this.array)),this.data.array[e*this.data.stride+this.offset+3]=n,this}getX(e){let n=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(n=Cn(n,this.array)),n}getY(e){let n=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(n=Cn(n,this.array)),n}getZ(e){let n=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(n=Cn(n,this.array)),n}getW(e){let n=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(n=Cn(n,this.array)),n}setXY(e,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(n=St(n,this.array),i=St(i,this.array)),this.data.array[e+0]=n,this.data.array[e+1]=i,this}setXYZ(e,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(n=St(n,this.array),i=St(i,this.array),r=St(r,this.array)),this.data.array[e+0]=n,this.data.array[e+1]=i,this.data.array[e+2]=r,this}setXYZW(e,n,i,r,s){return e=e*this.data.stride+this.offset,this.normalized&&(n=St(n,this.array),i=St(i,this.array),r=St(r,this.array),s=St(s,this.array)),this.data.array[e+0]=n,this.data.array[e+1]=i,this.data.array[e+2]=r,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const n=[];for(let i=0;i<this.count;i++){const r=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)n.push(this.data.array[r+s])}return new Ut(new this.array.constructor(n),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new gy(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const n=[];for(let i=0;i<this.count;i++){const r=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)n.push(this.data.array[r+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:n,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}},Gd=class extends En{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new rt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}},Us;const Ua=new K,Fs=new K,Os=new K,zs=new De,Fa=new De,yy=new Mt,Ol=new K,Oa=new K,zl=new K,hm=new De,lu=new De,um=new De;let xy=class extends Ft{constructor(e=new Gd){if(super(),this.isSprite=!0,this.type="Sprite",Us===void 0){Us=new Lt;const n=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new Ch(n,5);Us.setIndex([0,1,2,0,2,3]),Us.setAttribute("position",new po(i,3,0,!1)),Us.setAttribute("uv",new po(i,2,3,!1))}this.geometry=Us,this.material=e,this.center=new De(.5,.5)}raycast(e,n){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Fs.setFromMatrixScale(this.matrixWorld),yy.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Os.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Fs.multiplyScalar(-Os.z);const i=this.material.rotation;let r,s;i!==0&&(s=Math.cos(i),r=Math.sin(i));const a=this.center;Gl(Ol.set(-.5,-.5,0),Os,a,Fs,r,s),Gl(Oa.set(.5,-.5,0),Os,a,Fs,r,s),Gl(zl.set(.5,.5,0),Os,a,Fs,r,s),hm.set(0,0),lu.set(1,0),um.set(1,1);let o=e.ray.intersectTriangle(Ol,Oa,zl,!1,Ua);if(o===null&&(Gl(Oa.set(-.5,.5,0),Os,a,Fs,r,s),lu.set(0,1),o=e.ray.intersectTriangle(Ol,zl,Oa,!1,Ua),o===null))return;const l=e.ray.origin.distanceTo(Ua);l<e.near||l>e.far||n.push({distance:l,point:Ua.clone(),uv:es.getInterpolation(Ua,Ol,Oa,zl,hm,lu,um,new De),face:null,object:this})}copy(e,n){return super.copy(e,n),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}};function Gl(t,e,n,i,r,s){zs.subVectors(t,n).addScalar(.5).multiply(i),r!==void 0?(Fa.x=s*zs.x-r*zs.y,Fa.y=r*zs.x+s*zs.y):Fa.copy(zs),t.copy(e),t.x+=Fa.x,t.y+=Fa.y,t.applyMatrix4(yy)}const Vl=new K,fm=new K;let _y=class extends Ft{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const n=e.levels;for(let i=0,r=n.length;i<r;i++){const s=n[i];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,n=0,i=0){n=Math.abs(n);const r=this.levels;let s;for(s=0;s<r.length&&!(n<r[s].distance);s++);return r.splice(s,0,{distance:n,hysteresis:i,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const n=this.levels;if(n.length>0){let i,r;for(i=1,r=n.length;i<r;i++){let s=n[i].distance;if(n[i].object.visible&&(s-=s*n[i].hysteresis),e<s)break}return n[i-1].object}return null}raycast(e,n){if(this.levels.length>0){Vl.setFromMatrixPosition(this.matrixWorld);const r=e.ray.origin.distanceTo(Vl);this.getObjectForDistance(r).raycast(e,n)}}update(e){const n=this.levels;if(n.length>1){Vl.setFromMatrixPosition(e.matrixWorld),fm.setFromMatrixPosition(this.matrixWorld);const i=Vl.distanceTo(fm)/e.zoom;n[0].object.visible=!0;let r,s;for(r=1,s=n.length;r<s;r++){let a=n[r].distance;if(n[r].object.visible&&(a-=a*n[r].hysteresis),i>=a)n[r-1].object.visible=!1,n[r].object.visible=!0;else break}for(this._currentLevel=r-1;r<s;r++)n[r].object.visible=!1}}toJSON(e){const n=super.toJSON(e);this.autoUpdate===!1&&(n.object.autoUpdate=!1),n.object.levels=[];const i=this.levels;for(let r=0,s=i.length;r<s;r++){const a=i[r];n.object.levels.push({object:a.object.uuid,distance:a.distance,hysteresis:a.hysteresis})}return n}};const dm=new K,pm=new zt,mm=new zt,YS=new K,vm=new Mt,Hl=new K,cu=new Sn,gm=new Mt,hu=new gs;let My=class extends an{constructor(e,n){super(e,n),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Wu,this.bindMatrix=new Mt,this.bindMatrixInverse=new Mt,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new In),this.boundingBox.makeEmpty();const n=e.getAttribute("position");for(let i=0;i<n.count;i++)this.getVertexPosition(i,Hl),this.boundingBox.expandByPoint(Hl)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Sn),this.boundingSphere.makeEmpty();const n=e.getAttribute("position");for(let i=0;i<n.count;i++)this.getVertexPosition(i,Hl),this.boundingSphere.expandByPoint(Hl)}copy(e,n){return super.copy(e,n),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,n){const i=this.material,r=this.matrixWorld;i!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),cu.copy(this.boundingSphere),cu.applyMatrix4(r),e.ray.intersectsSphere(cu)!==!1&&(gm.copy(r).invert(),hu.copy(e.ray).applyMatrix4(gm),!(this.boundingBox!==null&&hu.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,n,hu)))}getVertexPosition(e,n){return super.getVertexPosition(e,n),this.applyBoneTransform(e,n),n}bind(e,n){this.skeleton=e,n===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),n=this.matrixWorld),this.bindMatrix.copy(n),this.bindMatrixInverse.copy(n).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new zt,n=this.geometry.attributes.skinWeight;for(let i=0,r=n.count;i<r;i++){e.fromBufferAttribute(n,i);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),n.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Wu?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===xg?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,n){const i=this.skeleton,r=this.geometry;pm.fromBufferAttribute(r.attributes.skinIndex,e),mm.fromBufferAttribute(r.attributes.skinWeight,e),dm.copy(n).applyMatrix4(this.bindMatrix),n.set(0,0,0);for(let s=0;s<4;s++){const a=mm.getComponent(s);if(a!==0){const o=pm.getComponent(s);vm.multiplyMatrices(i.bones[o].matrixWorld,i.boneInverses[o]),n.addScaledVector(YS.copy(dm).applyMatrix4(vm),a)}}return n.applyMatrix4(this.bindMatrixInverse)}},Vd=class extends Ft{constructor(){super(),this.isBone=!0,this.type="Bone"}},as=class extends gn{constructor(e=null,n=1,i=1,r,s,a,o,l,c=en,h=en,u,f){super(null,a,o,l,c,h,r,s,u,f),this.isDataTexture=!0,this.image={data:e,width:n,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}};const ym=new Mt,ZS=new Mt;let by=class wy{constructor(e=[],n=[]){this.uuid=qn(),this.bones=e.slice(0),this.boneInverses=n,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,n=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),n.length===0)this.calculateInverses();else if(e.length!==n.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,r=this.bones.length;i<r;i++)this.boneInverses.push(new Mt)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,n=this.bones.length;e<n;e++){const i=new Mt;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,n=this.bones.length;e<n;e++){const i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,n=this.bones.length;e<n;e++){const i=this.bones[e];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){const e=this.bones,n=this.boneInverses,i=this.boneMatrices,r=this.boneTexture;for(let s=0,a=e.length;s<a;s++){const o=e[s]?e[s].matrixWorld:ZS;ym.multiplyMatrices(o,n[s]),ym.toArray(i,s*16)}r!==null&&(r.needsUpdate=!0)}clone(){return new wy(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const n=new Float32Array(e*e*4);n.set(this.boneMatrices);const i=new as(n,e,e,Un,ti);return i.needsUpdate=!0,this.boneMatrices=n,this.boneTexture=i,this}getBoneByName(e){for(let n=0,i=this.bones.length;n<i;n++){const r=this.bones[n];if(r.name===e)return r}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,n){this.uuid=e.uuid;for(let i=0,r=e.bones.length;i<r;i++){const s=e.bones[i];let a=n[s];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),a=new Vd),this.bones.push(a),this.boneInverses.push(new Mt().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const n=this.bones,i=this.boneInverses;for(let r=0,s=n.length;r<s;r++){const a=n[r];e.bones.push(a.uuid);const o=i[r];e.boneInverses.push(o.toArray())}return e}},ia=class extends Ut{constructor(e,n,i,r=1){super(e,n,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}};const Gs=new Mt,xm=new Mt,kl=[],_m=new In,jS=new Mt,za=new an,Ga=new Sn;class Sy extends an{constructor(e,n,i){super(e,n),this.isInstancedMesh=!0,this.instanceMatrix=new ia(new Float32Array(i*16),16),this.instanceColor=null,this.count=i,this.boundingBox=null,this.boundingSphere=null;for(let r=0;r<i;r++)this.setMatrixAt(r,jS)}computeBoundingBox(){const e=this.geometry,n=this.count;this.boundingBox===null&&(this.boundingBox=new In),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let i=0;i<n;i++)this.getMatrixAt(i,Gs),_m.copy(e.boundingBox).applyMatrix4(Gs),this.boundingBox.union(_m)}computeBoundingSphere(){const e=this.geometry,n=this.count;this.boundingSphere===null&&(this.boundingSphere=new Sn),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let i=0;i<n;i++)this.getMatrixAt(i,Gs),Ga.copy(e.boundingSphere).applyMatrix4(Gs),this.boundingSphere.union(Ga)}copy(e,n){return super.copy(e,n),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,n){n.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,n){n.fromArray(this.instanceMatrix.array,e*16)}raycast(e,n){const i=this.matrixWorld,r=this.count;if(za.geometry=this.geometry,za.material=this.material,za.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Ga.copy(this.boundingSphere),Ga.applyMatrix4(i),e.ray.intersectsSphere(Ga)!==!1))for(let s=0;s<r;s++){this.getMatrixAt(s,Gs),xm.multiplyMatrices(i,Gs),za.matrixWorld=xm,za.raycast(e,kl);for(let a=0,o=kl.length;a<o;a++){const l=kl[a];l.instanceId=s,l.object=this,n.push(l)}kl.length=0}}setColorAt(e,n){this.instanceColor===null&&(this.instanceColor=new ia(new Float32Array(this.instanceMatrix.count*3),3)),n.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,n){n.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}function JS(t,e){return t.z-e.z}function KS(t,e){return e.z-t.z}class QS{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,n){const i=this.pool,r=this.list;this.index>=i.length&&i.push({start:-1,count:-1,z:-1});const s=i[this.index];r.push(s),this.index++,s.start=e.start,s.count=e.count,s.z=n}reset(){this.list.length=0,this.index=0}}const Vs="batchId",ur=new Mt,Mm=new Mt,eE=new Mt,bm=new Mt,uu=new dl,Wl=new In,Fr=new Sn,Va=new K,fu=new QS,Mn=new an,Xl=[];function tE(t,e,n=0){const i=e.itemSize;if(t.isInterleavedBufferAttribute||t.array.constructor!==e.array.constructor){const r=t.count;for(let s=0;s<r;s++)for(let a=0;a<i;a++)e.setComponent(s+n,a,t.getComponent(s,a))}else e.array.set(t.array,n*i);e.needsUpdate=!0}class Ey extends an{get maxGeometryCount(){return this._maxGeometryCount}constructor(e,n,i=n*2,r){super(new Lt,r),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._drawRanges=[],this._reservedRanges=[],this._visibility=[],this._active=[],this._bounds=[],this._maxGeometryCount=e,this._maxVertexCount=n,this._maxIndexCount=i,this._geometryInitialized=!1,this._geometryCount=0,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._visibilityChanged=!0,this._matricesTexture=null,this._initMatricesTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxGeometryCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const n=new Float32Array(e*e*4),i=new as(n,e,e,Un,ti);this._matricesTexture=i}_initializeGeometry(e){const n=this.geometry,i=this._maxVertexCount,r=this._maxGeometryCount,s=this._maxIndexCount;if(this._geometryInitialized===!1){for(const o in e.attributes){const l=e.getAttribute(o),{array:c,itemSize:h,normalized:u}=l,f=new c.constructor(i*h),d=new l.constructor(f,h,u);d.setUsage(l.usage),n.setAttribute(o,d)}if(e.getIndex()!==null){const o=i>65536?new Uint32Array(s):new Uint16Array(s);n.setIndex(new Ut(o,1))}const a=r>65536?new Uint32Array(i):new Uint16Array(i);n.setAttribute(Vs,new Ut(a,1)),this._geometryInitialized=!0}}_validateGeometry(e){if(e.getAttribute(Vs))throw new Error(`BatchedMesh: Geometry cannot use attribute "${Vs}"`);const n=this.geometry;if(!!e.getIndex()!=!!n.getIndex())throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const i in n.attributes){if(i===Vs)continue;if(!e.hasAttribute(i))throw new Error(`BatchedMesh: Added geometry missing "${i}". All geometries must have consistent attributes.`);const r=e.getAttribute(i),s=n.getAttribute(i);if(r.itemSize!==s.itemSize||r.normalized!==s.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new In);const e=this._geometryCount,n=this.boundingBox,i=this._active;n.makeEmpty();for(let r=0;r<e;r++)i[r]!==!1&&(this.getMatrixAt(r,ur),this.getBoundingBoxAt(r,Wl).applyMatrix4(ur),n.union(Wl))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Sn);const e=this._geometryCount,n=this.boundingSphere,i=this._active;n.makeEmpty();for(let r=0;r<e;r++)i[r]!==!1&&(this.getMatrixAt(r,ur),this.getBoundingSphereAt(r,Fr).applyMatrix4(ur),n.union(Fr))}addGeometry(e,n=-1,i=-1){if(this._initializeGeometry(e),this._validateGeometry(e),this._geometryCount>=this._maxGeometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");const r={vertexStart:-1,vertexCount:-1,indexStart:-1,indexCount:-1};let s=null;const a=this._reservedRanges,o=this._drawRanges,l=this._bounds;this._geometryCount!==0&&(s=a[a.length-1]),n===-1?r.vertexCount=e.getAttribute("position").count:r.vertexCount=n,s===null?r.vertexStart=0:r.vertexStart=s.vertexStart+s.vertexCount;const c=e.getIndex(),h=c!==null;if(h&&(i===-1?r.indexCount=c.count:r.indexCount=i,s===null?r.indexStart=0:r.indexStart=s.indexStart+s.indexCount),r.indexStart!==-1&&r.indexStart+r.indexCount>this._maxIndexCount||r.vertexStart+r.vertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");const u=this._visibility,f=this._active,d=this._matricesTexture,p=this._matricesTexture.image.data;u.push(!0),f.push(!0);const g=this._geometryCount;this._geometryCount++,eE.toArray(p,g*16),d.needsUpdate=!0,a.push(r),o.push({start:h?r.indexStart:r.vertexStart,count:-1}),l.push({boxInitialized:!1,box:new In,sphereInitialized:!1,sphere:new Sn});const v=this.geometry.getAttribute(Vs);for(let m=0;m<r.vertexCount;m++)v.setX(r.vertexStart+m,g);return v.needsUpdate=!0,this.setGeometryAt(g,e),g}setGeometryAt(e,n){if(e>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(n);const i=this.geometry,r=i.getIndex()!==null,s=i.getIndex(),a=n.getIndex(),o=this._reservedRanges[e];if(r&&a.count>o.indexCount||n.attributes.position.count>o.vertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const l=o.vertexStart,c=o.vertexCount;for(const d in i.attributes){if(d===Vs)continue;const p=n.getAttribute(d),g=i.getAttribute(d);tE(p,g,l);const v=p.itemSize;for(let m=p.count,y=c;m<y;m++){const x=l+m;for(let _=0;_<v;_++)g.setComponent(x,_,0)}g.needsUpdate=!0}if(r){const d=o.indexStart;for(let p=0;p<a.count;p++)s.setX(d+p,l+a.getX(p));for(let p=a.count,g=o.indexCount;p<g;p++)s.setX(d+p,l);s.needsUpdate=!0}const h=this._bounds[e];n.boundingBox!==null?(h.box.copy(n.boundingBox),h.boxInitialized=!0):h.boxInitialized=!1,n.boundingSphere!==null?(h.sphere.copy(n.boundingSphere),h.sphereInitialized=!0):h.sphereInitialized=!1;const u=this._drawRanges[e],f=n.getAttribute("position");return u.count=r?a.count:f.count,this._visibilityChanged=!0,e}deleteGeometry(e){const n=this._active;return e>=n.length||n[e]===!1?this:(n[e]=!1,this._visibilityChanged=!0,this)}getBoundingBoxAt(e,n){if(this._active[e]===!1)return null;const r=this._bounds[e],s=r.box,a=this.geometry;if(r.boxInitialized===!1){s.makeEmpty();const o=a.index,l=a.attributes.position,c=this._drawRanges[e];for(let h=c.start,u=c.start+c.count;h<u;h++){let f=h;o&&(f=o.getX(f)),s.expandByPoint(Va.fromBufferAttribute(l,f))}r.boxInitialized=!0}return n.copy(s),n}getBoundingSphereAt(e,n){if(this._active[e]===!1)return null;const r=this._bounds[e],s=r.sphere,a=this.geometry;if(r.sphereInitialized===!1){s.makeEmpty(),this.getBoundingBoxAt(e,Wl),Wl.getCenter(s.center);const o=a.index,l=a.attributes.position,c=this._drawRanges[e];let h=0;for(let u=c.start,f=c.start+c.count;u<f;u++){let d=u;o&&(d=o.getX(d)),Va.fromBufferAttribute(l,d),h=Math.max(h,s.center.distanceToSquared(Va))}s.radius=Math.sqrt(h),r.sphereInitialized=!0}return n.copy(s),n}setMatrixAt(e,n){const i=this._active,r=this._matricesTexture,s=this._matricesTexture.image.data,a=this._geometryCount;return e>=a||i[e]===!1?this:(n.toArray(s,e*16),r.needsUpdate=!0,this)}getMatrixAt(e,n){const i=this._active,r=this._matricesTexture.image.data,s=this._geometryCount;return e>=s||i[e]===!1?null:n.fromArray(r,e*16)}setVisibleAt(e,n){const i=this._visibility,r=this._active,s=this._geometryCount;return e>=s||r[e]===!1||i[e]===n?this:(i[e]=n,this._visibilityChanged=!0,this)}getVisibleAt(e){const n=this._visibility,i=this._active,r=this._geometryCount;return e>=r||i[e]===!1?!1:n[e]}raycast(e,n){const i=this._visibility,r=this._active,s=this._drawRanges,a=this._geometryCount,o=this.matrixWorld,l=this.geometry;Mn.material=this.material,Mn.geometry.index=l.index,Mn.geometry.attributes=l.attributes,Mn.geometry.boundingBox===null&&(Mn.geometry.boundingBox=new In),Mn.geometry.boundingSphere===null&&(Mn.geometry.boundingSphere=new Sn);for(let c=0;c<a;c++){if(!i[c]||!r[c])continue;const h=s[c];Mn.geometry.setDrawRange(h.start,h.count),this.getMatrixAt(c,Mn.matrixWorld).premultiply(o),this.getBoundingBoxAt(c,Mn.geometry.boundingBox),this.getBoundingSphereAt(c,Mn.geometry.boundingSphere),Mn.raycast(e,Xl);for(let u=0,f=Xl.length;u<f;u++){const d=Xl[u];d.object=this,d.batchId=c,n.push(d)}Xl.length=0}Mn.material=null,Mn.geometry.index=null,Mn.geometry.attributes={},Mn.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._drawRanges=e._drawRanges.map(n=>({...n})),this._reservedRanges=e._reservedRanges.map(n=>({...n})),this._visibility=e._visibility.slice(),this._active=e._active.slice(),this._bounds=e._bounds.map(n=>({boxInitialized:n.boxInitialized,box:n.box.clone(),sphereInitialized:n.sphereInitialized,sphere:n.sphere.clone()})),this._maxGeometryCount=e._maxGeometryCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.slice(),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this}onBeforeRender(e,n,i,r,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const a=r.getIndex(),o=a===null?1:a.array.BYTES_PER_ELEMENT,l=this._active,c=this._visibility,h=this._multiDrawStarts,u=this._multiDrawCounts,f=this._drawRanges,d=this.perObjectFrustumCulled;d&&(bm.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse).multiply(this.matrixWorld),uu.setFromProjectionMatrix(bm,e.coordinateSystem));let p=0;if(this.sortObjects){Mm.copy(this.matrixWorld).invert(),Va.setFromMatrixPosition(i.matrixWorld).applyMatrix4(Mm);for(let m=0,y=c.length;m<y;m++)if(c[m]&&l[m]){this.getMatrixAt(m,ur),this.getBoundingSphereAt(m,Fr).applyMatrix4(ur);let x=!1;if(d&&(x=!uu.intersectsSphere(Fr)),!x){const _=Va.distanceTo(Fr.center);fu.push(f[m],_)}}const g=fu.list,v=this.customSort;v===null?g.sort(s.transparent?KS:JS):v.call(this,g,i);for(let m=0,y=g.length;m<y;m++){const x=g[m];h[p]=x.start*o,u[p]=x.count,p++}fu.reset()}else for(let g=0,v=c.length;g<v;g++)if(c[g]&&l[g]){let m=!1;if(d&&(this.getMatrixAt(g,ur),this.getBoundingSphereAt(g,Fr).applyMatrix4(ur),m=!uu.intersectsSphere(Fr)),!m){const y=f[g];h[p]=y.start*o,u[p]=y.count,p++}}this._multiDrawCount=p,this._visibilityChanged=!1}onBeforeShadow(e,n,i,r,s,a){this.onBeforeRender(e,null,r,s,a)}}let Nn=class extends En{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new rt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}};const wm=new K,Sm=new K,Em=new Mt,du=new gs,ql=new Sn;let Er=class extends Ft{constructor(e=new Lt,n=new Nn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=n,this.updateMorphTargets()}copy(e,n){return super.copy(e,n),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const n=e.attributes.position,i=[0];for(let r=1,s=n.count;r<s;r++)wm.fromBufferAttribute(n,r-1),Sm.fromBufferAttribute(n,r),i[r]=i[r-1],i[r]+=wm.distanceTo(Sm);e.setAttribute("lineDistance",new ht(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,n){const i=this.geometry,r=this.matrixWorld,s=e.params.Line.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),ql.copy(i.boundingSphere),ql.applyMatrix4(r),ql.radius+=s,e.ray.intersectsSphere(ql)===!1)return;Em.copy(r).invert(),du.copy(e.ray).applyMatrix4(Em);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=new K,h=new K,u=new K,f=new K,d=this.isLineSegments?2:1,p=i.index,v=i.attributes.position;if(p!==null){const m=Math.max(0,a.start),y=Math.min(p.count,a.start+a.count);for(let x=m,_=y-1;x<_;x+=d){const b=p.getX(x),w=p.getX(x+1);if(c.fromBufferAttribute(v,b),h.fromBufferAttribute(v,w),du.distanceSqToSegment(c,h,f,u)>l)continue;f.applyMatrix4(this.matrixWorld);const C=e.ray.origin.distanceTo(f);C<e.near||C>e.far||n.push({distance:C,point:u.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}else{const m=Math.max(0,a.start),y=Math.min(v.count,a.start+a.count);for(let x=m,_=y-1;x<_;x+=d){if(c.fromBufferAttribute(v,x),h.fromBufferAttribute(v,x+1),du.distanceSqToSegment(c,h,f,u)>l)continue;f.applyMatrix4(this.matrixWorld);const w=e.ray.origin.distanceTo(f);w<e.near||w>e.far||n.push({distance:w,point:u.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const n=this.geometry.morphAttributes,i=Object.keys(n);if(i.length>0){const r=n[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=r.length;s<a;s++){const o=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}};const Tm=new K,Am=new K;let Bi=class extends Er{constructor(e,n){super(e,n),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const n=e.attributes.position,i=[];for(let r=0,s=n.count;r<s;r+=2)Tm.fromBufferAttribute(n,r),Am.fromBufferAttribute(n,r+1),i[r]=r===0?0:i[r-1],i[r+1]=i[r]+Tm.distanceTo(Am);e.setAttribute("lineDistance",new ht(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}},Ty=class extends Er{constructor(e,n){super(e,n),this.isLineLoop=!0,this.type="LineLoop"}},Hd=class extends En{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new rt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}};const Cm=new Mt,wf=new gs,$l=new Sn,Yl=new K;let Ay=class extends Ft{constructor(e=new Lt,n=new Hd){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=n,this.updateMorphTargets()}copy(e,n){return super.copy(e,n),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,n){const i=this.geometry,r=this.matrixWorld,s=e.params.Points.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),$l.copy(i.boundingSphere),$l.applyMatrix4(r),$l.radius+=s,e.ray.intersectsSphere($l)===!1)return;Cm.copy(r).invert(),wf.copy(e.ray).applyMatrix4(Cm);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=i.index,u=i.attributes.position;if(c!==null){const f=Math.max(0,a.start),d=Math.min(c.count,a.start+a.count);for(let p=f,g=d;p<g;p++){const v=c.getX(p);Yl.fromBufferAttribute(u,v),Rm(Yl,v,l,r,e,n,this)}}else{const f=Math.max(0,a.start),d=Math.min(u.count,a.start+a.count);for(let p=f,g=d;p<g;p++)Yl.fromBufferAttribute(u,p),Rm(Yl,p,l,r,e,n,this)}}updateMorphTargets(){const n=this.geometry.morphAttributes,i=Object.keys(n);if(i.length>0){const r=n[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=r.length;s<a;s++){const o=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}};function Rm(t,e,n,i,r,s,a){const o=wf.distanceSqToPoint(t);if(o<n){const l=new K;wf.closestPointToPoint(t,l),l.applyMatrix4(i);const c=r.ray.origin.distanceTo(l);if(c<r.near||c>r.far)return;s.push({distance:c,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,object:a})}}let nE=class extends gn{constructor(e,n,i,r,s,a,o,l,c){super(e,n,i,r,s,a,o,l,c),this.isVideoTexture=!0,this.minFilter=a!==void 0?a:qt,this.magFilter=s!==void 0?s:qt,this.generateMipmaps=!1;const h=this;function u(){h.needsUpdate=!0,e.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(u)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}};class iE extends gn{constructor(e,n){super({width:e,height:n}),this.isFramebufferTexture=!0,this.magFilter=en,this.minFilter=en,this.generateMipmaps=!1,this.needsUpdate=!0}}let Rh=class extends gn{constructor(e,n,i,r,s,a,o,l,c,h,u,f){super(null,a,o,l,c,h,r,s,u,f),this.isCompressedTexture=!0,this.image={width:n,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}};class rE extends Rh{constructor(e,n,i,r,s,a){super(e,n,i,s,a),this.isCompressedArrayTexture=!0,this.image.depth=r,this.wrapR=bn}}class sE extends Rh{constructor(e,n,i){super(void 0,e[0].width,e[0].height,n,i,Ki),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}let aE=class extends gn{constructor(e,n,i,r,s,a,o,l,c){super(e,n,i,r,s,a,o,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}},_i=class{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,n){const i=this.getUtoTmapping(e);return this.getPoint(i,n)}getPoints(e=5){const n=[];for(let i=0;i<=e;i++)n.push(this.getPoint(i/e));return n}getSpacedPoints(e=5){const n=[];for(let i=0;i<=e;i++)n.push(this.getPointAt(i/e));return n}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const n=[];let i,r=this.getPoint(0),s=0;n.push(0);for(let a=1;a<=e;a++)i=this.getPoint(a/e),s+=i.distanceTo(r),n.push(s),r=i;return this.cacheArcLengths=n,n}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,n){const i=this.getLengths();let r=0;const s=i.length;let a;n?a=n:a=e*i[s-1];let o=0,l=s-1,c;for(;o<=l;)if(r=Math.floor(o+(l-o)/2),c=i[r]-a,c<0)o=r+1;else if(c>0)l=r-1;else{l=r;break}if(r=l,i[r]===a)return r/(s-1);const h=i[r],f=i[r+1]-h,d=(a-h)/f;return(r+d)/(s-1)}getTangent(e,n){let r=e-1e-4,s=e+1e-4;r<0&&(r=0),s>1&&(s=1);const a=this.getPoint(r),o=this.getPoint(s),l=n||(a.isVector2?new De:new K);return l.copy(o).sub(a).normalize(),l}getTangentAt(e,n){const i=this.getUtoTmapping(e);return this.getTangent(i,n)}computeFrenetFrames(e,n){const i=new K,r=[],s=[],a=[],o=new K,l=new Mt;for(let d=0;d<=e;d++){const p=d/e;r[d]=this.getTangentAt(p,new K)}s[0]=new K,a[0]=new K;let c=Number.MAX_VALUE;const h=Math.abs(r[0].x),u=Math.abs(r[0].y),f=Math.abs(r[0].z);h<=c&&(c=h,i.set(1,0,0)),u<=c&&(c=u,i.set(0,1,0)),f<=c&&i.set(0,0,1),o.crossVectors(r[0],i).normalize(),s[0].crossVectors(r[0],o),a[0].crossVectors(r[0],s[0]);for(let d=1;d<=e;d++){if(s[d]=s[d-1].clone(),a[d]=a[d-1].clone(),o.crossVectors(r[d-1],r[d]),o.length()>Number.EPSILON){o.normalize();const p=Math.acos(Jt(r[d-1].dot(r[d]),-1,1));s[d].applyMatrix4(l.makeRotationAxis(o,p))}a[d].crossVectors(r[d],s[d])}if(n===!0){let d=Math.acos(Jt(s[0].dot(s[e]),-1,1));d/=e,r[0].dot(o.crossVectors(s[0],s[e]))>0&&(d=-d);for(let p=1;p<=e;p++)s[p].applyMatrix4(l.makeRotationAxis(r[p],d*p)),a[p].crossVectors(r[p],s[p])}return{tangents:r,normals:s,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}},Ph=class extends _i{constructor(e=0,n=0,i=1,r=1,s=0,a=Math.PI*2,o=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=n,this.xRadius=i,this.yRadius=r,this.aStartAngle=s,this.aEndAngle=a,this.aClockwise=o,this.aRotation=l}getPoint(e,n){const i=n||new De,r=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const a=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=r;for(;s>r;)s-=r;s<Number.EPSILON&&(a?s=0:s=r),this.aClockwise===!0&&!a&&(s===r?s=-r:s=s-r);const o=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),f=l-this.aX,d=c-this.aY;l=f*h-d*u+this.aX,c=f*u+d*h+this.aY}return i.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}},Cy=class extends Ph{constructor(e,n,i,r,s,a){super(e,n,i,i,r,s,a),this.isArcCurve=!0,this.type="ArcCurve"}};function kd(){let t=0,e=0,n=0,i=0;function r(s,a,o,l){t=s,e=o,n=-3*s+3*a-2*o-l,i=2*s-2*a+o+l}return{initCatmullRom:function(s,a,o,l,c){r(a,o,c*(o-s),c*(l-a))},initNonuniformCatmullRom:function(s,a,o,l,c,h,u){let f=(a-s)/c-(o-s)/(c+h)+(o-a)/h,d=(o-a)/h-(l-a)/(h+u)+(l-o)/u;f*=h,d*=h,r(a,o,f,d)},calc:function(s){const a=s*s,o=a*s;return t+e*s+n*a+i*o}}}const Zl=new K,pu=new kd,mu=new kd,vu=new kd;let Ry=class extends _i{constructor(e=[],n=!1,i="centripetal",r=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=n,this.curveType=i,this.tension=r}getPoint(e,n=new K){const i=n,r=this.points,s=r.length,a=(s-(this.closed?0:1))*e;let o=Math.floor(a),l=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/s)+1)*s:l===0&&o===s-1&&(o=s-2,l=1);let c,h;this.closed||o>0?c=r[(o-1)%s]:(Zl.subVectors(r[0],r[1]).add(r[0]),c=Zl);const u=r[o%s],f=r[(o+1)%s];if(this.closed||o+2<s?h=r[(o+2)%s]:(Zl.subVectors(r[s-1],r[s-2]).add(r[s-1]),h=Zl),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(u),d),g=Math.pow(u.distanceToSquared(f),d),v=Math.pow(f.distanceToSquared(h),d);g<1e-4&&(g=1),p<1e-4&&(p=g),v<1e-4&&(v=g),pu.initNonuniformCatmullRom(c.x,u.x,f.x,h.x,p,g,v),mu.initNonuniformCatmullRom(c.y,u.y,f.y,h.y,p,g,v),vu.initNonuniformCatmullRom(c.z,u.z,f.z,h.z,p,g,v)}else this.curveType==="catmullrom"&&(pu.initCatmullRom(c.x,u.x,f.x,h.x,this.tension),mu.initCatmullRom(c.y,u.y,f.y,h.y,this.tension),vu.initCatmullRom(c.z,u.z,f.z,h.z,this.tension));return i.set(pu.calc(l),mu.calc(l),vu.calc(l)),i}copy(e){super.copy(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const r=e.points[n];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let n=0,i=this.points.length;n<i;n++){const r=this.points[n];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const r=e.points[n];this.points.push(new K().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}};function Pm(t,e,n,i,r){const s=(i-e)*.5,a=(r-n)*.5,o=t*t,l=t*o;return(2*n-2*i+s+a)*l+(-3*n+3*i-2*s-a)*o+s*t+n}function oE(t,e){const n=1-t;return n*n*e}function lE(t,e){return 2*(1-t)*t*e}function cE(t,e){return t*t*e}function Ya(t,e,n,i){return oE(t,e)+lE(t,n)+cE(t,i)}function hE(t,e){const n=1-t;return n*n*n*e}function uE(t,e){const n=1-t;return 3*n*n*t*e}function fE(t,e){return 3*(1-t)*t*t*e}function dE(t,e){return t*t*t*e}function Za(t,e,n,i,r){return hE(t,e)+uE(t,n)+fE(t,i)+dE(t,r)}let Wd=class extends _i{constructor(e=new De,n=new De,i=new De,r=new De){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=n,this.v2=i,this.v3=r}getPoint(e,n=new De){const i=n,r=this.v0,s=this.v1,a=this.v2,o=this.v3;return i.set(Za(e,r.x,s.x,a.x,o.x),Za(e,r.y,s.y,a.y,o.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}},Py=class extends _i{constructor(e=new K,n=new K,i=new K,r=new K){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=n,this.v2=i,this.v3=r}getPoint(e,n=new K){const i=n,r=this.v0,s=this.v1,a=this.v2,o=this.v3;return i.set(Za(e,r.x,s.x,a.x,o.x),Za(e,r.y,s.y,a.y,o.y),Za(e,r.z,s.z,a.z,o.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}},Xd=class extends _i{constructor(e=new De,n=new De){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=n}getPoint(e,n=new De){const i=n;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,n){return this.getPoint(e,n)}getTangent(e,n=new De){return n.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,n){return this.getTangent(e,n)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}},Ly=class extends _i{constructor(e=new K,n=new K){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=n}getPoint(e,n=new K){const i=n;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,n){return this.getPoint(e,n)}getTangent(e,n=new K){return n.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,n){return this.getTangent(e,n)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}},qd=class extends _i{constructor(e=new De,n=new De,i=new De){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=n,this.v2=i}getPoint(e,n=new De){const i=n,r=this.v0,s=this.v1,a=this.v2;return i.set(Ya(e,r.x,s.x,a.x),Ya(e,r.y,s.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}},$d=class extends _i{constructor(e=new K,n=new K,i=new K){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=n,this.v2=i}getPoint(e,n=new K){const i=n,r=this.v0,s=this.v1,a=this.v2;return i.set(Ya(e,r.x,s.x,a.x),Ya(e,r.y,s.y,a.y),Ya(e,r.z,s.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}},Yd=class extends _i{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,n=new De){const i=n,r=this.points,s=(r.length-1)*e,a=Math.floor(s),o=s-a,l=r[a===0?a:a-1],c=r[a],h=r[a>r.length-2?r.length-1:a+1],u=r[a>r.length-3?r.length-1:a+2];return i.set(Pm(o,l.x,c.x,h.x,u.x),Pm(o,l.y,c.y,h.y,u.y)),i}copy(e){super.copy(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const r=e.points[n];this.points.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let n=0,i=this.points.length;n<i;n++){const r=this.points[n];e.points.push(r.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const r=e.points[n];this.points.push(new De().fromArray(r))}return this}};var Pc=Object.freeze({__proto__:null,ArcCurve:Cy,CatmullRomCurve3:Ry,CubicBezierCurve:Wd,CubicBezierCurve3:Py,EllipseCurve:Ph,LineCurve:Xd,LineCurve3:Ly,QuadraticBezierCurve:qd,QuadraticBezierCurve3:$d,SplineCurve:Yd});let Iy=class extends _i{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),n=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(n)){const i=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Pc[i](n,e))}return this}getPoint(e,n){const i=e*this.getLength(),r=this.getCurveLengths();let s=0;for(;s<r.length;){if(r[s]>=i){const a=r[s]-i,o=this.curves[s],l=o.getLength(),c=l===0?0:1-a/l;return o.getPointAt(c,n)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let n=0;for(let i=0,r=this.curves.length;i<r;i++)n+=this.curves[i].getLength(),e.push(n);return this.cacheLengths=e,e}getSpacedPoints(e=40){const n=[];for(let i=0;i<=e;i++)n.push(this.getPoint(i/e));return this.autoClose&&n.push(n[0]),n}getPoints(e=12){const n=[];let i;for(let r=0,s=this.curves;r<s.length;r++){const a=s[r],o=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,l=a.getPoints(o);for(let c=0;c<l.length;c++){const h=l[c];i&&i.equals(h)||(n.push(h),i=h)}}return this.autoClose&&n.length>1&&!n[n.length-1].equals(n[0])&&n.push(n[0]),n}copy(e){super.copy(e),this.curves=[];for(let n=0,i=e.curves.length;n<i;n++){const r=e.curves[n];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let n=0,i=this.curves.length;n<i;n++){const r=this.curves[n];e.curves.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let n=0,i=e.curves.length;n<i;n++){const r=e.curves[n];this.curves.push(new Pc[r.type]().fromJSON(r))}return this}},mo=class extends Iy{constructor(e){super(),this.type="Path",this.currentPoint=new De,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let n=1,i=e.length;n<i;n++)this.lineTo(e[n].x,e[n].y);return this}moveTo(e,n){return this.currentPoint.set(e,n),this}lineTo(e,n){const i=new Xd(this.currentPoint.clone(),new De(e,n));return this.curves.push(i),this.currentPoint.set(e,n),this}quadraticCurveTo(e,n,i,r){const s=new qd(this.currentPoint.clone(),new De(e,n),new De(i,r));return this.curves.push(s),this.currentPoint.set(i,r),this}bezierCurveTo(e,n,i,r,s,a){const o=new Wd(this.currentPoint.clone(),new De(e,n),new De(i,r),new De(s,a));return this.curves.push(o),this.currentPoint.set(s,a),this}splineThru(e){const n=[this.currentPoint.clone()].concat(e),i=new Yd(n);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,n,i,r,s,a){const o=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+o,n+l,i,r,s,a),this}absarc(e,n,i,r,s,a){return this.absellipse(e,n,i,i,r,s,a),this}ellipse(e,n,i,r,s,a,o,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+c,n+h,i,r,s,a,o,l),this}absellipse(e,n,i,r,s,a,o,l){const c=new Ph(e,n,i,r,s,a,o,l);if(this.curves.length>0){const u=c.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(c);const h=c.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}},Zd=class Dy extends Lt{constructor(e=[new De(0,-.5),new De(.5,0),new De(0,.5)],n=12,i=0,r=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:n,phiStart:i,phiLength:r},n=Math.floor(n),r=Jt(r,0,Math.PI*2);const s=[],a=[],o=[],l=[],c=[],h=1/n,u=new K,f=new De,d=new K,p=new K,g=new K;let v=0,m=0;for(let y=0;y<=e.length-1;y++)switch(y){case 0:v=e[y+1].x-e[y].x,m=e[y+1].y-e[y].y,d.x=m*1,d.y=-v,d.z=m*0,g.copy(d),d.normalize(),l.push(d.x,d.y,d.z);break;case e.length-1:l.push(g.x,g.y,g.z);break;default:v=e[y+1].x-e[y].x,m=e[y+1].y-e[y].y,d.x=m*1,d.y=-v,d.z=m*0,p.copy(d),d.x+=g.x,d.y+=g.y,d.z+=g.z,d.normalize(),l.push(d.x,d.y,d.z),g.copy(p)}for(let y=0;y<=n;y++){const x=i+y*h*r,_=Math.sin(x),b=Math.cos(x);for(let w=0;w<=e.length-1;w++){u.x=e[w].x*_,u.y=e[w].y,u.z=e[w].x*b,a.push(u.x,u.y,u.z),f.x=y/n,f.y=w/(e.length-1),o.push(f.x,f.y);const S=l[3*w+0]*_,C=l[3*w+1],L=l[3*w+0]*b;c.push(S,C,L)}}for(let y=0;y<n;y++)for(let x=0;x<e.length-1;x++){const _=x+y*e.length,b=_,w=_+e.length,S=_+e.length+1,C=_+1;s.push(b,w,C),s.push(S,C,w)}this.setIndex(s),this.setAttribute("position",new ht(a,3)),this.setAttribute("uv",new ht(o,2)),this.setAttribute("normal",new ht(c,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Dy(e.points,e.segments,e.phiStart,e.phiLength)}};class Lh extends Zd{constructor(e=1,n=1,i=4,r=8){const s=new mo;s.absarc(0,-n/2,e,Math.PI*1.5,0),s.absarc(0,n/2,e,0,Math.PI*.5),super(s.getPoints(i),r),this.type="CapsuleGeometry",this.parameters={radius:e,length:n,capSegments:i,radialSegments:r}}static fromJSON(e){return new Lh(e.radius,e.length,e.capSegments,e.radialSegments)}}let Ny=class By extends Lt{constructor(e=1,n=32,i=0,r=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:n,thetaStart:i,thetaLength:r},n=Math.max(3,n);const s=[],a=[],o=[],l=[],c=new K,h=new De;a.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let u=0,f=3;u<=n;u++,f+=3){const d=i+u/n*r;c.x=e*Math.cos(d),c.y=e*Math.sin(d),a.push(c.x,c.y,c.z),o.push(0,0,1),h.x=(a[f]/e+1)/2,h.y=(a[f+1]/e+1)/2,l.push(h.x,h.y)}for(let u=1;u<=n;u++)s.push(u,u+1,0);this.setIndex(s),this.setAttribute("position",new ht(a,3)),this.setAttribute("normal",new ht(o,3)),this.setAttribute("uv",new ht(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new By(e.radius,e.segments,e.thetaStart,e.thetaLength)}},Ih=class Uy extends Lt{constructor(e=1,n=1,i=1,r=32,s=1,a=!1,o=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:n,height:i,radialSegments:r,heightSegments:s,openEnded:a,thetaStart:o,thetaLength:l};const c=this;r=Math.floor(r),s=Math.floor(s);const h=[],u=[],f=[],d=[];let p=0;const g=[],v=i/2;let m=0;y(),a===!1&&(e>0&&x(!0),n>0&&x(!1)),this.setIndex(h),this.setAttribute("position",new ht(u,3)),this.setAttribute("normal",new ht(f,3)),this.setAttribute("uv",new ht(d,2));function y(){const _=new K,b=new K;let w=0;const S=(n-e)/i;for(let C=0;C<=s;C++){const L=[],M=C/s,E=M*(n-e)+e;for(let N=0;N<=r;N++){const k=N/r,F=k*l+o,V=Math.sin(F),ee=Math.cos(F);b.x=E*V,b.y=-M*i+v,b.z=E*ee,u.push(b.x,b.y,b.z),_.set(V,S,ee).normalize(),f.push(_.x,_.y,_.z),d.push(k,1-M),L.push(p++)}g.push(L)}for(let C=0;C<r;C++)for(let L=0;L<s;L++){const M=g[L][C],E=g[L+1][C],N=g[L+1][C+1],k=g[L][C+1];h.push(M,E,k),h.push(E,N,k),w+=6}c.addGroup(m,w,0),m+=w}function x(_){const b=p,w=new De,S=new K;let C=0;const L=_===!0?e:n,M=_===!0?1:-1;for(let N=1;N<=r;N++)u.push(0,v*M,0),f.push(0,M,0),d.push(.5,.5),p++;const E=p;for(let N=0;N<=r;N++){const F=N/r*l+o,V=Math.cos(F),ee=Math.sin(F);S.x=L*ee,S.y=v*M,S.z=L*V,u.push(S.x,S.y,S.z),f.push(0,M,0),w.x=V*.5+.5,w.y=ee*.5*M+.5,d.push(w.x,w.y),p++}for(let N=0;N<r;N++){const k=b+N,F=E+N;_===!0?h.push(F,F+1,k):h.push(F+1,F,k),C+=3}c.addGroup(m,C,_===!0?1:2),m+=C}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Uy(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}},Fy=class Oy extends Ih{constructor(e=1,n=1,i=32,r=1,s=!1,a=0,o=Math.PI*2){super(0,e,n,i,r,s,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:n,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:a,thetaLength:o}}static fromJSON(e){return new Oy(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}},Sa=class zy extends Lt{constructor(e=[],n=[],i=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:n,radius:i,detail:r};const s=[],a=[];o(r),c(i),h(),this.setAttribute("position",new ht(s,3)),this.setAttribute("normal",new ht(s.slice(),3)),this.setAttribute("uv",new ht(a,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function o(y){const x=new K,_=new K,b=new K;for(let w=0;w<n.length;w+=3)d(n[w+0],x),d(n[w+1],_),d(n[w+2],b),l(x,_,b,y)}function l(y,x,_,b){const w=b+1,S=[];for(let C=0;C<=w;C++){S[C]=[];const L=y.clone().lerp(_,C/w),M=x.clone().lerp(_,C/w),E=w-C;for(let N=0;N<=E;N++)N===0&&C===w?S[C][N]=L:S[C][N]=L.clone().lerp(M,N/E)}for(let C=0;C<w;C++)for(let L=0;L<2*(w-C)-1;L++){const M=Math.floor(L/2);L%2===0?(f(S[C][M+1]),f(S[C+1][M]),f(S[C][M])):(f(S[C][M+1]),f(S[C+1][M+1]),f(S[C+1][M]))}}function c(y){const x=new K;for(let _=0;_<s.length;_+=3)x.x=s[_+0],x.y=s[_+1],x.z=s[_+2],x.normalize().multiplyScalar(y),s[_+0]=x.x,s[_+1]=x.y,s[_+2]=x.z}function h(){const y=new K;for(let x=0;x<s.length;x+=3){y.x=s[x+0],y.y=s[x+1],y.z=s[x+2];const _=v(y)/2/Math.PI+.5,b=m(y)/Math.PI+.5;a.push(_,1-b)}p(),u()}function u(){for(let y=0;y<a.length;y+=6){const x=a[y+0],_=a[y+2],b=a[y+4],w=Math.max(x,_,b),S=Math.min(x,_,b);w>.9&&S<.1&&(x<.2&&(a[y+0]+=1),_<.2&&(a[y+2]+=1),b<.2&&(a[y+4]+=1))}}function f(y){s.push(y.x,y.y,y.z)}function d(y,x){const _=y*3;x.x=e[_+0],x.y=e[_+1],x.z=e[_+2]}function p(){const y=new K,x=new K,_=new K,b=new K,w=new De,S=new De,C=new De;for(let L=0,M=0;L<s.length;L+=9,M+=6){y.set(s[L+0],s[L+1],s[L+2]),x.set(s[L+3],s[L+4],s[L+5]),_.set(s[L+6],s[L+7],s[L+8]),w.set(a[M+0],a[M+1]),S.set(a[M+2],a[M+3]),C.set(a[M+4],a[M+5]),b.copy(y).add(x).add(_).divideScalar(3);const E=v(b);g(w,M+0,y,E),g(S,M+2,x,E),g(C,M+4,_,E)}}function g(y,x,_,b){b<0&&y.x===1&&(a[x]=y.x-1),_.x===0&&_.z===0&&(a[x]=b/2/Math.PI+.5)}function v(y){return Math.atan2(y.z,-y.x)}function m(y){return Math.atan2(-y.y,Math.sqrt(y.x*y.x+y.z*y.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new zy(e.vertices,e.indices,e.radius,e.details)}},Gy=class Vy extends Sa{constructor(e=1,n=0){const i=(1+Math.sqrt(5))/2,r=1/i,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,a,e,n),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:n}}static fromJSON(e){return new Vy(e.radius,e.detail)}};const jl=new K,Jl=new K,gu=new K,Kl=new es;let Hy=class extends Lt{constructor(e=null,n=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:n},e!==null){const r=Math.pow(10,4),s=Math.cos(rs*n),a=e.getIndex(),o=e.getAttribute("position"),l=a?a.count:o.count,c=[0,0,0],h=["a","b","c"],u=new Array(3),f={},d=[];for(let p=0;p<l;p+=3){a?(c[0]=a.getX(p),c[1]=a.getX(p+1),c[2]=a.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:g,b:v,c:m}=Kl;if(g.fromBufferAttribute(o,c[0]),v.fromBufferAttribute(o,c[1]),m.fromBufferAttribute(o,c[2]),Kl.getNormal(gu),u[0]=`${Math.round(g.x*r)},${Math.round(g.y*r)},${Math.round(g.z*r)}`,u[1]=`${Math.round(v.x*r)},${Math.round(v.y*r)},${Math.round(v.z*r)}`,u[2]=`${Math.round(m.x*r)},${Math.round(m.y*r)},${Math.round(m.z*r)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let y=0;y<3;y++){const x=(y+1)%3,_=u[y],b=u[x],w=Kl[h[y]],S=Kl[h[x]],C=`${_}_${b}`,L=`${b}_${_}`;L in f&&f[L]?(gu.dot(f[L].normal)<=s&&(d.push(w.x,w.y,w.z),d.push(S.x,S.y,S.z)),f[L]=null):C in f||(f[C]={index0:c[y],index1:c[x],normal:gu.clone()})}}for(const p in f)if(f[p]){const{index0:g,index1:v}=f[p];jl.fromBufferAttribute(o,g),Jl.fromBufferAttribute(o,v),d.push(jl.x,jl.y,jl.z),d.push(Jl.x,Jl.y,Jl.z)}this.setAttribute("position",new ht(d,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}},os=class extends mo{constructor(e){super(e),this.uuid=qn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const n=[];for(let i=0,r=this.holes.length;i<r;i++)n[i]=this.holes[i].getPoints(e);return n}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let n=0,i=e.holes.length;n<i;n++){const r=e.holes[n];this.holes.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let n=0,i=this.holes.length;n<i;n++){const r=this.holes[n];e.holes.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let n=0,i=e.holes.length;n<i;n++){const r=e.holes[n];this.holes.push(new mo().fromJSON(r))}return this}};const pE={triangulate:function(t,e,n=2){const i=e&&e.length,r=i?e[0]*n:t.length;let s=ky(t,0,r,n,!0);const a=[];if(!s||s.next===s.prev)return a;let o,l,c,h,u,f,d;if(i&&(s=xE(t,e,s,n)),t.length>80*n){o=c=t[0],l=h=t[1];for(let p=n;p<r;p+=n)u=t[p],f=t[p+1],u<o&&(o=u),f<l&&(l=f),u>c&&(c=u),f>h&&(h=f);d=Math.max(c-o,h-l),d=d!==0?32767/d:0}return vo(s,a,n,o,l,d,0),a}};function ky(t,e,n,i,r){let s,a;if(r===PE(t,e,n,i)>0)for(s=e;s<n;s+=i)a=Lm(s,t[s],t[s+1],a);else for(s=n-i;s>=e;s-=i)a=Lm(s,t[s],t[s+1],a);return a&&Dh(a,a.next)&&(yo(a),a=a.next),a}function hs(t,e){if(!t)return t;e||(e=t);let n=t,i;do if(i=!1,!n.steiner&&(Dh(n,n.next)||$t(n.prev,n,n.next)===0)){if(yo(n),n=e=n.prev,n===n.next)break;i=!0}else n=n.next;while(i||n!==e);return e}function vo(t,e,n,i,r,s,a){if(!t)return;!a&&s&&SE(t,i,r,s);let o=t,l,c;for(;t.prev!==t.next;){if(l=t.prev,c=t.next,s?vE(t,i,r,s):mE(t)){e.push(l.i/n|0),e.push(t.i/n|0),e.push(c.i/n|0),yo(t),t=c.next,o=c.next;continue}if(t=c,t===o){a?a===1?(t=gE(hs(t),e,n),vo(t,e,n,i,r,s,2)):a===2&&yE(t,e,n,i,r,s):vo(hs(t),e,n,i,r,s,1);break}}}function mE(t){const e=t.prev,n=t,i=t.next;if($t(e,n,i)>=0)return!1;const r=e.x,s=n.x,a=i.x,o=e.y,l=n.y,c=i.y,h=r<s?r<a?r:a:s<a?s:a,u=o<l?o<c?o:c:l<c?l:c,f=r>s?r>a?r:a:s>a?s:a,d=o>l?o>c?o:c:l>c?l:c;let p=i.next;for(;p!==e;){if(p.x>=h&&p.x<=f&&p.y>=u&&p.y<=d&&Zs(r,o,s,l,a,c,p.x,p.y)&&$t(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function vE(t,e,n,i){const r=t.prev,s=t,a=t.next;if($t(r,s,a)>=0)return!1;const o=r.x,l=s.x,c=a.x,h=r.y,u=s.y,f=a.y,d=o<l?o<c?o:c:l<c?l:c,p=h<u?h<f?h:f:u<f?u:f,g=o>l?o>c?o:c:l>c?l:c,v=h>u?h>f?h:f:u>f?u:f,m=Sf(d,p,e,n,i),y=Sf(g,v,e,n,i);let x=t.prevZ,_=t.nextZ;for(;x&&x.z>=m&&_&&_.z<=y;){if(x.x>=d&&x.x<=g&&x.y>=p&&x.y<=v&&x!==r&&x!==a&&Zs(o,h,l,u,c,f,x.x,x.y)&&$t(x.prev,x,x.next)>=0||(x=x.prevZ,_.x>=d&&_.x<=g&&_.y>=p&&_.y<=v&&_!==r&&_!==a&&Zs(o,h,l,u,c,f,_.x,_.y)&&$t(_.prev,_,_.next)>=0))return!1;_=_.nextZ}for(;x&&x.z>=m;){if(x.x>=d&&x.x<=g&&x.y>=p&&x.y<=v&&x!==r&&x!==a&&Zs(o,h,l,u,c,f,x.x,x.y)&&$t(x.prev,x,x.next)>=0)return!1;x=x.prevZ}for(;_&&_.z<=y;){if(_.x>=d&&_.x<=g&&_.y>=p&&_.y<=v&&_!==r&&_!==a&&Zs(o,h,l,u,c,f,_.x,_.y)&&$t(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}function gE(t,e,n){let i=t;do{const r=i.prev,s=i.next.next;!Dh(r,s)&&Wy(r,i,i.next,s)&&go(r,s)&&go(s,r)&&(e.push(r.i/n|0),e.push(i.i/n|0),e.push(s.i/n|0),yo(i),yo(i.next),i=t=s),i=i.next}while(i!==t);return hs(i)}function yE(t,e,n,i,r,s){let a=t;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&AE(a,o)){let l=Xy(a,o);a=hs(a,a.next),l=hs(l,l.next),vo(a,e,n,i,r,s,0),vo(l,e,n,i,r,s,0);return}o=o.next}a=a.next}while(a!==t)}function xE(t,e,n,i){const r=[];let s,a,o,l,c;for(s=0,a=e.length;s<a;s++)o=e[s]*i,l=s<a-1?e[s+1]*i:t.length,c=ky(t,o,l,i,!1),c===c.next&&(c.steiner=!0),r.push(TE(c));for(r.sort(_E),s=0;s<r.length;s++)n=ME(r[s],n);return n}function _E(t,e){return t.x-e.x}function ME(t,e){const n=bE(t,e);if(!n)return e;const i=Xy(n,t);return hs(i,i.next),hs(n,n.next)}function bE(t,e){let n=e,i=-1/0,r;const s=t.x,a=t.y;do{if(a<=n.y&&a>=n.next.y&&n.next.y!==n.y){const f=n.x+(a-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(f<=s&&f>i&&(i=f,r=n.x<n.next.x?n:n.next,f===s))return r}n=n.next}while(n!==e);if(!r)return null;const o=r,l=r.x,c=r.y;let h=1/0,u;n=r;do s>=n.x&&n.x>=l&&s!==n.x&&Zs(a<c?s:i,a,l,c,a<c?i:s,a,n.x,n.y)&&(u=Math.abs(a-n.y)/(s-n.x),go(n,t)&&(u<h||u===h&&(n.x>r.x||n.x===r.x&&wE(r,n)))&&(r=n,h=u)),n=n.next;while(n!==o);return r}function wE(t,e){return $t(t.prev,t,e.prev)<0&&$t(e.next,t,t.next)<0}function SE(t,e,n,i){let r=t;do r.z===0&&(r.z=Sf(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,EE(r)}function EE(t){let e,n,i,r,s,a,o,l,c=1;do{for(n=t,t=null,s=null,a=0;n;){for(a++,i=n,o=0,e=0;e<c&&(o++,i=i.nextZ,!!i);e++);for(l=c;o>0||l>0&&i;)o!==0&&(l===0||!i||n.z<=i.z)?(r=n,n=n.nextZ,o--):(r=i,i=i.nextZ,l--),s?s.nextZ=r:t=r,r.prevZ=s,s=r;n=i}s.nextZ=null,c*=2}while(a>1);return t}function Sf(t,e,n,i,r){return t=(t-n)*r|0,e=(e-i)*r|0,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t|e<<1}function TE(t){let e=t,n=t;do(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next;while(e!==t);return n}function Zs(t,e,n,i,r,s,a,o){return(r-a)*(e-o)>=(t-a)*(s-o)&&(t-a)*(i-o)>=(n-a)*(e-o)&&(n-a)*(s-o)>=(r-a)*(i-o)}function AE(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!CE(t,e)&&(go(t,e)&&go(e,t)&&RE(t,e)&&($t(t.prev,t,e.prev)||$t(t,e.prev,e))||Dh(t,e)&&$t(t.prev,t,t.next)>0&&$t(e.prev,e,e.next)>0)}function $t(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Dh(t,e){return t.x===e.x&&t.y===e.y}function Wy(t,e,n,i){const r=ec($t(t,e,n)),s=ec($t(t,e,i)),a=ec($t(n,i,t)),o=ec($t(n,i,e));return!!(r!==s&&a!==o||r===0&&Ql(t,n,e)||s===0&&Ql(t,i,e)||a===0&&Ql(n,t,i)||o===0&&Ql(n,e,i))}function Ql(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function ec(t){return t>0?1:t<0?-1:0}function CE(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Wy(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}function go(t,e){return $t(t.prev,t,t.next)<0?$t(t,e,t.next)>=0&&$t(t,t.prev,e)>=0:$t(t,e,t.prev)<0||$t(t,t.next,e)<0}function RE(t,e){let n=t,i=!1;const r=(t.x+e.x)/2,s=(t.y+e.y)/2;do n.y>s!=n.next.y>s&&n.next.y!==n.y&&r<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next;while(n!==t);return i}function Xy(t,e){const n=new Ef(t.i,t.x,t.y),i=new Ef(e.i,e.x,e.y),r=t.next,s=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,s.next=i,i.prev=s,i}function Lm(t,e,n,i){const r=new Ef(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function yo(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Ef(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function PE(t,e,n,i){let r=0;for(let s=e,a=n-i;s<n;s+=i)r+=(t[a]-t[s])*(t[s+1]+t[a+1]),a=s;return r}let _r=class qy{static area(e){const n=e.length;let i=0;for(let r=n-1,s=0;s<n;r=s++)i+=e[r].x*e[s].y-e[s].x*e[r].y;return i*.5}static isClockWise(e){return qy.area(e)<0}static triangulateShape(e,n){const i=[],r=[],s=[];Im(e),Dm(i,e);let a=e.length;n.forEach(Im);for(let l=0;l<n.length;l++)r.push(a),a+=n[l].length,Dm(i,n[l]);const o=pE.triangulate(i,r);for(let l=0;l<o.length;l+=3)s.push(o.slice(l,l+3));return s}};function Im(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function Dm(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}let $y=class Yy extends Lt{constructor(e=new os([new De(.5,.5),new De(-.5,.5),new De(-.5,-.5),new De(.5,-.5)]),n={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:n},e=Array.isArray(e)?e:[e];const i=this,r=[],s=[];for(let o=0,l=e.length;o<l;o++){const c=e[o];a(c)}this.setAttribute("position",new ht(r,3)),this.setAttribute("uv",new ht(s,2)),this.computeVertexNormals();function a(o){const l=[],c=n.curveSegments!==void 0?n.curveSegments:12,h=n.steps!==void 0?n.steps:1,u=n.depth!==void 0?n.depth:1;let f=n.bevelEnabled!==void 0?n.bevelEnabled:!0,d=n.bevelThickness!==void 0?n.bevelThickness:.2,p=n.bevelSize!==void 0?n.bevelSize:d-.1,g=n.bevelOffset!==void 0?n.bevelOffset:0,v=n.bevelSegments!==void 0?n.bevelSegments:3;const m=n.extrudePath,y=n.UVGenerator!==void 0?n.UVGenerator:LE;let x,_=!1,b,w,S,C;m&&(x=m.getSpacedPoints(h),_=!0,f=!1,b=m.computeFrenetFrames(h,!1),w=new K,S=new K,C=new K),f||(v=0,d=0,p=0,g=0);const L=o.extractPoints(c);let M=L.shape;const E=L.holes;if(!_r.isClockWise(M)){M=M.reverse();for(let X=0,pe=E.length;X<pe;X++){const he=E[X];_r.isClockWise(he)&&(E[X]=he.reverse())}}const k=_r.triangulateShape(M,E),F=M;for(let X=0,pe=E.length;X<pe;X++){const he=E[X];M=M.concat(he)}function V(X,pe,he){return pe||console.error("THREE.ExtrudeGeometry: vec does not exist"),X.clone().addScaledVector(pe,he)}const ee=M.length,R=k.length;function T(X,pe,he){let ce,oe,ze;const Te=X.x-pe.x,z=X.y-pe.y,I=he.x-X.x,ue=he.y-X.y,we=Te*Te+z*z,ve=Te*ue-z*I;if(Math.abs(ve)>Number.EPSILON){const ge=Math.sqrt(we),ne=Math.sqrt(I*I+ue*ue),ye=pe.x-z/ge,xe=pe.y+Te/ge,Fe=he.x-ue/ne,Pe=he.y+I/ne,Ee=((Fe-ye)*ue-(Pe-xe)*I)/(Te*ue-z*I);ce=ye+Te*Ee-X.x,oe=xe+z*Ee-X.y;const it=ce*ce+oe*oe;if(it<=2)return new De(ce,oe);ze=Math.sqrt(it/2)}else{let ge=!1;Te>Number.EPSILON?I>Number.EPSILON&&(ge=!0):Te<-Number.EPSILON?I<-Number.EPSILON&&(ge=!0):Math.sign(z)===Math.sign(ue)&&(ge=!0),ge?(ce=-z,oe=Te,ze=Math.sqrt(we)):(ce=Te,oe=z,ze=Math.sqrt(we/2))}return new De(ce/ze,oe/ze)}const H=[];for(let X=0,pe=F.length,he=pe-1,ce=X+1;X<pe;X++,he++,ce++)he===pe&&(he=0),ce===pe&&(ce=0),H[X]=T(F[X],F[he],F[ce]);const O=[];let B,q=H.concat();for(let X=0,pe=E.length;X<pe;X++){const he=E[X];B=[];for(let ce=0,oe=he.length,ze=oe-1,Te=ce+1;ce<oe;ce++,ze++,Te++)ze===oe&&(ze=0),Te===oe&&(Te=0),B[ce]=T(he[ce],he[ze],he[Te]);O.push(B),q=q.concat(B)}for(let X=0;X<v;X++){const pe=X/v,he=d*Math.cos(pe*Math.PI/2),ce=p*Math.sin(pe*Math.PI/2)+g;for(let oe=0,ze=F.length;oe<ze;oe++){const Te=V(F[oe],H[oe],ce);$(Te.x,Te.y,-he)}for(let oe=0,ze=E.length;oe<ze;oe++){const Te=E[oe];B=O[oe];for(let z=0,I=Te.length;z<I;z++){const ue=V(Te[z],B[z],ce);$(ue.x,ue.y,-he)}}}const G=p+g;for(let X=0;X<ee;X++){const pe=f?V(M[X],q[X],G):M[X];_?(S.copy(b.normals[0]).multiplyScalar(pe.x),w.copy(b.binormals[0]).multiplyScalar(pe.y),C.copy(x[0]).add(S).add(w),$(C.x,C.y,C.z)):$(pe.x,pe.y,0)}for(let X=1;X<=h;X++)for(let pe=0;pe<ee;pe++){const he=f?V(M[pe],q[pe],G):M[pe];_?(S.copy(b.normals[X]).multiplyScalar(he.x),w.copy(b.binormals[X]).multiplyScalar(he.y),C.copy(x[X]).add(S).add(w),$(C.x,C.y,C.z)):$(he.x,he.y,u/h*X)}for(let X=v-1;X>=0;X--){const pe=X/v,he=d*Math.cos(pe*Math.PI/2),ce=p*Math.sin(pe*Math.PI/2)+g;for(let oe=0,ze=F.length;oe<ze;oe++){const Te=V(F[oe],H[oe],ce);$(Te.x,Te.y,u+he)}for(let oe=0,ze=E.length;oe<ze;oe++){const Te=E[oe];B=O[oe];for(let z=0,I=Te.length;z<I;z++){const ue=V(Te[z],B[z],ce);_?$(ue.x,ue.y+x[h-1].y,x[h-1].x+he):$(ue.x,ue.y,u+he)}}}A(),U();function A(){const X=r.length/3;if(f){let pe=0,he=ee*pe;for(let ce=0;ce<R;ce++){const oe=k[ce];ie(oe[2]+he,oe[1]+he,oe[0]+he)}pe=h+v*2,he=ee*pe;for(let ce=0;ce<R;ce++){const oe=k[ce];ie(oe[0]+he,oe[1]+he,oe[2]+he)}}else{for(let pe=0;pe<R;pe++){const he=k[pe];ie(he[2],he[1],he[0])}for(let pe=0;pe<R;pe++){const he=k[pe];ie(he[0]+ee*h,he[1]+ee*h,he[2]+ee*h)}}i.addGroup(X,r.length/3-X,0)}function U(){const X=r.length/3;let pe=0;J(F,pe),pe+=F.length;for(let he=0,ce=E.length;he<ce;he++){const oe=E[he];J(oe,pe),pe+=oe.length}i.addGroup(X,r.length/3-X,1)}function J(X,pe){let he=X.length;for(;--he>=0;){const ce=he;let oe=he-1;oe<0&&(oe=X.length-1);for(let ze=0,Te=h+v*2;ze<Te;ze++){const z=ee*ze,I=ee*(ze+1),ue=pe+ce+z,we=pe+oe+z,ve=pe+oe+I,ge=pe+ce+I;re(ue,we,ve,ge)}}}function $(X,pe,he){l.push(X),l.push(pe),l.push(he)}function ie(X,pe,he){de(X),de(pe),de(he);const ce=r.length/3,oe=y.generateTopUV(i,r,ce-3,ce-2,ce-1);me(oe[0]),me(oe[1]),me(oe[2])}function re(X,pe,he,ce){de(X),de(pe),de(ce),de(pe),de(he),de(ce);const oe=r.length/3,ze=y.generateSideWallUV(i,r,oe-6,oe-3,oe-2,oe-1);me(ze[0]),me(ze[1]),me(ze[3]),me(ze[1]),me(ze[2]),me(ze[3])}function de(X){r.push(l[X*3+0]),r.push(l[X*3+1]),r.push(l[X*3+2])}function me(X){s.push(X.x),s.push(X.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),n=this.parameters.shapes,i=this.parameters.options;return IE(n,i,e)}static fromJSON(e,n){const i=[];for(let s=0,a=e.shapes.length;s<a;s++){const o=n[e.shapes[s]];i.push(o)}const r=e.options.extrudePath;return r!==void 0&&(e.options.extrudePath=new Pc[r.type]().fromJSON(r)),new Yy(i,e.options)}};const LE={generateTopUV:function(t,e,n,i,r){const s=e[n*3],a=e[n*3+1],o=e[i*3],l=e[i*3+1],c=e[r*3],h=e[r*3+1];return[new De(s,a),new De(o,l),new De(c,h)]},generateSideWallUV:function(t,e,n,i,r,s){const a=e[n*3],o=e[n*3+1],l=e[n*3+2],c=e[i*3],h=e[i*3+1],u=e[i*3+2],f=e[r*3],d=e[r*3+1],p=e[r*3+2],g=e[s*3],v=e[s*3+1],m=e[s*3+2];return Math.abs(o-h)<Math.abs(a-c)?[new De(a,1-l),new De(c,1-u),new De(f,1-p),new De(g,1-m)]:[new De(o,1-l),new De(h,1-u),new De(d,1-p),new De(v,1-m)]}};function IE(t,e,n){if(n.shapes=[],Array.isArray(t))for(let i=0,r=t.length;i<r;i++){const s=t[i];n.shapes.push(s.uuid)}else n.shapes.push(t.uuid);return n.options=Object.assign({},e),e.extrudePath!==void 0&&(n.options.extrudePath=e.extrudePath.toJSON()),n}let Zy=class jy extends Sa{constructor(e=1,n=0){const i=(1+Math.sqrt(5))/2,r=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,s,e,n),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:n}}static fromJSON(e){return new jy(e.radius,e.detail)}},jd=class Jy extends Sa{constructor(e=1,n=0){const i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(i,r,e,n),this.type="OctahedronGeometry",this.parameters={radius:e,detail:n}}static fromJSON(e){return new Jy(e.radius,e.detail)}},Ky=class Qy extends Lt{constructor(e=.5,n=1,i=32,r=1,s=0,a=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:n,thetaSegments:i,phiSegments:r,thetaStart:s,thetaLength:a},i=Math.max(3,i),r=Math.max(1,r);const o=[],l=[],c=[],h=[];let u=e;const f=(n-e)/r,d=new K,p=new De;for(let g=0;g<=r;g++){for(let v=0;v<=i;v++){const m=s+v/i*a;d.x=u*Math.cos(m),d.y=u*Math.sin(m),l.push(d.x,d.y,d.z),c.push(0,0,1),p.x=(d.x/n+1)/2,p.y=(d.y/n+1)/2,h.push(p.x,p.y)}u+=f}for(let g=0;g<r;g++){const v=g*(i+1);for(let m=0;m<i;m++){const y=m+v,x=y,_=y+i+1,b=y+i+2,w=y+1;o.push(x,_,w),o.push(_,b,w)}}this.setIndex(o),this.setAttribute("position",new ht(l,3)),this.setAttribute("normal",new ht(c,3)),this.setAttribute("uv",new ht(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Qy(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}},e0=class t0 extends Lt{constructor(e=new os([new De(0,.5),new De(-.5,-.5),new De(.5,-.5)]),n=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:n};const i=[],r=[],s=[],a=[];let o=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let h=0;h<e.length;h++)c(e[h]),this.addGroup(o,l,h),o+=l,l=0;this.setIndex(i),this.setAttribute("position",new ht(r,3)),this.setAttribute("normal",new ht(s,3)),this.setAttribute("uv",new ht(a,2));function c(h){const u=r.length/3,f=h.extractPoints(n);let d=f.shape;const p=f.holes;_r.isClockWise(d)===!1&&(d=d.reverse());for(let v=0,m=p.length;v<m;v++){const y=p[v];_r.isClockWise(y)===!0&&(p[v]=y.reverse())}const g=_r.triangulateShape(d,p);for(let v=0,m=p.length;v<m;v++){const y=p[v];d=d.concat(y)}for(let v=0,m=d.length;v<m;v++){const y=d[v];r.push(y.x,y.y,0),s.push(0,0,1),a.push(y.x,y.y)}for(let v=0,m=g.length;v<m;v++){const y=g[v],x=y[0]+u,_=y[1]+u,b=y[2]+u;i.push(x,_,b),l+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),n=this.parameters.shapes;return DE(n,e)}static fromJSON(e,n){const i=[];for(let r=0,s=e.shapes.length;r<s;r++){const a=n[e.shapes[r]];i.push(a)}return new t0(i,e.curveSegments)}};function DE(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}let Jd=class n0 extends Lt{constructor(e=1,n=32,i=16,r=0,s=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:n,heightSegments:i,phiStart:r,phiLength:s,thetaStart:a,thetaLength:o},n=Math.max(3,Math.floor(n)),i=Math.max(2,Math.floor(i));const l=Math.min(a+o,Math.PI);let c=0;const h=[],u=new K,f=new K,d=[],p=[],g=[],v=[];for(let m=0;m<=i;m++){const y=[],x=m/i;let _=0;m===0&&a===0?_=.5/n:m===i&&l===Math.PI&&(_=-.5/n);for(let b=0;b<=n;b++){const w=b/n;u.x=-e*Math.cos(r+w*s)*Math.sin(a+x*o),u.y=e*Math.cos(a+x*o),u.z=e*Math.sin(r+w*s)*Math.sin(a+x*o),p.push(u.x,u.y,u.z),f.copy(u).normalize(),g.push(f.x,f.y,f.z),v.push(w+_,1-x),y.push(c++)}h.push(y)}for(let m=0;m<i;m++)for(let y=0;y<n;y++){const x=h[m][y+1],_=h[m][y],b=h[m+1][y],w=h[m+1][y+1];(m!==0||a>0)&&d.push(x,_,w),(m!==i-1||l<Math.PI)&&d.push(_,b,w)}this.setIndex(d),this.setAttribute("position",new ht(p,3)),this.setAttribute("normal",new ht(g,3)),this.setAttribute("uv",new ht(v,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new n0(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}},i0=class r0 extends Sa{constructor(e=1,n=0){const i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];super(i,r,e,n),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:n}}static fromJSON(e){return new r0(e.radius,e.detail)}},s0=class a0 extends Lt{constructor(e=1,n=.4,i=12,r=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:n,radialSegments:i,tubularSegments:r,arc:s},i=Math.floor(i),r=Math.floor(r);const a=[],o=[],l=[],c=[],h=new K,u=new K,f=new K;for(let d=0;d<=i;d++)for(let p=0;p<=r;p++){const g=p/r*s,v=d/i*Math.PI*2;u.x=(e+n*Math.cos(v))*Math.cos(g),u.y=(e+n*Math.cos(v))*Math.sin(g),u.z=n*Math.sin(v),o.push(u.x,u.y,u.z),h.x=e*Math.cos(g),h.y=e*Math.sin(g),f.subVectors(u,h).normalize(),l.push(f.x,f.y,f.z),c.push(p/r),c.push(d/i)}for(let d=1;d<=i;d++)for(let p=1;p<=r;p++){const g=(r+1)*d+p-1,v=(r+1)*(d-1)+p-1,m=(r+1)*(d-1)+p,y=(r+1)*d+p;a.push(g,v,y),a.push(v,m,y)}this.setIndex(a),this.setAttribute("position",new ht(o,3)),this.setAttribute("normal",new ht(l,3)),this.setAttribute("uv",new ht(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new a0(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}},o0=class l0 extends Lt{constructor(e=1,n=.4,i=64,r=8,s=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:n,tubularSegments:i,radialSegments:r,p:s,q:a},i=Math.floor(i),r=Math.floor(r);const o=[],l=[],c=[],h=[],u=new K,f=new K,d=new K,p=new K,g=new K,v=new K,m=new K;for(let x=0;x<=i;++x){const _=x/i*s*Math.PI*2;y(_,s,a,e,d),y(_+.01,s,a,e,p),v.subVectors(p,d),m.addVectors(p,d),g.crossVectors(v,m),m.crossVectors(g,v),g.normalize(),m.normalize();for(let b=0;b<=r;++b){const w=b/r*Math.PI*2,S=-n*Math.cos(w),C=n*Math.sin(w);u.x=d.x+(S*m.x+C*g.x),u.y=d.y+(S*m.y+C*g.y),u.z=d.z+(S*m.z+C*g.z),l.push(u.x,u.y,u.z),f.subVectors(u,d).normalize(),c.push(f.x,f.y,f.z),h.push(x/i),h.push(b/r)}}for(let x=1;x<=i;x++)for(let _=1;_<=r;_++){const b=(r+1)*(x-1)+(_-1),w=(r+1)*x+(_-1),S=(r+1)*x+_,C=(r+1)*(x-1)+_;o.push(b,w,C),o.push(w,S,C)}this.setIndex(o),this.setAttribute("position",new ht(l,3)),this.setAttribute("normal",new ht(c,3)),this.setAttribute("uv",new ht(h,2));function y(x,_,b,w,S){const C=Math.cos(x),L=Math.sin(x),M=b/_*x,E=Math.cos(M);S.x=w*(2+E)*.5*C,S.y=w*(2+E)*L*.5,S.z=w*Math.sin(M)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new l0(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}},c0=class h0 extends Lt{constructor(e=new $d(new K(-1,-1,0),new K(-1,1,0),new K(1,1,0)),n=64,i=1,r=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:n,radius:i,radialSegments:r,closed:s};const a=e.computeFrenetFrames(n,s);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const o=new K,l=new K,c=new De;let h=new K;const u=[],f=[],d=[],p=[];g(),this.setIndex(p),this.setAttribute("position",new ht(u,3)),this.setAttribute("normal",new ht(f,3)),this.setAttribute("uv",new ht(d,2));function g(){for(let x=0;x<n;x++)v(x);v(s===!1?n:0),y(),m()}function v(x){h=e.getPointAt(x/n,h);const _=a.normals[x],b=a.binormals[x];for(let w=0;w<=r;w++){const S=w/r*Math.PI*2,C=Math.sin(S),L=-Math.cos(S);l.x=L*_.x+C*b.x,l.y=L*_.y+C*b.y,l.z=L*_.z+C*b.z,l.normalize(),f.push(l.x,l.y,l.z),o.x=h.x+i*l.x,o.y=h.y+i*l.y,o.z=h.z+i*l.z,u.push(o.x,o.y,o.z)}}function m(){for(let x=1;x<=n;x++)for(let _=1;_<=r;_++){const b=(r+1)*(x-1)+(_-1),w=(r+1)*x+(_-1),S=(r+1)*x+_,C=(r+1)*(x-1)+_;p.push(b,w,C),p.push(w,S,C)}}function y(){for(let x=0;x<=n;x++)for(let _=0;_<=r;_++)c.x=x/n,c.y=_/r,d.push(c.x,c.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new h0(new Pc[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}},u0=class extends Lt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const n=[],i=new Set,r=new K,s=new K;if(e.index!==null){const a=e.attributes.position,o=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:o.count,materialIndex:0}]);for(let c=0,h=l.length;c<h;++c){const u=l[c],f=u.start,d=u.count;for(let p=f,g=f+d;p<g;p+=3)for(let v=0;v<3;v++){const m=o.getX(p+v),y=o.getX(p+(v+1)%3);r.fromBufferAttribute(a,m),s.fromBufferAttribute(a,y),Nm(r,s,i)===!0&&(n.push(r.x,r.y,r.z),n.push(s.x,s.y,s.z))}}}else{const a=e.attributes.position;for(let o=0,l=a.count/3;o<l;o++)for(let c=0;c<3;c++){const h=3*o+c,u=3*o+(c+1)%3;r.fromBufferAttribute(a,h),s.fromBufferAttribute(a,u),Nm(r,s,i)===!0&&(n.push(r.x,r.y,r.z),n.push(s.x,s.y,s.z))}}this.setAttribute("position",new ht(n,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}};function Nm(t,e,n){const i=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`,r=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`;return n.has(i)===!0||n.has(r)===!0?!1:(n.add(i),n.add(r),!0)}var Bm=Object.freeze({__proto__:null,BoxGeometry:ul,CapsuleGeometry:Lh,CircleGeometry:Ny,ConeGeometry:Fy,CylinderGeometry:Ih,DodecahedronGeometry:Gy,EdgesGeometry:Hy,ExtrudeGeometry:$y,IcosahedronGeometry:Zy,LatheGeometry:Zd,OctahedronGeometry:jd,PlaneGeometry:Eh,PolyhedronGeometry:Sa,RingGeometry:Ky,ShapeGeometry:e0,SphereGeometry:Jd,TetrahedronGeometry:i0,TorusGeometry:s0,TorusKnotGeometry:o0,TubeGeometry:c0,WireframeGeometry:u0});let f0=class extends En{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new rt(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}},d0=class extends vi{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}},Kd=class extends En{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new rt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new rt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new De(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}},p0=class extends Kd{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new De(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Jt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(n){this.ior=(1+.4*n)/(1-.4*n)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new rt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new rt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new rt(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}},m0=class extends En{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new rt(16777215),this.specular=new rt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new rt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new De(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=cl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}},v0=class extends En{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new rt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new rt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new De(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}},g0=class extends En{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new De(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}},y0=class extends En{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new rt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new rt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new De(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=cl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}};class x0 extends En{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new rt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new De(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}let _0=class extends Nn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}};function ts(t,e,n){return!t||!n&&t.constructor===e?t:typeof e.BYTES_PER_ELEMENT=="number"?new e(t):Array.prototype.slice.call(t)}function M0(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}function b0(t){function e(r,s){return t[r]-t[s]}const n=t.length,i=new Array(n);for(let r=0;r!==n;++r)i[r]=r;return i.sort(e),i}function Tf(t,e,n){const i=t.length,r=new t.constructor(i);for(let s=0,a=0;a!==i;++s){const o=n[s]*e;for(let l=0;l!==e;++l)r[a++]=t[o+l]}return r}function Qd(t,e,n,i){let r=1,s=t[0];for(;s!==void 0&&s[i]===void 0;)s=t[r++];if(s===void 0)return;let a=s[i];if(a!==void 0)if(Array.isArray(a))do a=s[i],a!==void 0&&(e.push(s.time),n.push.apply(n,a)),s=t[r++];while(s!==void 0);else if(a.toArray!==void 0)do a=s[i],a!==void 0&&(e.push(s.time),a.toArray(n,n.length)),s=t[r++];while(s!==void 0);else do a=s[i],a!==void 0&&(e.push(s.time),n.push(a)),s=t[r++];while(s!==void 0)}function NE(t,e,n,i,r=30){const s=t.clone();s.name=e;const a=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],h=c.getValueSize(),u=[],f=[];for(let d=0;d<c.times.length;++d){const p=c.times[d]*r;if(!(p<n||p>=i)){u.push(c.times[d]);for(let g=0;g<h;++g)f.push(c.values[d*h+g])}}u.length!==0&&(c.times=ts(u,c.times.constructor),c.values=ts(f,c.values.constructor),a.push(c))}s.tracks=a;let o=1/0;for(let l=0;l<s.tracks.length;++l)o>s.tracks[l].times[0]&&(o=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*o);return s.resetDuration(),s}function BE(t,e=0,n=t,i=30){i<=0&&(i=30);const r=n.tracks.length,s=e/i;for(let a=0;a<r;++a){const o=n.tracks[a],l=o.ValueTypeName;if(l==="bool"||l==="string")continue;const c=t.tracks.find(function(m){return m.name===o.name&&m.ValueTypeName===l});if(c===void 0)continue;let h=0;const u=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let f=0;const d=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=d/3);const p=o.times.length-1;let g;if(s<=o.times[0]){const m=h,y=u-h;g=o.values.slice(m,y)}else if(s>=o.times[p]){const m=p*u+h,y=m+u-h;g=o.values.slice(m,y)}else{const m=o.createInterpolant(),y=h,x=u-h;m.evaluate(s),g=m.resultBuffer.slice(y,x)}l==="quaternion"&&new wn().fromArray(g).normalize().conjugate().toArray(g);const v=c.times.length;for(let m=0;m<v;++m){const y=m*d+f;if(l==="quaternion")wn.multiplyQuaternionsFlat(c.values,y,g,0,c.values,y);else{const x=d-f*2;for(let _=0;_<x;++_)c.values[y+_]-=g[_]}}}return t.blendMode=Ed,t}const UE={convertArray:ts,isTypedArray:M0,getKeyframeOrder:b0,sortedArray:Tf,flattenJSON:Qd,subclip:NE,makeClipAdditive:BE};let pl=class{constructor(e,n,i,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=r!==void 0?r:new n.constructor(i),this.sampleValues=n,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){const n=this.parameterPositions;let i=this._cachedIndex,r=n[i],s=n[i-1];e:{t:{let a;n:{i:if(!(e<r)){for(let o=i+2;;){if(r===void 0){if(e<s)break i;return i=n.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===o)break;if(s=r,r=n[++i],e<r)break t}a=n.length;break n}if(!(e>=s)){const o=n[1];e<o&&(i=2,s=o);for(let l=i-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===l)break;if(r=s,s=n[--i-1],e>=s)break t}a=i,i=0;break n}break e}for(;i<a;){const o=i+a>>>1;e<n[o]?a=o:i=o+1}if(r=n[i],s=n[i-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(r===void 0)return i=n.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,s,r)}return this.interpolate_(i,s,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const n=this.resultBuffer,i=this.sampleValues,r=this.valueSize,s=e*r;for(let a=0;a!==r;++a)n[a]=i[s+a];return n}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}},w0=class extends pl{constructor(e,n,i,r){super(e,n,i,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Jr,endingEnd:Jr}}intervalChanged_(e,n,i){const r=this.parameterPositions;let s=e-2,a=e+1,o=r[s],l=r[a];if(o===void 0)switch(this.getSettings_().endingStart){case Kr:s=e,o=2*n-i;break;case ao:s=r.length-2,o=n+r[s]-r[s+1];break;default:s=e,o=i}if(l===void 0)switch(this.getSettings_().endingEnd){case Kr:a=e,l=2*i-n;break;case ao:a=1,l=i+r[1]-r[0];break;default:a=e-1,l=n}const c=(i-n)*.5,h=this.valueSize;this._weightPrev=c/(n-o),this._weightNext=c/(l-i),this._offsetPrev=s*h,this._offsetNext=a*h}interpolate_(e,n,i,r){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,c=l-o,h=this._offsetPrev,u=this._offsetNext,f=this._weightPrev,d=this._weightNext,p=(i-n)/(r-n),g=p*p,v=g*p,m=-f*v+2*f*g-f*p,y=(1+f)*v+(-1.5-2*f)*g+(-.5+f)*p+1,x=(-1-d)*v+(1.5+d)*g+.5*p,_=d*v-d*g;for(let b=0;b!==o;++b)s[b]=m*a[h+b]+y*a[c+b]+x*a[l+b]+_*a[u+b];return s}},ep=class extends pl{constructor(e,n,i,r){super(e,n,i,r)}interpolate_(e,n,i,r){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,c=l-o,h=(i-n)/(r-n),u=1-h;for(let f=0;f!==o;++f)s[f]=a[c+f]*u+a[l+f]*h;return s}},S0=class extends pl{constructor(e,n,i,r){super(e,n,i,r)}interpolate_(e){return this.copySampleValue_(e-1)}},Mi=class{constructor(e,n,i,r){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(n===void 0||n.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ts(n,this.TimeBufferType),this.values=ts(i,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const n=e.constructor;let i;if(n.toJSON!==this.toJSON)i=n.toJSON(e);else{i={name:e.name,times:ts(e.times,Array),values:ts(e.values,Array)};const r=e.getInterpolation();r!==e.DefaultInterpolation&&(i.interpolation=r)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new S0(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new ep(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new w0(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let n;switch(e){case ro:n=this.InterpolantFactoryMethodDiscrete;break;case so:n=this.InterpolantFactoryMethodLinear;break;case yc:n=this.InterpolantFactoryMethodSmooth;break}if(n===void 0){const i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(i);return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=n,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ro;case this.InterpolantFactoryMethodLinear:return so;case this.InterpolantFactoryMethodSmooth:return yc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const n=this.times;for(let i=0,r=n.length;i!==r;++i)n[i]+=e}return this}scale(e){if(e!==1){const n=this.times;for(let i=0,r=n.length;i!==r;++i)n[i]*=e}return this}trim(e,n){const i=this.times,r=i.length;let s=0,a=r-1;for(;s!==r&&i[s]<e;)++s;for(;a!==-1&&i[a]>n;)--a;if(++a,s!==0||a!==r){s>=a&&(a=Math.max(a,1),s=a-1);const o=this.getValueSize();this.times=i.slice(s,a),this.values=this.values.slice(s*o,a*o)}return this}validate(){let e=!0;const n=this.getValueSize();n-Math.floor(n)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,r=this.values,s=i.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let o=0;o!==s;o++){const l=i[o];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,l),e=!1;break}if(a!==null&&a>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,l,a),e=!1;break}a=l}if(r!==void 0&&M0(r))for(let o=0,l=r.length;o!==l;++o){const c=r[o];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,c),e=!1;break}}return e}optimize(){const e=this.times.slice(),n=this.values.slice(),i=this.getValueSize(),r=this.getInterpolation()===yc,s=e.length-1;let a=1;for(let o=1;o<s;++o){let l=!1;const c=e[o],h=e[o+1];if(c!==h&&(o!==1||c!==e[0]))if(r)l=!0;else{const u=o*i,f=u-i,d=u+i;for(let p=0;p!==i;++p){const g=n[u+p];if(g!==n[f+p]||g!==n[d+p]){l=!0;break}}}if(l){if(o!==a){e[a]=e[o];const u=o*i,f=a*i;for(let d=0;d!==i;++d)n[f+d]=n[u+d]}++a}}if(s>0){e[a]=e[s];for(let o=s*i,l=a*i,c=0;c!==i;++c)n[l+c]=n[o+c];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=n.slice(0,a*i)):(this.times=e,this.values=n),this}clone(){const e=this.times.slice(),n=this.values.slice(),i=this.constructor,r=new i(this.name,e,n);return r.createInterpolant=this.createInterpolant,r}};Mi.prototype.TimeBufferType=Float32Array;Mi.prototype.ValueBufferType=Float32Array;Mi.prototype.DefaultInterpolation=so;let ys=class extends Mi{};ys.prototype.ValueTypeName="bool";ys.prototype.ValueBufferType=Array;ys.prototype.DefaultInterpolation=ro;ys.prototype.InterpolantFactoryMethodLinear=void 0;ys.prototype.InterpolantFactoryMethodSmooth=void 0;let tp=class extends Mi{};tp.prototype.ValueTypeName="color";let xo=class extends Mi{};xo.prototype.ValueTypeName="number";let E0=class extends pl{constructor(e,n,i,r){super(e,n,i,r)}interpolate_(e,n,i,r){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=(i-n)/(r-n);let c=e*o;for(let h=c+o;c!==h;c+=4)wn.slerpFlat(s,0,a,c-o,a,c,l);return s}},Ea=class extends Mi{InterpolantFactoryMethodLinear(e){return new E0(this.times,this.values,this.getValueSize(),e)}};Ea.prototype.ValueTypeName="quaternion";Ea.prototype.DefaultInterpolation=so;Ea.prototype.InterpolantFactoryMethodSmooth=void 0;let xs=class extends Mi{};xs.prototype.ValueTypeName="string";xs.prototype.ValueBufferType=Array;xs.prototype.DefaultInterpolation=ro;xs.prototype.InterpolantFactoryMethodLinear=void 0;xs.prototype.InterpolantFactoryMethodSmooth=void 0;let _o=class extends Mi{};_o.prototype.ValueTypeName="vector";let Mo=class{constructor(e,n=-1,i,r=_h){this.name=e,this.tracks=i,this.duration=n,this.blendMode=r,this.uuid=qn(),this.duration<0&&this.resetDuration()}static parse(e){const n=[],i=e.tracks,r=1/(e.fps||1);for(let a=0,o=i.length;a!==o;++a)n.push(OE(i[a]).scale(r));const s=new this(e.name,e.duration,n,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const n=[],i=e.tracks,r={name:e.name,duration:e.duration,tracks:n,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,a=i.length;s!==a;++s)n.push(Mi.toJSON(i[s]));return r}static CreateFromMorphTargetSequence(e,n,i,r){const s=n.length,a=[];for(let o=0;o<s;o++){let l=[],c=[];l.push((o+s-1)%s,o,(o+1)%s),c.push(0,1,0);const h=b0(l);l=Tf(l,1,h),c=Tf(c,1,h),!r&&l[0]===0&&(l.push(s),c.push(c[0])),a.push(new xo(".morphTargetInfluences["+n[o].name+"]",l,c).scale(1/i))}return new this(e,-1,a)}static findByName(e,n){let i=e;if(!Array.isArray(e)){const r=e;i=r.geometry&&r.geometry.animations||r.animations}for(let r=0;r<i.length;r++)if(i[r].name===n)return i[r];return null}static CreateClipsFromMorphTargetSequences(e,n,i){const r={},s=/^([\w-]*?)([\d]+)$/;for(let o=0,l=e.length;o<l;o++){const c=e[o],h=c.name.match(s);if(h&&h.length>1){const u=h[1];let f=r[u];f||(r[u]=f=[]),f.push(c)}}const a=[];for(const o in r)a.push(this.CreateFromMorphTargetSequence(o,r[o],n,i));return a}static parseAnimation(e,n){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(u,f,d,p,g){if(d.length!==0){const v=[],m=[];Qd(d,v,m,p),v.length!==0&&g.push(new u(f,v,m))}},r=[],s=e.name||"default",a=e.fps||30,o=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let u=0;u<c.length;u++){const f=c[u].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const d={};let p;for(p=0;p<f.length;p++)if(f[p].morphTargets)for(let g=0;g<f[p].morphTargets.length;g++)d[f[p].morphTargets[g]]=-1;for(const g in d){const v=[],m=[];for(let y=0;y!==f[p].morphTargets.length;++y){const x=f[p];v.push(x.time),m.push(x.morphTarget===g?1:0)}r.push(new xo(".morphTargetInfluence["+g+"]",v,m))}l=d.length*a}else{const d=".bones["+n[u].name+"]";i(_o,d+".position",f,"pos",r),i(Ea,d+".quaternion",f,"rot",r),i(_o,d+".scale",f,"scl",r)}}return r.length===0?null:new this(s,l,r,o)}resetDuration(){const e=this.tracks;let n=0;for(let i=0,r=e.length;i!==r;++i){const s=this.tracks[i];n=Math.max(n,s.times[s.times.length-1])}return this.duration=n,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let n=0;n<this.tracks.length;n++)e=e&&this.tracks[n].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let n=0;n<this.tracks.length;n++)e.push(this.tracks[n].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}};function FE(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return xo;case"vector":case"vector2":case"vector3":case"vector4":return _o;case"color":return tp;case"quaternion":return Ea;case"bool":case"boolean":return ys;case"string":return xs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}function OE(t){if(t.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=FE(t.type);if(t.times===void 0){const n=[],i=[];Qd(t.keys,n,i,"value"),t.times=n,t.values=i}return e.parse!==void 0?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const $i={enabled:!1,files:{},add:function(t,e){this.enabled!==!1&&(this.files[t]=e)},get:function(t){if(this.enabled!==!1)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};let np=class{constructor(e,n,i){const r=this;let s=!1,a=0,o=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=n,this.onError=i,this.itemStart=function(h){o++,s===!1&&r.onStart!==void 0&&r.onStart(h,a,o),s=!0},this.itemEnd=function(h){a++,r.onProgress!==void 0&&r.onProgress(h,a,o),a===o&&(s=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(h){r.onError!==void 0&&r.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,u){return c.push(h,u),this},this.removeHandler=function(h){const u=c.indexOf(h);return u!==-1&&c.splice(u,2),this},this.getHandler=function(h){for(let u=0,f=c.length;u<f;u+=2){const d=c[u],p=c[u+1];if(d.global&&(d.lastIndex=0),d.test(h))return p}return null}}};const T0=new np;let On=class{constructor(e){this.manager=e!==void 0?e:T0,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,n){const i=this;return new Promise(function(r,s){i.load(e,r,n,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}};On.DEFAULT_MATERIAL_NAME="__DEFAULT";const Vi={};class zE extends Error{constructor(e,n){super(e),this.response=n}}let Qi=class extends On{constructor(e){super(e)}load(e,n,i,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=$i.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{n&&n(s),this.manager.itemEnd(e)},0),s;if(Vi[e]!==void 0){Vi[e].push({onLoad:n,onProgress:i,onError:r});return}Vi[e]=[],Vi[e].push({onLoad:n,onProgress:i,onError:r});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,l=this.responseType;fetch(a).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const h=Vi[e],u=c.body.getReader(),f=c.headers.get("Content-Length")||c.headers.get("X-File-Size"),d=f?parseInt(f):0,p=d!==0;let g=0;const v=new ReadableStream({start(m){y();function y(){u.read().then(({done:x,value:_})=>{if(x)m.close();else{g+=_.byteLength;const b=new ProgressEvent("progress",{lengthComputable:p,loaded:g,total:d});for(let w=0,S=h.length;w<S;w++){const C=h[w];C.onProgress&&C.onProgress(b)}m.enqueue(_),y()}})}}});return new Response(v)}else throw new zE(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>new DOMParser().parseFromString(h,o));case"json":return c.json();default:if(o===void 0)return c.text();{const u=/charset="?([^;"\s]*)"?/i.exec(o),f=u&&u[1]?u[1].toLowerCase():void 0,d=new TextDecoder(f);return c.arrayBuffer().then(p=>d.decode(p))}}}).then(c=>{$i.add(e,c);const h=Vi[e];delete Vi[e];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onLoad&&d.onLoad(c)}}).catch(c=>{const h=Vi[e];if(h===void 0)throw this.manager.itemError(e),c;delete Vi[e];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onError&&d.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}};class GE extends On{constructor(e){super(e)}load(e,n,i,r){const s=this,a=new Qi(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(o){try{n(s.parse(JSON.parse(o)))}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},i,r)}parse(e){const n=[];for(let i=0;i<e.length;i++){const r=Mo.parse(e[i]);n.push(r)}return n}}let VE=class extends On{constructor(e){super(e)}load(e,n,i,r){const s=this,a=[],o=new Rh,l=new Qi(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(s.withCredentials);let c=0;function h(u){l.load(e[u],function(f){const d=s.parse(f,!0);a[u]={width:d.width,height:d.height,format:d.format,mipmaps:d.mipmaps},c+=1,c===6&&(d.mipmapCount===1&&(o.minFilter=qt),o.image=a,o.format=d.format,o.needsUpdate=!0,n&&n(o))},i,r)}if(Array.isArray(e))for(let u=0,f=e.length;u<f;++u)h(u);else l.load(e,function(u){const f=s.parse(u,!0);if(f.isCubemap){const d=f.mipmaps.length/f.mipmapCount;for(let p=0;p<d;p++){a[p]={mipmaps:[]};for(let g=0;g<f.mipmapCount;g++)a[p].mipmaps.push(f.mipmaps[p*f.mipmapCount+g]),a[p].format=f.format,a[p].width=f.width,a[p].height=f.height}o.image=a}else o.image.width=f.width,o.image.height=f.height,o.mipmaps=f.mipmaps;f.mipmapCount===1&&(o.minFilter=qt),o.format=f.format,o.needsUpdate=!0,n&&n(o)},i,r);return o}},bo=class extends On{constructor(e){super(e)}load(e,n,i,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=$i.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){n&&n(a),s.manager.itemEnd(e)},0),a;const o=fo("img");function l(){h(),$i.add(e,this),n&&n(this),s.manager.itemEnd(e)}function c(u){h(),r&&r(u),s.manager.itemError(e),s.manager.itemEnd(e)}function h(){o.removeEventListener("load",l,!1),o.removeEventListener("error",c,!1)}return o.addEventListener("load",l,!1),o.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),s.manager.itemStart(e),o.src=e,o}},HE=class extends On{constructor(e){super(e)}load(e,n,i,r){const s=new fl;s.colorSpace=on;const a=new bo(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function l(c){a.load(e[c],function(h){s.images[c]=h,o++,o===6&&(s.needsUpdate=!0,n&&n(s))},void 0,r)}for(let c=0;c<e.length;++c)l(c);return s}},kE=class extends On{constructor(e){super(e)}load(e,n,i,r){const s=this,a=new as,o=new Qi(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(s.withCredentials),o.load(e,function(l){let c;try{c=s.parse(l)}catch(h){if(r!==void 0)r(h);else{console.error(h);return}}c.image!==void 0?a.image=c.image:c.data!==void 0&&(a.image.width=c.width,a.image.height=c.height,a.image.data=c.data),a.wrapS=c.wrapS!==void 0?c.wrapS:bn,a.wrapT=c.wrapT!==void 0?c.wrapT:bn,a.magFilter=c.magFilter!==void 0?c.magFilter:qt,a.minFilter=c.minFilter!==void 0?c.minFilter:qt,a.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.colorSpace!==void 0?a.colorSpace=c.colorSpace:c.encoding!==void 0&&(a.encoding=c.encoding),c.flipY!==void 0&&(a.flipY=c.flipY),c.format!==void 0&&(a.format=c.format),c.type!==void 0&&(a.type=c.type),c.mipmaps!==void 0&&(a.mipmaps=c.mipmaps,a.minFilter=Ti),c.mipmapCount===1&&(a.minFilter=qt),c.generateMipmaps!==void 0&&(a.generateMipmaps=c.generateMipmaps),a.needsUpdate=!0,n&&n(a,c)},i,r),a}},WE=class extends On{constructor(e){super(e)}load(e,n,i,r){const s=new gn,a=new bo(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){s.image=o,s.needsUpdate=!0,n!==void 0&&n(s)},i,r),s}},Lr=class extends Ft{constructor(e,n=1){super(),this.isLight=!0,this.type="Light",this.color=new rt(e),this.intensity=n}dispose(){}copy(e,n){return super.copy(e,n),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const n=super.toJSON(e);return n.object.color=this.color.getHex(),n.object.intensity=this.intensity,this.groundColor!==void 0&&(n.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(n.object.distance=this.distance),this.angle!==void 0&&(n.object.angle=this.angle),this.decay!==void 0&&(n.object.decay=this.decay),this.penumbra!==void 0&&(n.object.penumbra=this.penumbra),this.shadow!==void 0&&(n.object.shadow=this.shadow.toJSON()),n}},A0=class extends Lr{constructor(e,n,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Ft.DEFAULT_UP),this.updateMatrix(),this.groundColor=new rt(n)}copy(e,n){return super.copy(e,n),this.groundColor.copy(e.groundColor),this}};const yu=new Mt,Um=new K,Fm=new K;let ip=class{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new De(512,512),this.map=null,this.mapPass=null,this.matrix=new Mt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new dl,this._frameExtents=new De(1,1),this._viewportCount=1,this._viewports=[new zt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const n=this.camera,i=this.matrix;Um.setFromMatrixPosition(e.matrixWorld),n.position.copy(Um),Fm.setFromMatrixPosition(e.target.matrixWorld),n.lookAt(Fm),n.updateMatrixWorld(),yu.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(yu),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(yu)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}},XE=class extends ip{constructor(){super(new pn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const n=this.camera,i=ta*2*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,s=e.distance||n.far;(i!==n.fov||r!==n.aspect||s!==n.far)&&(n.fov=i,n.aspect=r,n.far=s,n.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}},rp=class extends Lr{constructor(e,n,i=0,r=Math.PI/3,s=0,a=2){super(e,n),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Ft.DEFAULT_UP),this.updateMatrix(),this.target=new Ft,this.distance=i,this.angle=r,this.penumbra=s,this.decay=a,this.map=null,this.shadow=new XE}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,n){return super.copy(e,n),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}};const Om=new Mt,Ha=new K,xu=new K;class qE extends ip{constructor(){super(new pn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new De(4,2),this._viewportCount=6,this._viewports=[new zt(2,1,1,1),new zt(0,1,1,1),new zt(3,1,1,1),new zt(1,1,1,1),new zt(3,0,1,1),new zt(1,0,1,1)],this._cubeDirections=[new K(1,0,0),new K(-1,0,0),new K(0,0,1),new K(0,0,-1),new K(0,1,0),new K(0,-1,0)],this._cubeUps=[new K(0,1,0),new K(0,1,0),new K(0,1,0),new K(0,1,0),new K(0,0,1),new K(0,0,-1)]}updateMatrices(e,n=0){const i=this.camera,r=this.matrix,s=e.distance||i.far;s!==i.far&&(i.far=s,i.updateProjectionMatrix()),Ha.setFromMatrixPosition(e.matrixWorld),i.position.copy(Ha),xu.copy(i.position),xu.add(this._cubeDirections[n]),i.up.copy(this._cubeUps[n]),i.lookAt(xu),i.updateMatrixWorld(),r.makeTranslation(-Ha.x,-Ha.y,-Ha.z),Om.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Om)}}let C0=class extends Lr{constructor(e,n,i=0,r=2){super(e,n),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=r,this.shadow=new qE}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,n){return super.copy(e,n),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}},$E=class extends ip{constructor(){super(new Th(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}},sp=class extends Lr{constructor(e,n){super(e,n),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Ft.DEFAULT_UP),this.updateMatrix(),this.target=new Ft,this.shadow=new $E}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}},ap=class extends Lr{constructor(e,n){super(e,n),this.isAmbientLight=!0,this.type="AmbientLight"}},R0=class extends Lr{constructor(e,n,i=10,r=10){super(e,n),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const n=super.toJSON(e);return n.object.width=this.width,n.object.height=this.height,n}};class P0{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new K)}set(e){for(let n=0;n<9;n++)this.coefficients[n].copy(e[n]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,n){const i=e.x,r=e.y,s=e.z,a=this.coefficients;return n.copy(a[0]).multiplyScalar(.282095),n.addScaledVector(a[1],.488603*r),n.addScaledVector(a[2],.488603*s),n.addScaledVector(a[3],.488603*i),n.addScaledVector(a[4],1.092548*(i*r)),n.addScaledVector(a[5],1.092548*(r*s)),n.addScaledVector(a[6],.315392*(3*s*s-1)),n.addScaledVector(a[7],1.092548*(i*s)),n.addScaledVector(a[8],.546274*(i*i-r*r)),n}getIrradianceAt(e,n){const i=e.x,r=e.y,s=e.z,a=this.coefficients;return n.copy(a[0]).multiplyScalar(.886227),n.addScaledVector(a[1],2*.511664*r),n.addScaledVector(a[2],2*.511664*s),n.addScaledVector(a[3],2*.511664*i),n.addScaledVector(a[4],2*.429043*i*r),n.addScaledVector(a[5],2*.429043*r*s),n.addScaledVector(a[6],.743125*s*s-.247708),n.addScaledVector(a[7],2*.429043*i*s),n.addScaledVector(a[8],.429043*(i*i-r*r)),n}add(e){for(let n=0;n<9;n++)this.coefficients[n].add(e.coefficients[n]);return this}addScaledSH(e,n){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],n);return this}scale(e){for(let n=0;n<9;n++)this.coefficients[n].multiplyScalar(e);return this}lerp(e,n){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],n);return this}equals(e){for(let n=0;n<9;n++)if(!this.coefficients[n].equals(e.coefficients[n]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,n=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(e,n+r*3);return this}toArray(e=[],n=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(e,n+r*3);return e}static getBasisAt(e,n){const i=e.x,r=e.y,s=e.z;n[0]=.282095,n[1]=.488603*r,n[2]=.488603*s,n[3]=.488603*i,n[4]=1.092548*i*r,n[5]=1.092548*r*s,n[6]=.315392*(3*s*s-1),n[7]=1.092548*i*s,n[8]=.546274*(i*i-r*r)}}class L0 extends Lr{constructor(e=new P0,n=1){super(void 0,n),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const n=super.toJSON(e);return n.object.sh=this.sh.toArray(),n}}let I0=class D0 extends On{constructor(e){super(e),this.textures={}}load(e,n,i,r){const s=this,a=new Qi(s.manager);a.setPath(s.path),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(o){try{n(s.parse(JSON.parse(o)))}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},i,r)}parse(e){const n=this.textures;function i(s){return n[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),n[s]}const r=D0.createMaterialFromType(e.type);if(e.uuid!==void 0&&(r.uuid=e.uuid),e.name!==void 0&&(r.name=e.name),e.color!==void 0&&r.color!==void 0&&r.color.setHex(e.color),e.roughness!==void 0&&(r.roughness=e.roughness),e.metalness!==void 0&&(r.metalness=e.metalness),e.sheen!==void 0&&(r.sheen=e.sheen),e.sheenColor!==void 0&&(r.sheenColor=new rt().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(r.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&r.emissive!==void 0&&r.emissive.setHex(e.emissive),e.specular!==void 0&&r.specular!==void 0&&r.specular.setHex(e.specular),e.specularIntensity!==void 0&&(r.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&r.specularColor!==void 0&&r.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(r.shininess=e.shininess),e.clearcoat!==void 0&&(r.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(r.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(r.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(r.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(r.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(r.transmission=e.transmission),e.thickness!==void 0&&(r.thickness=e.thickness),e.attenuationDistance!==void 0&&(r.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&r.attenuationColor!==void 0&&r.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(r.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(r.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(r.fog=e.fog),e.flatShading!==void 0&&(r.flatShading=e.flatShading),e.blending!==void 0&&(r.blending=e.blending),e.combine!==void 0&&(r.combine=e.combine),e.side!==void 0&&(r.side=e.side),e.shadowSide!==void 0&&(r.shadowSide=e.shadowSide),e.opacity!==void 0&&(r.opacity=e.opacity),e.transparent!==void 0&&(r.transparent=e.transparent),e.alphaTest!==void 0&&(r.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(r.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(r.depthFunc=e.depthFunc),e.depthTest!==void 0&&(r.depthTest=e.depthTest),e.depthWrite!==void 0&&(r.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(r.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(r.blendSrc=e.blendSrc),e.blendDst!==void 0&&(r.blendDst=e.blendDst),e.blendEquation!==void 0&&(r.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(r.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(r.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(r.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&r.blendColor!==void 0&&r.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(r.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(r.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(r.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(r.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(r.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(r.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(r.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(r.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(r.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(r.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(r.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(r.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(r.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(r.rotation=e.rotation),e.linewidth!==void 0&&(r.linewidth=e.linewidth),e.dashSize!==void 0&&(r.dashSize=e.dashSize),e.gapSize!==void 0&&(r.gapSize=e.gapSize),e.scale!==void 0&&(r.scale=e.scale),e.polygonOffset!==void 0&&(r.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(r.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(r.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(r.dithering=e.dithering),e.alphaToCoverage!==void 0&&(r.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(r.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(r.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(r.visible=e.visible),e.toneMapped!==void 0&&(r.toneMapped=e.toneMapped),e.userData!==void 0&&(r.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?r.vertexColors=e.vertexColors>0:r.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const a=e.uniforms[s];switch(r.uniforms[s]={},a.type){case"t":r.uniforms[s].value=i(a.value);break;case"c":r.uniforms[s].value=new rt().setHex(a.value);break;case"v2":r.uniforms[s].value=new De().fromArray(a.value);break;case"v3":r.uniforms[s].value=new K().fromArray(a.value);break;case"v4":r.uniforms[s].value=new zt().fromArray(a.value);break;case"m3":r.uniforms[s].value=new Pt().fromArray(a.value);break;case"m4":r.uniforms[s].value=new Mt().fromArray(a.value);break;default:r.uniforms[s].value=a.value}}if(e.defines!==void 0&&(r.defines=e.defines),e.vertexShader!==void 0&&(r.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(r.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(r.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)r.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(r.lights=e.lights),e.clipping!==void 0&&(r.clipping=e.clipping),e.size!==void 0&&(r.size=e.size),e.sizeAttenuation!==void 0&&(r.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(r.map=i(e.map)),e.matcap!==void 0&&(r.matcap=i(e.matcap)),e.alphaMap!==void 0&&(r.alphaMap=i(e.alphaMap)),e.bumpMap!==void 0&&(r.bumpMap=i(e.bumpMap)),e.bumpScale!==void 0&&(r.bumpScale=e.bumpScale),e.normalMap!==void 0&&(r.normalMap=i(e.normalMap)),e.normalMapType!==void 0&&(r.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),r.normalScale=new De().fromArray(s)}return e.displacementMap!==void 0&&(r.displacementMap=i(e.displacementMap)),e.displacementScale!==void 0&&(r.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(r.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(r.roughnessMap=i(e.roughnessMap)),e.metalnessMap!==void 0&&(r.metalnessMap=i(e.metalnessMap)),e.emissiveMap!==void 0&&(r.emissiveMap=i(e.emissiveMap)),e.emissiveIntensity!==void 0&&(r.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(r.specularMap=i(e.specularMap)),e.specularIntensityMap!==void 0&&(r.specularIntensityMap=i(e.specularIntensityMap)),e.specularColorMap!==void 0&&(r.specularColorMap=i(e.specularColorMap)),e.envMap!==void 0&&(r.envMap=i(e.envMap)),e.envMapIntensity!==void 0&&(r.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(r.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(r.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(r.lightMap=i(e.lightMap)),e.lightMapIntensity!==void 0&&(r.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(r.aoMap=i(e.aoMap)),e.aoMapIntensity!==void 0&&(r.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(r.gradientMap=i(e.gradientMap)),e.clearcoatMap!==void 0&&(r.clearcoatMap=i(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(r.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(r.clearcoatNormalMap=i(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(r.clearcoatNormalScale=new De().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(r.iridescenceMap=i(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(r.iridescenceThicknessMap=i(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(r.transmissionMap=i(e.transmissionMap)),e.thicknessMap!==void 0&&(r.thicknessMap=i(e.thicknessMap)),e.anisotropyMap!==void 0&&(r.anisotropyMap=i(e.anisotropyMap)),e.sheenColorMap!==void 0&&(r.sheenColorMap=i(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(r.sheenRoughnessMap=i(e.sheenRoughnessMap)),r}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const n={ShadowMaterial:f0,SpriteMaterial:Gd,RawShaderMaterial:d0,ShaderMaterial:vi,PointsMaterial:Hd,MeshPhysicalMaterial:p0,MeshStandardMaterial:Kd,MeshPhongMaterial:m0,MeshToonMaterial:v0,MeshNormalMaterial:g0,MeshLambertMaterial:y0,MeshDepthMaterial:Ud,MeshDistanceMaterial:Fd,MeshBasicMaterial:Pr,MeshMatcapMaterial:x0,LineDashedMaterial:_0,LineBasicMaterial:Nn,Material:En};return new n[e]}},Af=class{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let n="";for(let i=0,r=e.length;i<r;i++)n+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(n))}catch{return n}}static extractUrlBase(e){const n=e.lastIndexOf("/");return n===-1?"./":e.slice(0,n+1)}static resolveURL(e,n){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(n)&&/^\//.test(e)&&(n=n.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:n+e)}},N0=class extends Lt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}},B0=class extends On{constructor(e){super(e)}load(e,n,i,r){const s=this,a=new Qi(s.manager);a.setPath(s.path),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(o){try{n(s.parse(JSON.parse(o)))}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},i,r)}parse(e){const n={},i={};function r(d,p){if(n[p]!==void 0)return n[p];const v=d.interleavedBuffers[p],m=s(d,v.buffer),y=Xs(v.type,m),x=new Ch(y,v.stride);return x.uuid=v.uuid,n[p]=x,x}function s(d,p){if(i[p]!==void 0)return i[p];const v=d.arrayBuffers[p],m=new Uint32Array(v).buffer;return i[p]=m,m}const a=e.isInstancedBufferGeometry?new N0:new Lt,o=e.data.index;if(o!==void 0){const d=Xs(o.type,o.array);a.setIndex(new Ut(d,1))}const l=e.data.attributes;for(const d in l){const p=l[d];let g;if(p.isInterleavedBufferAttribute){const v=r(e.data,p.data);g=new po(v,p.itemSize,p.offset,p.normalized)}else{const v=Xs(p.type,p.array),m=p.isInstancedBufferAttribute?ia:Ut;g=new m(v,p.itemSize,p.normalized)}p.name!==void 0&&(g.name=p.name),p.usage!==void 0&&g.setUsage(p.usage),a.setAttribute(d,g)}const c=e.data.morphAttributes;if(c)for(const d in c){const p=c[d],g=[];for(let v=0,m=p.length;v<m;v++){const y=p[v];let x;if(y.isInterleavedBufferAttribute){const _=r(e.data,y.data);x=new po(_,y.itemSize,y.offset,y.normalized)}else{const _=Xs(y.type,y.array);x=new Ut(_,y.itemSize,y.normalized)}y.name!==void 0&&(x.name=y.name),g.push(x)}a.morphAttributes[d]=g}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const u=e.data.groups||e.data.drawcalls||e.data.offsets;if(u!==void 0)for(let d=0,p=u.length;d!==p;++d){const g=u[d];a.addGroup(g.start,g.count,g.materialIndex)}const f=e.data.boundingSphere;if(f!==void 0){const d=new K;f.center!==void 0&&d.fromArray(f.center),a.boundingSphere=new Sn(d,f.radius)}return e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}},YE=class extends On{constructor(e){super(e)}load(e,n,i,r){const s=this,a=this.path===""?Af.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const o=new Qi(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(u){r!==void 0&&r(u),console.error("THREE:ObjectLoader: Can't parse "+e+".",u.message);return}const h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry"){r!==void 0&&r(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(c,n)},i,r)}async loadAsync(e,n){const i=this,r=this.path===""?Af.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||r;const s=new Qi(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const a=await s.loadAsync(e,n),o=JSON.parse(a),l=o.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await i.parseAsync(o)}parse(e,n){const i=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,r),a=this.parseImages(e.images,function(){n!==void 0&&n(c)}),o=this.parseTextures(e.textures,a),l=this.parseMaterials(e.materials,o),c=this.parseObject(e.object,s,l,o,i),h=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,h),n!==void 0){let u=!1;for(const f in a)if(a[f].data instanceof HTMLImageElement){u=!0;break}u===!1&&n(c)}return c}async parseAsync(e){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),s=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,s),o=this.parseMaterials(e.materials,a),l=this.parseObject(e.object,r,o,a,n),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),l}parseShapes(e){const n={};if(e!==void 0)for(let i=0,r=e.length;i<r;i++){const s=new os().fromJSON(e[i]);n[s.uuid]=s}return n}parseSkeletons(e,n){const i={},r={};if(n.traverse(function(s){s.isBone&&(r[s.uuid]=s)}),e!==void 0)for(let s=0,a=e.length;s<a;s++){const o=new by().fromJSON(e[s],r);i[o.uuid]=o}return i}parseGeometries(e,n){const i={};if(e!==void 0){const r=new B0;for(let s=0,a=e.length;s<a;s++){let o;const l=e[s];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":o=r.parse(l);break;default:l.type in Bm?o=Bm[l.type].fromJSON(l,n):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}o.uuid=l.uuid,l.name!==void 0&&(o.name=l.name),l.userData!==void 0&&(o.userData=l.userData),i[l.uuid]=o}}return i}parseMaterials(e,n){const i={},r={};if(e!==void 0){const s=new I0;s.setTextures(n);for(let a=0,o=e.length;a<o;a++){const l=e[a];i[l.uuid]===void 0&&(i[l.uuid]=s.parse(l)),r[l.uuid]=i[l.uuid]}}return r}parseAnimations(e){const n={};if(e!==void 0)for(let i=0;i<e.length;i++){const r=e[i],s=Mo.parse(r);n[s.uuid]=s}return n}parseImages(e,n){const i=this,r={};let s;function a(l){return i.manager.itemStart(l),s.load(l,function(){i.manager.itemEnd(l)},void 0,function(){i.manager.itemError(l),i.manager.itemEnd(l)})}function o(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:i.resourcePath+c;return a(h)}else return l.data?{data:Xs(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new np(n);s=new bo(l),s.setCrossOrigin(this.crossOrigin);for(let c=0,h=e.length;c<h;c++){const u=e[c],f=u.url;if(Array.isArray(f)){const d=[];for(let p=0,g=f.length;p<g;p++){const v=f[p],m=o(v);m!==null&&(m instanceof HTMLImageElement?d.push(m):d.push(new as(m.data,m.width,m.height)))}r[u.uuid]=new Qr(d)}else{const d=o(u.url);r[u.uuid]=new Qr(d)}}}return r}async parseImagesAsync(e){const n=this,i={};let r;async function s(a){if(typeof a=="string"){const o=a,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(o)?o:n.resourcePath+o;return await r.loadAsync(l)}else return a.data?{data:Xs(a.type,a.data),width:a.width,height:a.height}:null}if(e!==void 0&&e.length>0){r=new bo(this.manager),r.setCrossOrigin(this.crossOrigin);for(let a=0,o=e.length;a<o;a++){const l=e[a],c=l.url;if(Array.isArray(c)){const h=[];for(let u=0,f=c.length;u<f;u++){const d=c[u],p=await s(d);p!==null&&(p instanceof HTMLImageElement?h.push(p):h.push(new as(p.data,p.width,p.height)))}i[l.uuid]=new Qr(h)}else{const h=await s(l.url);i[l.uuid]=new Qr(h)}}}return i}parseTextures(e,n){function i(s,a){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),a[s])}const r={};if(e!==void 0)for(let s=0,a=e.length;s<a;s++){const o=e[s];o.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),n[o.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",o.image);const l=n[o.image],c=l.data;let h;Array.isArray(c)?(h=new fl,c.length===6&&(h.needsUpdate=!0)):(c&&c.data?h=new as:h=new gn,c&&(h.needsUpdate=!0)),h.source=l,h.uuid=o.uuid,o.name!==void 0&&(h.name=o.name),o.mapping!==void 0&&(h.mapping=i(o.mapping,ZE)),o.channel!==void 0&&(h.channel=o.channel),o.offset!==void 0&&h.offset.fromArray(o.offset),o.repeat!==void 0&&h.repeat.fromArray(o.repeat),o.center!==void 0&&h.center.fromArray(o.center),o.rotation!==void 0&&(h.rotation=o.rotation),o.wrap!==void 0&&(h.wrapS=i(o.wrap[0],zm),h.wrapT=i(o.wrap[1],zm)),o.format!==void 0&&(h.format=o.format),o.internalFormat!==void 0&&(h.internalFormat=o.internalFormat),o.type!==void 0&&(h.type=o.type),o.colorSpace!==void 0&&(h.colorSpace=o.colorSpace),o.encoding!==void 0&&(h.encoding=o.encoding),o.minFilter!==void 0&&(h.minFilter=i(o.minFilter,Gm)),o.magFilter!==void 0&&(h.magFilter=i(o.magFilter,Gm)),o.anisotropy!==void 0&&(h.anisotropy=o.anisotropy),o.flipY!==void 0&&(h.flipY=o.flipY),o.generateMipmaps!==void 0&&(h.generateMipmaps=o.generateMipmaps),o.premultiplyAlpha!==void 0&&(h.premultiplyAlpha=o.premultiplyAlpha),o.unpackAlignment!==void 0&&(h.unpackAlignment=o.unpackAlignment),o.compareFunction!==void 0&&(h.compareFunction=o.compareFunction),o.userData!==void 0&&(h.userData=o.userData),r[o.uuid]=h}return r}parseObject(e,n,i,r,s){let a;function o(f){return n[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",f),n[f]}function l(f){if(f!==void 0){if(Array.isArray(f)){const d=[];for(let p=0,g=f.length;p<g;p++){const v=f[p];i[v]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",v),d.push(i[v])}return d}return i[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",f),i[f]}}function c(f){return r[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",f),r[f]}let h,u;switch(e.type){case"Scene":a=new zd,e.background!==void 0&&(Number.isInteger(e.background)?a.background=new rt(e.background):a.background=c(e.background)),e.environment!==void 0&&(a.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?a.fog=new my(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(a.fog=new dy(e.fog.color,e.fog.density)),e.fog.name!==""&&(a.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(a.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(a.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":a=new pn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(a.focus=e.focus),e.zoom!==void 0&&(a.zoom=e.zoom),e.filmGauge!==void 0&&(a.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(a.filmOffset=e.filmOffset),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new Th(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(a.zoom=e.zoom),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new ap(e.color,e.intensity);break;case"DirectionalLight":a=new sp(e.color,e.intensity);break;case"PointLight":a=new C0(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new R0(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new rp(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new A0(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new L0().fromJSON(e);break;case"SkinnedMesh":h=o(e.geometry),u=l(e.material),a=new My(h,u),e.bindMode!==void 0&&(a.bindMode=e.bindMode),e.bindMatrix!==void 0&&a.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(a.skeleton=e.skeleton);break;case"Mesh":h=o(e.geometry),u=l(e.material),a=new an(h,u);break;case"InstancedMesh":h=o(e.geometry),u=l(e.material);const f=e.count,d=e.instanceMatrix,p=e.instanceColor;a=new Sy(h,u,f),a.instanceMatrix=new ia(new Float32Array(d.array),16),p!==void 0&&(a.instanceColor=new ia(new Float32Array(p.array),p.itemSize));break;case"BatchedMesh":h=o(e.geometry),u=l(e.material),a=new Ey(e.maxGeometryCount,e.maxVertexCount,e.maxIndexCount,u),a.geometry=h,a.perObjectFrustumCulled=e.perObjectFrustumCulled,a.sortObjects=e.sortObjects,a._drawRanges=e.drawRanges,a._reservedRanges=e.reservedRanges,a._visibility=e.visibility,a._active=e.active,a._bounds=e.bounds.map(g=>{const v=new In;v.min.fromArray(g.boxMin),v.max.fromArray(g.boxMax);const m=new Sn;return m.radius=g.sphereRadius,m.center.fromArray(g.sphereCenter),{boxInitialized:g.boxInitialized,box:v,sphereInitialized:g.sphereInitialized,sphere:m}}),a._maxGeometryCount=e.maxGeometryCount,a._maxVertexCount=e.maxVertexCount,a._maxIndexCount=e.maxIndexCount,a._geometryInitialized=e.geometryInitialized,a._geometryCount=e.geometryCount,a._matricesTexture=c(e.matricesTexture.uuid);break;case"LOD":a=new _y;break;case"Line":a=new Er(o(e.geometry),l(e.material));break;case"LineLoop":a=new Ty(o(e.geometry),l(e.material));break;case"LineSegments":a=new Bi(o(e.geometry),l(e.material));break;case"PointCloud":case"Points":a=new Ay(o(e.geometry),l(e.material));break;case"Sprite":a=new xy(l(e.material));break;case"Group":a=new Ys;break;case"Bone":a=new Vd;break;default:a=new Ft}if(a.uuid=e.uuid,e.name!==void 0&&(a.name=e.name),e.matrix!==void 0?(a.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(e.position!==void 0&&a.position.fromArray(e.position),e.rotation!==void 0&&a.rotation.fromArray(e.rotation),e.quaternion!==void 0&&a.quaternion.fromArray(e.quaternion),e.scale!==void 0&&a.scale.fromArray(e.scale)),e.up!==void 0&&a.up.fromArray(e.up),e.castShadow!==void 0&&(a.castShadow=e.castShadow),e.receiveShadow!==void 0&&(a.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(a.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(a.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(a.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&a.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(a.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(a.visible=e.visible),e.frustumCulled!==void 0&&(a.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(a.renderOrder=e.renderOrder),e.userData!==void 0&&(a.userData=e.userData),e.layers!==void 0&&(a.layers.mask=e.layers),e.children!==void 0){const f=e.children;for(let d=0;d<f.length;d++)a.add(this.parseObject(f[d],n,i,r,s))}if(e.animations!==void 0){const f=e.animations;for(let d=0;d<f.length;d++){const p=f[d];a.animations.push(s[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(a.autoUpdate=e.autoUpdate);const f=e.levels;for(let d=0;d<f.length;d++){const p=f[d],g=a.getObjectByProperty("uuid",p.object);g!==void 0&&a.addLevel(g,p.distance,p.hysteresis)}}return a}bindSkeletons(e,n){Object.keys(n).length!==0&&e.traverse(function(i){if(i.isSkinnedMesh===!0&&i.skeleton!==void 0){const r=n[i.skeleton];r===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",i.skeleton):i.bind(r,i.bindMatrix)}})}};const ZE={UVMapping:yh,CubeReflectionMapping:Ki,CubeRefractionMapping:Sr,EquirectangularReflectionMapping:eo,EquirectangularRefractionMapping:to,CubeUVReflectionMapping:ba},zm={RepeatWrapping:no,ClampToEdgeWrapping:bn,MirroredRepeatWrapping:io},Gm={NearestFilter:en,NearestMipmapNearestFilter:Ac,NearestMipmapLinearFilter:Zr,LinearFilter:qt,LinearMipmapNearestFilter:qa,LinearMipmapLinearFilter:Ti};let jE=class extends On{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,n,i,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=$i.get(e);if(a!==void 0){if(s.manager.itemStart(e),a.then){a.then(c=>{n&&n(c),s.manager.itemEnd(e)}).catch(c=>{r&&r(c)});return}return setTimeout(function(){n&&n(a),s.manager.itemEnd(e)},0),a}const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader;const l=fetch(e,o).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(c){return $i.add(e,c),n&&n(c),s.manager.itemEnd(e),c}).catch(function(c){r&&r(c),$i.remove(e),s.manager.itemError(e),s.manager.itemEnd(e)});$i.add(e,l),s.manager.itemStart(e)}},tc,op=class{static getContext(){return tc===void 0&&(tc=new(window.AudioContext||window.webkitAudioContext)),tc}static setContext(e){tc=e}},JE=class extends On{constructor(e){super(e)}load(e,n,i,r){const s=this,a=new Qi(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){try{const c=l.slice(0);op.getContext().decodeAudioData(c,function(u){n(u)}).catch(o)}catch(c){o(c)}},i,r);function o(l){r?r(l):console.error(l),s.manager.itemError(e)}}};const Vm=new Mt,Hm=new Mt,Or=new Mt;let KE=class{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new pn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new pn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const n=this._cache;if(n.focus!==e.focus||n.fov!==e.fov||n.aspect!==e.aspect*this.aspect||n.near!==e.near||n.far!==e.far||n.zoom!==e.zoom||n.eyeSep!==this.eyeSep){n.focus=e.focus,n.fov=e.fov,n.aspect=e.aspect*this.aspect,n.near=e.near,n.far=e.far,n.zoom=e.zoom,n.eyeSep=this.eyeSep,Or.copy(e.projectionMatrix);const r=n.eyeSep/2,s=r*n.near/n.focus,a=n.near*Math.tan(rs*n.fov*.5)/n.zoom;let o,l;Hm.elements[12]=-r,Vm.elements[12]=r,o=-a*n.aspect+s,l=a*n.aspect+s,Or.elements[0]=2*n.near/(l-o),Or.elements[8]=(l+o)/(l-o),this.cameraL.projectionMatrix.copy(Or),o=-a*n.aspect-s,l=a*n.aspect-s,Or.elements[0]=2*n.near/(l-o),Or.elements[8]=(l+o)/(l-o),this.cameraR.projectionMatrix.copy(Or)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Hm),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Vm)}},U0=class{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=km(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const n=km();e=(n-this.oldTime)/1e3,this.oldTime=n,this.elapsedTime+=e}return e}};function km(){return(typeof performance>"u"?Date:performance).now()}const zr=new K,Wm=new wn,QE=new K,Gr=new K;let eT=class extends Ft{constructor(){super(),this.type="AudioListener",this.context=op.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new U0}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const n=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(zr,Wm,QE),Gr.set(0,0,-1).applyQuaternion(Wm),n.positionX){const r=this.context.currentTime+this.timeDelta;n.positionX.linearRampToValueAtTime(zr.x,r),n.positionY.linearRampToValueAtTime(zr.y,r),n.positionZ.linearRampToValueAtTime(zr.z,r),n.forwardX.linearRampToValueAtTime(Gr.x,r),n.forwardY.linearRampToValueAtTime(Gr.y,r),n.forwardZ.linearRampToValueAtTime(Gr.z,r),n.upX.linearRampToValueAtTime(i.x,r),n.upY.linearRampToValueAtTime(i.y,r),n.upZ.linearRampToValueAtTime(i.z,r)}else n.setPosition(zr.x,zr.y,zr.z),n.setOrientation(Gr.x,Gr.y,Gr.z,i.x,i.y,i.z)}},F0=class extends Ft{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const n=this.context.createBufferSource();return n.buffer=this.buffer,n.loop=this.loop,n.loopStart=this.loopStart,n.loopEnd=this.loopEnd,n.onended=this.onEnded.bind(this),n.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=n,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,n=this.filters.length;e<n;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,n=this.filters.length;e<n;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}};const Vr=new K,Xm=new wn,tT=new K,Hr=new K;let nT=class extends F0{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,n,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=n,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Vr,Xm,tT),Hr.set(0,0,1).applyQuaternion(Xm);const n=this.panner;if(n.positionX){const i=this.context.currentTime+this.listener.timeDelta;n.positionX.linearRampToValueAtTime(Vr.x,i),n.positionY.linearRampToValueAtTime(Vr.y,i),n.positionZ.linearRampToValueAtTime(Vr.z,i),n.orientationX.linearRampToValueAtTime(Hr.x,i),n.orientationY.linearRampToValueAtTime(Hr.y,i),n.orientationZ.linearRampToValueAtTime(Hr.z,i)}else n.setPosition(Vr.x,Vr.y,Vr.z),n.setOrientation(Hr.x,Hr.y,Hr.z)}},iT=class{constructor(e,n=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=n,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const n=this.getFrequencyData();for(let i=0;i<n.length;i++)e+=n[i];return e/n.length}},O0=class{constructor(e,n,i){this.binding=e,this.valueSize=i;let r,s,a;switch(n){case"quaternion":r=this._slerp,s=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(i*6),this._workIndex=5;break;case"string":case"bool":r=this._select,s=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(i*5);break;default:r=this._lerp,s=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(i*5)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=s,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,n){const i=this.buffer,r=this.valueSize,s=e*r+r;let a=this.cumulativeWeight;if(a===0){for(let o=0;o!==r;++o)i[s+o]=i[o];a=n}else{a+=n;const o=n/a;this._mixBufferRegion(i,s,0,o,r)}this.cumulativeWeight=a}accumulateAdditive(e){const n=this.buffer,i=this.valueSize,r=i*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(n,r,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){const n=this.valueSize,i=this.buffer,r=e*n+n,s=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=n*this._origIndex;this._mixBufferRegion(i,r,l,1-s,n)}a>0&&this._mixBufferRegionAdditive(i,r,this._addIndex*n,1,n);for(let l=n,c=n+n;l!==c;++l)if(i[l]!==i[l+n]){o.setValue(i,r);break}}saveOriginalState(){const e=this.binding,n=this.buffer,i=this.valueSize,r=i*this._origIndex;e.getValue(n,r);for(let s=i,a=r;s!==a;++s)n[s]=n[r+s%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,n=e+this.valueSize;for(let i=e;i<n;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,n=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[n+i]=this.buffer[e+i]}_select(e,n,i,r,s){if(r>=.5)for(let a=0;a!==s;++a)e[n+a]=e[i+a]}_slerp(e,n,i,r){wn.slerpFlat(e,n,e,n,e,i,r)}_slerpAdditive(e,n,i,r,s){const a=this._workIndex*s;wn.multiplyQuaternionsFlat(e,a,e,n,e,i),wn.slerpFlat(e,n,e,n,e,a,r)}_lerp(e,n,i,r,s){const a=1-r;for(let o=0;o!==s;++o){const l=n+o;e[l]=e[l]*a+e[i+o]*r}}_lerpAdditive(e,n,i,r,s){for(let a=0;a!==s;++a){const o=n+a;e[o]=e[o]+e[i+a]*r}}};const lp="\\[\\]\\.:\\/",rT=new RegExp("["+lp+"]","g"),cp="[^"+lp+"]",sT="[^"+lp.replace("\\.","")+"]",aT=/((?:WC+[\/:])*)/.source.replace("WC",cp),oT=/(WCOD+)?/.source.replace("WCOD",sT),lT=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",cp),cT=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",cp),hT=new RegExp("^"+aT+oT+lT+cT+"$"),uT=["material","materials","bones","map"];let fT=class{constructor(e,n,i){const r=i||Ot.parseTrackName(n);this._targetGroup=e,this._bindings=e.subscribe_(n,r)}getValue(e,n){this.bind();const i=this._targetGroup.nCachedObjects_,r=this._bindings[i];r!==void 0&&r.getValue(e,n)}setValue(e,n){const i=this._bindings;for(let r=this._targetGroup.nCachedObjects_,s=i.length;r!==s;++r)i[r].setValue(e,n)}bind(){const e=this._bindings;for(let n=this._targetGroup.nCachedObjects_,i=e.length;n!==i;++n)e[n].bind()}unbind(){const e=this._bindings;for(let n=this._targetGroup.nCachedObjects_,i=e.length;n!==i;++n)e[n].unbind()}},Ot=class ks{constructor(e,n,i){this.path=n,this.parsedPath=i||ks.parseTrackName(n),this.node=ks.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,n,i){return e&&e.isAnimationObjectGroup?new ks.Composite(e,n,i):new ks(e,n,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(rT,"")}static parseTrackName(e){const n=hT.exec(e);if(n===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:n[2],objectName:n[3],objectIndex:n[4],propertyName:n[5],propertyIndex:n[6]},r=i.nodeName&&i.nodeName.lastIndexOf(".");if(r!==void 0&&r!==-1){const s=i.nodeName.substring(r+1);uT.indexOf(s)!==-1&&(i.nodeName=i.nodeName.substring(0,r),i.objectName=s)}if(i.propertyName===null||i.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,n){if(n===void 0||n===""||n==="."||n===-1||n===e.name||n===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(n);if(i!==void 0)return i}if(e.children){const i=function(s){for(let a=0;a<s.length;a++){const o=s[a];if(o.name===n||o.uuid===n)return o;const l=i(o.children);if(l)return l}return null},r=i(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,n){e[n]=this.targetObject[this.propertyName]}_getValue_array(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)e[n++]=i[r]}_getValue_arrayElement(e,n){e[n]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,n){this.resolvedProperty.toArray(e,n)}_setValue_direct(e,n){this.targetObject[this.propertyName]=e[n]}_setValue_direct_setNeedsUpdate(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[n++]}_setValue_array_setNeedsUpdate(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[n++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[n++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,n){this.resolvedProperty[this.propertyIndex]=e[n]}_setValue_arrayElement_setNeedsUpdate(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,n){this.resolvedProperty.fromArray(e,n)}_setValue_fromArray_setNeedsUpdate(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,n){this.bind(),this.getValue(e,n)}_setValue_unbound(e,n){this.bind(),this.setValue(e,n)}bind(){let e=this.node;const n=this.parsedPath,i=n.objectName,r=n.propertyName;let s=n.propertyIndex;if(e||(e=ks.findNode(this.rootNode,n.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(i){let c=n.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===c){c=h;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[i]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const a=e[r];if(a===void 0){const c=n.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+r+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(r==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=s}else a.fromArray!==void 0&&a.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(l=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=r;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}};Ot.Composite=fT;Ot.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Ot.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Ot.prototype.GetterByBindingType=[Ot.prototype._getValue_direct,Ot.prototype._getValue_array,Ot.prototype._getValue_arrayElement,Ot.prototype._getValue_toArray];Ot.prototype.SetterByBindingTypeAndVersioning=[[Ot.prototype._setValue_direct,Ot.prototype._setValue_direct_setNeedsUpdate,Ot.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ot.prototype._setValue_array,Ot.prototype._setValue_array_setNeedsUpdate,Ot.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ot.prototype._setValue_arrayElement,Ot.prototype._setValue_arrayElement_setNeedsUpdate,Ot.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ot.prototype._setValue_fromArray,Ot.prototype._setValue_fromArray_setNeedsUpdate,Ot.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];let dT=class{constructor(){this.isAnimationObjectGroup=!0,this.uuid=qn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let i=0,r=arguments.length;i!==r;++i)e[arguments[i].uuid]=i;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const n=this;this.stats={objects:{get total(){return n._objects.length},get inUse(){return this.total-n.nCachedObjects_}},get bindingsPerObject(){return n._bindings.length}}}add(){const e=this._objects,n=this._indicesByUUID,i=this._paths,r=this._parsedPaths,s=this._bindings,a=s.length;let o,l=e.length,c=this.nCachedObjects_;for(let h=0,u=arguments.length;h!==u;++h){const f=arguments[h],d=f.uuid;let p=n[d];if(p===void 0){p=l++,n[d]=p,e.push(f);for(let g=0,v=a;g!==v;++g)s[g].push(new Ot(f,i[g],r[g]))}else if(p<c){o=e[p];const g=--c,v=e[g];n[v.uuid]=p,e[p]=v,n[d]=g,e[g]=f;for(let m=0,y=a;m!==y;++m){const x=s[m],_=x[g];let b=x[p];x[p]=_,b===void 0&&(b=new Ot(f,i[m],r[m])),x[g]=b}}else e[p]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,n=this._indicesByUUID,i=this._bindings,r=i.length;let s=this.nCachedObjects_;for(let a=0,o=arguments.length;a!==o;++a){const l=arguments[a],c=l.uuid,h=n[c];if(h!==void 0&&h>=s){const u=s++,f=e[u];n[f.uuid]=h,e[h]=f,n[c]=u,e[u]=l;for(let d=0,p=r;d!==p;++d){const g=i[d],v=g[u],m=g[h];g[h]=v,g[u]=m}}}this.nCachedObjects_=s}uncache(){const e=this._objects,n=this._indicesByUUID,i=this._bindings,r=i.length;let s=this.nCachedObjects_,a=e.length;for(let o=0,l=arguments.length;o!==l;++o){const c=arguments[o],h=c.uuid,u=n[h];if(u!==void 0)if(delete n[h],u<s){const f=--s,d=e[f],p=--a,g=e[p];n[d.uuid]=u,e[u]=d,n[g.uuid]=f,e[f]=g,e.pop();for(let v=0,m=r;v!==m;++v){const y=i[v],x=y[f],_=y[p];y[u]=x,y[f]=_,y.pop()}}else{const f=--a,d=e[f];f>0&&(n[d.uuid]=u),e[u]=d,e.pop();for(let p=0,g=r;p!==g;++p){const v=i[p];v[u]=v[f],v.pop()}}}this.nCachedObjects_=s}subscribe_(e,n){const i=this._bindingsIndicesByPath;let r=i[e];const s=this._bindings;if(r!==void 0)return s[r];const a=this._paths,o=this._parsedPaths,l=this._objects,c=l.length,h=this.nCachedObjects_,u=new Array(c);r=s.length,i[e]=r,a.push(e),o.push(n),s.push(u);for(let f=h,d=l.length;f!==d;++f){const p=l[f];u[f]=new Ot(p,e,n)}return u}unsubscribe_(e){const n=this._bindingsIndicesByPath,i=n[e];if(i!==void 0){const r=this._paths,s=this._parsedPaths,a=this._bindings,o=a.length-1,l=a[o],c=e[o];n[c]=i,a[i]=l,a.pop(),s[i]=s[o],s.pop(),r[i]=r[o],r.pop()}}},z0=class{constructor(e,n,i=null,r=n.blendMode){this._mixer=e,this._clip=n,this._localRoot=i,this.blendMode=r;const s=n.tracks,a=s.length,o=new Array(a),l={endingStart:Jr,endingEnd:Jr};for(let c=0;c!==a;++c){const h=s[c].createInterpolant(null);o[c]=h,h.settings=l}this._interpolantSettings=l,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Rg,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,n){return this.loop=e,this.repetitions=n,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,n,i){if(e.fadeOut(n),this.fadeIn(n),i){const r=this._clip.duration,s=e._clip.duration,a=s/r,o=r/s;e.warp(1,a,n),this.warp(o,1,n)}return this}crossFadeTo(e,n,i){return e.crossFadeFrom(this,n,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,n,i){const r=this._mixer,s=r.time,a=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=r._lendControlInterpolant(),this._timeScaleInterpolant=o);const l=o.parameterPositions,c=o.sampleValues;return l[0]=s,l[1]=s+i,c[0]=e/a,c[1]=n/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,n,i,r){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*i;l<0||i===0?n=0:(this._startTime=null,n=i*l)}n*=this._updateTimeScale(e);const a=this._updateTime(n),o=this._updateWeight(e);if(o>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case Ed:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(a),c[h].accumulateAdditive(o);break;case _h:default:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(a),c[h].accumulate(r,o)}}}_updateWeight(e){let n=0;if(this.enabled){n=this.weight;const i=this._weightInterpolant;if(i!==null){const r=i.evaluate(e)[0];n*=r,e>i.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=n,n}_updateTimeScale(e){let n=0;if(!this.paused){n=this.timeScale;const i=this._timeScaleInterpolant;if(i!==null){const r=i.evaluate(e)[0];n*=r,e>i.parameterPositions[1]&&(this.stopWarping(),n===0?this.paused=!0:this.timeScale=n)}}return this._effectiveTimeScale=n,n}_updateTime(e){const n=this._clip.duration,i=this.loop;let r=this.time+e,s=this._loopCount;const a=i===Pg;if(e===0)return s===-1?r:a&&(s&1)===1?n-r:r;if(i===Cg){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=n)r=n;else if(r<0)r=0;else{this.time=r;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),r>=n||r<0){const o=Math.floor(r/n);r-=n*o,s+=Math.abs(o);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?n:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,a)}else this._setEndings(!1,!1,a);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=r;if(a&&(s&1)===1)return n-r}return r}_setEndings(e,n,i){const r=this._interpolantSettings;i?(r.endingStart=Kr,r.endingEnd=Kr):(e?r.endingStart=this.zeroSlopeAtStart?Kr:Jr:r.endingStart=ao,n?r.endingEnd=this.zeroSlopeAtEnd?Kr:Jr:r.endingEnd=ao)}_scheduleFading(e,n,i){const r=this._mixer,s=r.time;let a=this._weightInterpolant;a===null&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=s,l[0]=n,o[1]=s+e,l[1]=i,this}};const pT=new Float32Array(1);let mT=class extends Ni{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,n){const i=e._localRoot||this._root,r=e._clip.tracks,s=r.length,a=e._propertyBindings,o=e._interpolants,l=i.uuid,c=this._bindingsByRootAndName;let h=c[l];h===void 0&&(h={},c[l]=h);for(let u=0;u!==s;++u){const f=r[u],d=f.name;let p=h[d];if(p!==void 0)++p.referenceCount,a[u]=p;else{if(p=a[u],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,d));continue}const g=n&&n._propertyBindings[u].binding.parsedPath;p=new O0(Ot.create(i,d,g),f.ValueTypeName,f.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,d),a[u]=p}o[u].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const i=(e._localRoot||this._root).uuid,r=e._clip.uuid,s=this._actionsByClip[r];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,r,i)}const n=e._propertyBindings;for(let i=0,r=n.length;i!==r;++i){const s=n[i];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const n=e._propertyBindings;for(let i=0,r=n.length;i!==r;++i){const s=n[i];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const n=e._cacheIndex;return n!==null&&n<this._nActiveActions}_addInactiveAction(e,n,i){const r=this._actions,s=this._actionsByClip;let a=s[n];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[n]=a;else{const o=a.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=r.length,r.push(e),a.actionByRoot[i]=e}_removeInactiveAction(e){const n=this._actions,i=n[n.length-1],r=e._cacheIndex;i._cacheIndex=r,n[r]=i,n.pop(),e._cacheIndex=null;const s=e._clip.uuid,a=this._actionsByClip,o=a[s],l=o.knownActions,c=l[l.length-1],h=e._byClipCacheIndex;c._byClipCacheIndex=h,l[h]=c,l.pop(),e._byClipCacheIndex=null;const u=o.actionByRoot,f=(e._localRoot||this._root).uuid;delete u[f],l.length===0&&delete a[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const n=e._propertyBindings;for(let i=0,r=n.length;i!==r;++i){const s=n[i];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const n=this._actions,i=e._cacheIndex,r=this._nActiveActions++,s=n[r];e._cacheIndex=r,n[r]=e,s._cacheIndex=i,n[i]=s}_takeBackAction(e){const n=this._actions,i=e._cacheIndex,r=--this._nActiveActions,s=n[r];e._cacheIndex=r,n[r]=e,s._cacheIndex=i,n[i]=s}_addInactiveBinding(e,n,i){const r=this._bindingsByRootAndName,s=this._bindings;let a=r[n];a===void 0&&(a={},r[n]=a),a[i]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const n=this._bindings,i=e.binding,r=i.rootNode.uuid,s=i.path,a=this._bindingsByRootAndName,o=a[r],l=n[n.length-1],c=e._cacheIndex;l._cacheIndex=c,n[c]=l,n.pop(),delete o[s],Object.keys(o).length===0&&delete a[r]}_lendBinding(e){const n=this._bindings,i=e._cacheIndex,r=this._nActiveBindings++,s=n[r];e._cacheIndex=r,n[r]=e,s._cacheIndex=i,n[i]=s}_takeBackBinding(e){const n=this._bindings,i=e._cacheIndex,r=--this._nActiveBindings,s=n[r];e._cacheIndex=r,n[r]=e,s._cacheIndex=i,n[i]=s}_lendControlInterpolant(){const e=this._controlInterpolants,n=this._nActiveControlInterpolants++;let i=e[n];return i===void 0&&(i=new ep(new Float32Array(2),new Float32Array(2),1,pT),i.__cacheIndex=n,e[n]=i),i}_takeBackControlInterpolant(e){const n=this._controlInterpolants,i=e.__cacheIndex,r=--this._nActiveControlInterpolants,s=n[r];e.__cacheIndex=r,n[r]=e,s.__cacheIndex=i,n[i]=s}clipAction(e,n,i){const r=n||this._root,s=r.uuid;let a=typeof e=="string"?Mo.findByName(r,e):e;const o=a!==null?a.uuid:e,l=this._actionsByClip[o];let c=null;if(i===void 0&&(a!==null?i=a.blendMode:i=_h),l!==void 0){const u=l.actionByRoot[s];if(u!==void 0&&u.blendMode===i)return u;c=l.knownActions[0],a===null&&(a=c._clip)}if(a===null)return null;const h=new z0(this,a,n,i);return this._bindAction(h,c),this._addInactiveAction(h,o,s),h}existingAction(e,n){const i=n||this._root,r=i.uuid,s=typeof e=="string"?Mo.findByName(i,e):e,a=s?s.uuid:e,o=this._actionsByClip[a];return o!==void 0&&o.actionByRoot[r]||null}stopAllAction(){const e=this._actions,n=this._nActiveActions;for(let i=n-1;i>=0;--i)e[i].stop();return this}update(e){e*=this.timeScale;const n=this._actions,i=this._nActiveActions,r=this.time+=e,s=Math.sign(e),a=this._accuIndex^=1;for(let c=0;c!==i;++c)n[c]._update(r,e,s,a);const o=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)o[c].apply(a);return this}setTime(e){this.time=0;for(let n=0;n<this._actions.length;n++)this._actions[n].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const n=this._actions,i=e.uuid,r=this._actionsByClip,s=r[i];if(s!==void 0){const a=s.knownActions;for(let o=0,l=a.length;o!==l;++o){const c=a[o];this._deactivateAction(c);const h=c._cacheIndex,u=n[n.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,u._cacheIndex=h,n[h]=u,n.pop(),this._removeInactiveBindingsForAction(c)}delete r[i]}}uncacheRoot(e){const n=e.uuid,i=this._actionsByClip;for(const a in i){const o=i[a].actionByRoot,l=o[n];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const r=this._bindingsByRootAndName,s=r[n];if(s!==void 0)for(const a in s){const o=s[a];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,n){const i=this.existingAction(e,n);i!==null&&(this._deactivateAction(i),this._removeInactiveAction(i))}},vT=class G0{constructor(e){this.value=e}clone(){return new G0(this.value.clone===void 0?this.value:this.value.clone())}},gT=0;class yT extends Ni{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:gT++}),this.name="",this.usage=ho,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const n=this.uniforms.indexOf(e);return n!==-1&&this.uniforms.splice(n,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const n=e.uniforms;this.uniforms.length=0;for(let i=0,r=n.length;i<r;i++){const s=Array.isArray(n[i])?n[i]:[n[i]];for(let a=0;a<s.length;a++)this.uniforms.push(s[a].clone())}return this}clone(){return new this.constructor().copy(this)}}let xT=class extends Ch{constructor(e,n,i=1){super(e,n),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const n=super.clone(e);return n.meshPerAttribute=this.meshPerAttribute,n}toJSON(e){const n=super.toJSON(e);return n.isInstancedInterleavedBuffer=!0,n.meshPerAttribute=this.meshPerAttribute,n}};class _T{constructor(e,n,i,r,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=n,this.itemSize=i,this.elementSize=r,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,n){return this.type=e,this.elementSize=n,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}let MT=class{constructor(e,n,i=0,r=1/0){this.ray=new gs(e,n),this.near=i,this.far=r,this.camera=null,this.layers=new wh,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,n){this.ray.set(e,n)}setFromCamera(e,n){n.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(n.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(n).sub(this.ray.origin).normalize(),this.camera=n):n.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(n.near+n.far)/(n.near-n.far)).unproject(n),this.ray.direction.set(0,0,-1).transformDirection(n.matrixWorld),this.camera=n):console.error("THREE.Raycaster: Unsupported camera type: "+n.type)}intersectObject(e,n=!0,i=[]){return Cf(e,this,i,n),i.sort(qm),i}intersectObjects(e,n=!0,i=[]){for(let r=0,s=e.length;r<s;r++)Cf(e[r],this,i,n);return i.sort(qm),i}};function qm(t,e){return t.distance-e.distance}function Cf(t,e,n,i){if(t.layers.test(e.layers)&&t.raycast(e,n),i===!0){const r=t.children;for(let s=0,a=r.length;s<a;s++)Cf(r[s],e,n,!0)}}let Rf=class{constructor(e=1,n=0,i=0){return this.radius=e,this.phi=n,this.theta=i,this}set(e,n,i){return this.radius=e,this.phi=n,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,n,i){return this.radius=Math.sqrt(e*e+n*n+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(Jt(n/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}},bT=class{constructor(e=1,n=0,i=0){return this.radius=e,this.theta=n,this.y=i,this}set(e,n,i){return this.radius=e,this.theta=n,this.y=i,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,n,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=n,this}clone(){return new this.constructor().copy(this)}};const $m=new De;let wT=class{constructor(e=new De(1/0,1/0),n=new De(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=n}set(e,n){return this.min.copy(e),this.max.copy(n),this}setFromPoints(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n++)this.expandByPoint(e[n]);return this}setFromCenterAndSize(e,n){const i=$m.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,n){return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,n){return n.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,$m).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}};const Ym=new K,nc=new K;let ST=class{constructor(e=new K,n=new K){this.start=e,this.end=n}set(e,n){return this.start.copy(e),this.end.copy(n),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,n){return this.delta(n).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,n){Ym.subVectors(e,this.start),nc.subVectors(this.end,this.start);const i=nc.dot(nc);let s=nc.dot(Ym)/i;return n&&(s=Jt(s,0,1)),s}closestPointToPoint(e,n,i){const r=this.closestPointToPointParameter(e,n);return this.delta(i).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}};const Zm=new K;let ET=class extends Ft{constructor(e,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="SpotLightHelper";const i=new Lt,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,o=1,l=32;a<l;a++,o++){const c=a/l*Math.PI*2,h=o/l*Math.PI*2;r.push(Math.cos(c),Math.sin(c),1,Math.cos(h),Math.sin(h),1)}i.setAttribute("position",new ht(r,3));const s=new Nn({fog:!1,toneMapped:!1});this.cone=new Bi(i,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,n=e*Math.tan(this.light.angle);this.cone.scale.set(n,n,e),Zm.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Zm),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}};const fr=new K,ic=new Mt,_u=new Mt;let TT=class extends Bi{constructor(e){const n=V0(e),i=new Lt,r=[],s=[],a=new rt(0,0,1),o=new rt(0,1,0);for(let c=0;c<n.length;c++){const h=n[c];h.parent&&h.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),s.push(a.r,a.g,a.b),s.push(o.r,o.g,o.b))}i.setAttribute("position",new ht(r,3)),i.setAttribute("color",new ht(s,3));const l=new Nn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=n,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const n=this.bones,i=this.geometry,r=i.getAttribute("position");_u.copy(this.root.matrixWorld).invert();for(let s=0,a=0;s<n.length;s++){const o=n[s];o.parent&&o.parent.isBone&&(ic.multiplyMatrices(_u,o.matrixWorld),fr.setFromMatrixPosition(ic),r.setXYZ(a,fr.x,fr.y,fr.z),ic.multiplyMatrices(_u,o.parent.matrixWorld),fr.setFromMatrixPosition(ic),r.setXYZ(a+1,fr.x,fr.y,fr.z),a+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}};function V0(t){const e=[];t.isBone===!0&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,V0(t.children[n]));return e}let AT=class extends an{constructor(e,n,i){const r=new Jd(n,4,2),s=new Pr({wireframe:!0,fog:!1,toneMapped:!1});super(r,s),this.light=e,this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}};const CT=new K,jm=new rt,Jm=new rt;let RT=class extends Ft{constructor(e,n,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="HemisphereLightHelper";const r=new jd(n);r.rotateY(Math.PI*.5),this.material=new Pr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=r.getAttribute("position"),a=new Float32Array(s.count*3);r.setAttribute("color",new Ut(a,3)),this.add(new an(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const n=e.geometry.getAttribute("color");jm.copy(this.light.color),Jm.copy(this.light.groundColor);for(let i=0,r=n.count;i<r;i++){const s=i<r/2?jm:Jm;n.setXYZ(i,s.r,s.g,s.b)}n.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(CT.setFromMatrixPosition(this.light.matrixWorld).negate())}},PT=class extends Bi{constructor(e=10,n=10,i=4473924,r=8947848){i=new rt(i),r=new rt(r);const s=n/2,a=e/n,o=e/2,l=[],c=[];for(let f=0,d=0,p=-o;f<=n;f++,p+=a){l.push(-o,0,p,o,0,p),l.push(p,0,-o,p,0,o);const g=f===s?i:r;g.toArray(c,d),d+=3,g.toArray(c,d),d+=3,g.toArray(c,d),d+=3,g.toArray(c,d),d+=3}const h=new Lt;h.setAttribute("position",new ht(l,3)),h.setAttribute("color",new ht(c,3));const u=new Nn({vertexColors:!0,toneMapped:!1});super(h,u),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}},LT=class extends Bi{constructor(e=10,n=16,i=8,r=64,s=4473924,a=8947848){s=new rt(s),a=new rt(a);const o=[],l=[];if(n>1)for(let u=0;u<n;u++){const f=u/n*(Math.PI*2),d=Math.sin(f)*e,p=Math.cos(f)*e;o.push(0,0,0),o.push(d,0,p);const g=u&1?s:a;l.push(g.r,g.g,g.b),l.push(g.r,g.g,g.b)}for(let u=0;u<i;u++){const f=u&1?s:a,d=e-e/i*u;for(let p=0;p<r;p++){let g=p/r*(Math.PI*2),v=Math.sin(g)*d,m=Math.cos(g)*d;o.push(v,0,m),l.push(f.r,f.g,f.b),g=(p+1)/r*(Math.PI*2),v=Math.sin(g)*d,m=Math.cos(g)*d,o.push(v,0,m),l.push(f.r,f.g,f.b)}}const c=new Lt;c.setAttribute("position",new ht(o,3)),c.setAttribute("color",new ht(l,3));const h=new Nn({vertexColors:!0,toneMapped:!1});super(c,h),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}};const Km=new K,rc=new K,Qm=new K;let IT=class extends Ft{constructor(e,n,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="DirectionalLightHelper",n===void 0&&(n=1);let r=new Lt;r.setAttribute("position",new ht([-n,n,0,n,n,0,n,-n,0,-n,-n,0,-n,n,0],3));const s=new Nn({fog:!1,toneMapped:!1});this.lightPlane=new Er(r,s),this.add(this.lightPlane),r=new Lt,r.setAttribute("position",new ht([0,0,0,0,0,1],3)),this.targetLine=new Er(r,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Km.setFromMatrixPosition(this.light.matrixWorld),rc.setFromMatrixPosition(this.light.target.matrixWorld),Qm.subVectors(rc,Km),this.lightPlane.lookAt(rc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(rc),this.targetLine.scale.z=Qm.length()}};const sc=new K,jt=new Sh;let DT=class extends Bi{constructor(e){const n=new Lt,i=new Nn({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],s=[],a={};o("n1","n2"),o("n2","n4"),o("n4","n3"),o("n3","n1"),o("f1","f2"),o("f2","f4"),o("f4","f3"),o("f3","f1"),o("n1","f1"),o("n2","f2"),o("n3","f3"),o("n4","f4"),o("p","n1"),o("p","n2"),o("p","n3"),o("p","n4"),o("u1","u2"),o("u2","u3"),o("u3","u1"),o("c","t"),o("p","c"),o("cn1","cn2"),o("cn3","cn4"),o("cf1","cf2"),o("cf3","cf4");function o(p,g){l(p),l(g)}function l(p){r.push(0,0,0),s.push(0,0,0),a[p]===void 0&&(a[p]=[]),a[p].push(r.length/3-1)}n.setAttribute("position",new ht(r,3)),n.setAttribute("color",new ht(s,3)),super(n,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const c=new rt(16755200),h=new rt(16711680),u=new rt(43775),f=new rt(16777215),d=new rt(3355443);this.setColors(c,h,u,f,d)}setColors(e,n,i,r,s){const o=this.geometry.getAttribute("color");o.setXYZ(0,e.r,e.g,e.b),o.setXYZ(1,e.r,e.g,e.b),o.setXYZ(2,e.r,e.g,e.b),o.setXYZ(3,e.r,e.g,e.b),o.setXYZ(4,e.r,e.g,e.b),o.setXYZ(5,e.r,e.g,e.b),o.setXYZ(6,e.r,e.g,e.b),o.setXYZ(7,e.r,e.g,e.b),o.setXYZ(8,e.r,e.g,e.b),o.setXYZ(9,e.r,e.g,e.b),o.setXYZ(10,e.r,e.g,e.b),o.setXYZ(11,e.r,e.g,e.b),o.setXYZ(12,e.r,e.g,e.b),o.setXYZ(13,e.r,e.g,e.b),o.setXYZ(14,e.r,e.g,e.b),o.setXYZ(15,e.r,e.g,e.b),o.setXYZ(16,e.r,e.g,e.b),o.setXYZ(17,e.r,e.g,e.b),o.setXYZ(18,e.r,e.g,e.b),o.setXYZ(19,e.r,e.g,e.b),o.setXYZ(20,e.r,e.g,e.b),o.setXYZ(21,e.r,e.g,e.b),o.setXYZ(22,e.r,e.g,e.b),o.setXYZ(23,e.r,e.g,e.b),o.setXYZ(24,n.r,n.g,n.b),o.setXYZ(25,n.r,n.g,n.b),o.setXYZ(26,n.r,n.g,n.b),o.setXYZ(27,n.r,n.g,n.b),o.setXYZ(28,n.r,n.g,n.b),o.setXYZ(29,n.r,n.g,n.b),o.setXYZ(30,n.r,n.g,n.b),o.setXYZ(31,n.r,n.g,n.b),o.setXYZ(32,i.r,i.g,i.b),o.setXYZ(33,i.r,i.g,i.b),o.setXYZ(34,i.r,i.g,i.b),o.setXYZ(35,i.r,i.g,i.b),o.setXYZ(36,i.r,i.g,i.b),o.setXYZ(37,i.r,i.g,i.b),o.setXYZ(38,r.r,r.g,r.b),o.setXYZ(39,r.r,r.g,r.b),o.setXYZ(40,s.r,s.g,s.b),o.setXYZ(41,s.r,s.g,s.b),o.setXYZ(42,s.r,s.g,s.b),o.setXYZ(43,s.r,s.g,s.b),o.setXYZ(44,s.r,s.g,s.b),o.setXYZ(45,s.r,s.g,s.b),o.setXYZ(46,s.r,s.g,s.b),o.setXYZ(47,s.r,s.g,s.b),o.setXYZ(48,s.r,s.g,s.b),o.setXYZ(49,s.r,s.g,s.b),o.needsUpdate=!0}update(){const e=this.geometry,n=this.pointMap,i=1,r=1;jt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Qt("c",n,e,jt,0,0,-1),Qt("t",n,e,jt,0,0,1),Qt("n1",n,e,jt,-i,-r,-1),Qt("n2",n,e,jt,i,-r,-1),Qt("n3",n,e,jt,-i,r,-1),Qt("n4",n,e,jt,i,r,-1),Qt("f1",n,e,jt,-i,-r,1),Qt("f2",n,e,jt,i,-r,1),Qt("f3",n,e,jt,-i,r,1),Qt("f4",n,e,jt,i,r,1),Qt("u1",n,e,jt,i*.7,r*1.1,-1),Qt("u2",n,e,jt,-i*.7,r*1.1,-1),Qt("u3",n,e,jt,0,r*2,-1),Qt("cf1",n,e,jt,-i,0,1),Qt("cf2",n,e,jt,i,0,1),Qt("cf3",n,e,jt,0,-r,1),Qt("cf4",n,e,jt,0,r,1),Qt("cn1",n,e,jt,-i,0,-1),Qt("cn2",n,e,jt,i,0,-1),Qt("cn3",n,e,jt,0,-r,-1),Qt("cn4",n,e,jt,0,r,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}};function Qt(t,e,n,i,r,s,a){sc.set(r,s,a).unproject(i);const o=e[t];if(o!==void 0){const l=n.getAttribute("position");for(let c=0,h=o.length;c<h;c++)l.setXYZ(o[c],sc.x,sc.y,sc.z)}}const ac=new In;let NT=class extends Bi{constructor(e,n=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(8*3),s=new Lt;s.setIndex(new Ut(i,1)),s.setAttribute("position",new Ut(r,3)),super(s,new Nn({color:n,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&ac.setFromObject(this.object),ac.isEmpty())return;const n=ac.min,i=ac.max,r=this.geometry.attributes.position,s=r.array;s[0]=i.x,s[1]=i.y,s[2]=i.z,s[3]=n.x,s[4]=i.y,s[5]=i.z,s[6]=n.x,s[7]=n.y,s[8]=i.z,s[9]=i.x,s[10]=n.y,s[11]=i.z,s[12]=i.x,s[13]=i.y,s[14]=n.z,s[15]=n.x,s[16]=i.y,s[17]=n.z,s[18]=n.x,s[19]=n.y,s[20]=n.z,s[21]=i.x,s[22]=n.y,s[23]=n.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,n){return super.copy(e,n),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}},BT=class extends Bi{constructor(e,n=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new Lt;s.setIndex(new Ut(i,1)),s.setAttribute("position",new ht(r,3)),super(s,new Nn({color:n,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const n=this.box;n.isEmpty()||(n.getCenter(this.position),n.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}},UT=class extends Er{constructor(e,n=1,i=16776960){const r=i,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],a=new Lt;a.setAttribute("position",new ht(s,3)),a.computeBoundingSphere(),super(a,new Nn({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=n;const o=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new Lt;l.setAttribute("position",new ht(o,3)),l.computeBoundingSphere(),this.add(new an(l,new Pr({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}};const ev=new K;let oc,Mu,FT=class extends Ft{constructor(e=new K(0,0,1),n=new K(0,0,0),i=1,r=16776960,s=i*.2,a=s*.2){super(),this.type="ArrowHelper",oc===void 0&&(oc=new Lt,oc.setAttribute("position",new ht([0,0,0,0,1,0],3)),Mu=new Ih(0,.5,1,5,1),Mu.translate(0,-.5,0)),this.position.copy(n),this.line=new Er(oc,new Nn({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new an(Mu,new Pr({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,s,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{ev.set(e.z,0,-e.x).normalize();const n=Math.acos(e.y);this.quaternion.setFromAxisAngle(ev,n)}}setLength(e,n=e*.2,i=n*.2){this.line.scale.set(1,Math.max(1e-4,e-n),1),this.line.updateMatrix(),this.cone.scale.set(i,n,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}},OT=class extends Bi{constructor(e=1){const n=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new Lt;r.setAttribute("position",new ht(n,3)),r.setAttribute("color",new ht(i,3));const s=new Nn({vertexColors:!0,toneMapped:!1});super(r,s),this.type="AxesHelper"}setColors(e,n,i){const r=new rt,s=this.geometry.attributes.color.array;return r.set(e),r.toArray(s,0),r.toArray(s,3),r.set(n),r.toArray(s,6),r.toArray(s,9),r.set(i),r.toArray(s,12),r.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}},zT=class{constructor(){this.type="ShapePath",this.color=new rt,this.subPaths=[],this.currentPath=null}moveTo(e,n){return this.currentPath=new mo,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,n),this}lineTo(e,n){return this.currentPath.lineTo(e,n),this}quadraticCurveTo(e,n,i,r){return this.currentPath.quadraticCurveTo(e,n,i,r),this}bezierCurveTo(e,n,i,r,s,a){return this.currentPath.bezierCurveTo(e,n,i,r,s,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function n(m){const y=[];for(let x=0,_=m.length;x<_;x++){const b=m[x],w=new os;w.curves=b.curves,y.push(w)}return y}function i(m,y){const x=y.length;let _=!1;for(let b=x-1,w=0;w<x;b=w++){let S=y[b],C=y[w],L=C.x-S.x,M=C.y-S.y;if(Math.abs(M)>Number.EPSILON){if(M<0&&(S=y[w],L=-L,C=y[b],M=-M),m.y<S.y||m.y>C.y)continue;if(m.y===S.y){if(m.x===S.x)return!0}else{const E=M*(m.x-S.x)-L*(m.y-S.y);if(E===0)return!0;if(E<0)continue;_=!_}}else{if(m.y!==S.y)continue;if(C.x<=m.x&&m.x<=S.x||S.x<=m.x&&m.x<=C.x)return!0}}return _}const r=_r.isClockWise,s=this.subPaths;if(s.length===0)return[];let a,o,l;const c=[];if(s.length===1)return o=s[0],l=new os,l.curves=o.curves,c.push(l),c;let h=!r(s[0].getPoints());h=e?!h:h;const u=[],f=[];let d=[],p=0,g;f[p]=void 0,d[p]=[];for(let m=0,y=s.length;m<y;m++)o=s[m],g=o.getPoints(),a=r(g),a=e?!a:a,a?(!h&&f[p]&&p++,f[p]={s:new os,p:g},f[p].s.curves=o.curves,h&&p++,d[p]=[]):d[p].push({h:o,p:g[0]});if(!f[0])return n(s);if(f.length>1){let m=!1,y=0;for(let x=0,_=f.length;x<_;x++)u[x]=[];for(let x=0,_=f.length;x<_;x++){const b=d[x];for(let w=0;w<b.length;w++){const S=b[w];let C=!0;for(let L=0;L<f.length;L++)i(S.p,f[L].p)&&(x!==L&&y++,C?(C=!1,u[L].push(S)):m=!0);C&&u[x].push(S)}}y>0&&m===!1&&(d=u)}let v;for(let m=0,y=f.length;m<y;m++){l=f[m].s,c.push(l),v=d[m];for(let x=0,_=v.length;x<_;x++)l.holes.push(v[x].h)}return c}};typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:gh}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=gh);const GT=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:vg,AddEquation:dr,AddOperation:fg,AdditiveAnimationBlendMode:Ed,AdditiveBlending:zu,AgXToneMapping:yg,AlphaFormat:bg,AlwaysCompare:Gg,AlwaysDepth:sg,AlwaysStencilFunc:gf,AmbientLight:ap,AnimationAction:z0,AnimationClip:Mo,AnimationLoader:GE,AnimationMixer:mT,AnimationObjectGroup:dT,AnimationUtils:UE,ArcCurve:Cy,ArrayCamera:uy,ArrowHelper:FT,AttachedBindMode:Wu,Audio:F0,AudioAnalyser:iT,AudioContext:op,AudioListener:eT,AudioLoader:JE,AxesHelper:OT,BackSide:Ln,BasicDepthPacking:Lg,BasicShadowMap:qx,BatchedMesh:Ey,Bone:Vd,BooleanKeyframeTrack:ys,Box2:wT,Box3:In,Box3Helper:BT,BoxGeometry:ul,BoxHelper:NT,BufferAttribute:Ut,BufferGeometry:Lt,BufferGeometryLoader:B0,ByteType:_g,Cache:$i,Camera:Sh,CameraHelper:DT,CanvasTexture:aE,CapsuleGeometry:Lh,CatmullRomCurve3:Ry,CineonToneMapping:mg,CircleGeometry:Ny,ClampToEdgeWrapping:bn,Clock:U0,Color:rt,ColorKeyframeTrack:tp,ColorManagement:Bt,CompressedArrayTexture:rE,CompressedCubeTexture:sE,CompressedTexture:Rh,CompressedTextureLoader:VE,ConeGeometry:Fy,ConstantAlphaFactor:ng,ConstantColorFactor:eg,CubeCamera:ty,CubeReflectionMapping:Ki,CubeRefractionMapping:Sr,CubeTexture:fl,CubeTextureLoader:HE,CubeUVReflectionMapping:ba,CubicBezierCurve:Wd,CubicBezierCurve3:Py,CubicInterpolant:w0,CullFaceBack:Ou,CullFaceFront:Vv,CullFaceFrontBack:Xx,CullFaceNone:Gv,Curve:_i,CurvePath:Iy,CustomBlending:Hv,CustomToneMapping:gg,CylinderGeometry:Ih,Cylindrical:bT,Data3DTexture:Pd,DataArrayTexture:bh,DataTexture:as,DataTextureLoader:kE,DataUtils:eM,DecrementStencilOp:i_,DecrementWrapStencilOp:s_,DefaultLoadingManager:T0,DepthFormat:yr,DepthStencilFormat:cs,DepthTexture:Bd,DetachedBindMode:xg,DirectionalLight:sp,DirectionalLightHelper:IT,DiscreteInterpolant:S0,DisplayP3ColorSpace:Mh,DodecahedronGeometry:Gy,DoubleSide:Si,DstAlphaFactor:Zv,DstColorFactor:Jv,DynamicCopyUsage:__,DynamicDrawUsage:p_,DynamicReadUsage:g_,EdgesGeometry:Hy,EllipseCurve:Ph,EqualCompare:Ug,EqualDepth:og,EqualStencilFunc:c_,EquirectangularReflectionMapping:eo,EquirectangularRefractionMapping:to,Euler:Ld,EventDispatcher:Ni,ExtrudeGeometry:$y,FileLoader:Qi,Float16BufferAttribute:aM,Float32BufferAttribute:ht,Float64BufferAttribute:oM,FloatType:ti,Fog:my,FogExp2:dy,FramebufferTexture:iE,FrontSide:Ji,Frustum:dl,GLBufferAttribute:_T,GLSL1:b_,GLSL3:yf,GreaterCompare:Fg,GreaterDepth:cg,GreaterEqualCompare:zg,GreaterEqualDepth:lg,GreaterEqualStencilFunc:d_,GreaterStencilFunc:u_,GridHelper:PT,Group:Ys,HalfFloatType:ea,HemisphereLight:A0,HemisphereLightHelper:RT,IcosahedronGeometry:Zy,ImageBitmapLoader:jE,ImageLoader:bo,ImageUtils:Rd,IncrementStencilOp:n_,IncrementWrapStencilOp:r_,InstancedBufferAttribute:ia,InstancedBufferGeometry:N0,InstancedInterleavedBuffer:xT,InstancedMesh:Sy,Int16BufferAttribute:rM,Int32BufferAttribute:sM,Int8BufferAttribute:tM,IntType:yd,InterleavedBuffer:Ch,InterleavedBufferAttribute:po,Interpolant:pl,InterpolateDiscrete:ro,InterpolateLinear:so,InterpolateSmooth:yc,InvertStencilOp:a_,KeepStencilOp:Xr,KeyframeTrack:Mi,LOD:_y,LatheGeometry:Zd,Layers:wh,LessCompare:Bg,LessDepth:ag,LessEqualCompare:Ad,LessEqualDepth:Qa,LessEqualStencilFunc:h_,LessStencilFunc:l_,Light:Lr,LightProbe:L0,Line:Er,Line3:ST,LineBasicMaterial:Nn,LineCurve:Xd,LineCurve3:Ly,LineDashedMaterial:_0,LineLoop:Ty,LineSegments:Bi,LinearDisplayP3ColorSpace:hl,LinearEncoding:Td,LinearFilter:qt,LinearInterpolant:ep,LinearMipMapLinearFilter:jx,LinearMipMapNearestFilter:Zx,LinearMipmapLinearFilter:Ti,LinearMipmapNearestFilter:qa,LinearSRGBColorSpace:Ci,LinearToneMapping:dg,LinearTransfer:oo,Loader:On,LoaderUtils:Af,LoadingManager:np,LoopOnce:Cg,LoopPingPong:Pg,LoopRepeat:Rg,LuminanceAlphaFormat:Sg,LuminanceFormat:wg,MOUSE:kr,Material:En,MaterialLoader:I0,MathUtils:Vg,Matrix3:Pt,Matrix4:Mt,MaxEquation:ku,Mesh:an,MeshBasicMaterial:Pr,MeshDepthMaterial:Ud,MeshDistanceMaterial:Fd,MeshLambertMaterial:y0,MeshMatcapMaterial:x0,MeshNormalMaterial:g0,MeshPhongMaterial:m0,MeshPhysicalMaterial:p0,MeshStandardMaterial:Kd,MeshToonMaterial:v0,MinEquation:Hu,MirroredRepeatWrapping:io,MixOperation:ug,MultiplyBlending:Vu,MultiplyOperation:cl,NearestFilter:en,NearestMipMapLinearFilter:Yx,NearestMipMapNearestFilter:$x,NearestMipmapLinearFilter:Zr,NearestMipmapNearestFilter:Ac,NeverCompare:Ng,NeverDepth:rg,NeverStencilFunc:o_,NoBlending:Yi,NoColorSpace:Xn,NoToneMapping:Zi,NormalAnimationBlendMode:_h,NormalBlending:is,NotEqualCompare:Og,NotEqualDepth:hg,NotEqualStencilFunc:f_,NumberKeyframeTrack:xo,Object3D:Ft,ObjectLoader:YE,ObjectSpaceNormalMap:Dg,OctahedronGeometry:jd,OneFactor:qv,OneMinusConstantAlphaFactor:ig,OneMinusConstantColorFactor:tg,OneMinusDstAlphaFactor:jv,OneMinusDstColorFactor:Kv,OneMinusSrcAlphaFactor:Tc,OneMinusSrcColorFactor:Yv,OrthographicCamera:Th,P3Primaries:co,PCFShadowMap:vd,PCFSoftShadowMap:gd,PMREMGenerator:Mf,Path:mo,PerspectiveCamera:pn,Plane:Wi,PlaneGeometry:Eh,PlaneHelper:UT,PointLight:C0,PointLightHelper:AT,Points:Ay,PointsMaterial:Hd,PolarGridHelper:LT,PolyhedronGeometry:Sa,PositionalAudio:nT,PropertyBinding:Ot,PropertyMixer:O0,QuadraticBezierCurve:qd,QuadraticBezierCurve3:$d,Quaternion:wn,QuaternionKeyframeTrack:Ea,QuaternionLinearInterpolant:E0,RED_GREEN_RGTC2_Format:mf,RED_RGTC1_Format:Ag,REVISION:gh,RGBADepthPacking:Ig,RGBAFormat:Un,RGBAIntegerFormat:wd,RGBA_ASTC_10x10_Format:cf,RGBA_ASTC_10x5_Format:af,RGBA_ASTC_10x6_Format:of,RGBA_ASTC_10x8_Format:lf,RGBA_ASTC_12x10_Format:hf,RGBA_ASTC_12x12_Format:uf,RGBA_ASTC_4x4_Format:Ju,RGBA_ASTC_5x4_Format:Ku,RGBA_ASTC_5x5_Format:Qu,RGBA_ASTC_6x5_Format:ef,RGBA_ASTC_6x6_Format:tf,RGBA_ASTC_8x5_Format:nf,RGBA_ASTC_8x6_Format:rf,RGBA_ASTC_8x8_Format:sf,RGBA_BPTC_Format:gc,RGBA_ETC2_EAC_Format:ju,RGBA_PVRTC_2BPPV1_Format:Yu,RGBA_PVRTC_4BPPV1_Format:$u,RGBA_S3TC_DXT1_Format:pc,RGBA_S3TC_DXT3_Format:mc,RGBA_S3TC_DXT5_Format:vc,RGB_BPTC_SIGNED_Format:ff,RGB_BPTC_UNSIGNED_Format:df,RGB_ETC1_Format:Sd,RGB_ETC2_Format:Zu,RGB_PVRTC_2BPPV1_Format:qu,RGB_PVRTC_4BPPV1_Format:Xu,RGB_S3TC_DXT1_Format:dc,RGFormat:Tg,RGIntegerFormat:bd,RawShaderMaterial:d0,Ray:gs,Raycaster:MT,Rec709Primaries:lo,RectAreaLight:R0,RedFormat:Eg,RedIntegerFormat:Md,ReinhardToneMapping:pg,RenderTarget:$g,RepeatWrapping:no,ReplaceStencilOp:t_,ReverseSubtractEquation:Wv,RingGeometry:Ky,SIGNED_RED_GREEN_RGTC2_Format:vf,SIGNED_RED_RGTC1_Format:pf,SRGBColorSpace:on,SRGBTransfer:Gt,Scene:zd,ShaderChunk:At,ShaderLib:fi,ShaderMaterial:vi,ShadowMaterial:f0,Shape:os,ShapeGeometry:e0,ShapePath:zT,ShapeUtils:_r,ShortType:Mg,Skeleton:by,SkeletonHelper:TT,SkinnedMesh:My,Source:Qr,Sphere:Sn,SphereGeometry:Jd,Spherical:Rf,SphericalHarmonics3:P0,SplineCurve:Yd,SpotLight:rp,SpotLightHelper:ET,Sprite:xy,SpriteMaterial:Gd,SrcAlphaFactor:Ec,SrcAlphaSaturateFactor:Qv,SrcColorFactor:$v,StaticCopyUsage:x_,StaticDrawUsage:ho,StaticReadUsage:v_,StereoCamera:KE,StreamCopyUsage:M_,StreamDrawUsage:m_,StreamReadUsage:y_,StringKeyframeTrack:xs,SubtractEquation:kv,SubtractiveBlending:Gu,TOUCH:Wr,TangentSpaceNormalMap:Rr,TetrahedronGeometry:i0,Texture:gn,TextureLoader:WE,TorusGeometry:s0,TorusKnotGeometry:o0,Triangle:es,TriangleFanDrawMode:Qx,TriangleStripDrawMode:Kx,TrianglesDrawMode:Jx,TubeGeometry:c0,UVMapping:yh,Uint16BufferAttribute:Id,Uint32BufferAttribute:Dd,Uint8BufferAttribute:nM,Uint8ClampedBufferAttribute:iM,Uniform:vT,UniformsGroup:yT,UniformsLib:Ye,UniformsUtils:ey,UnsignedByteType:ji,UnsignedInt248Type:gr,UnsignedIntType:qi,UnsignedShort4444Type:xd,UnsignedShort5551Type:_d,UnsignedShortType:xh,VSMShadowMap:bi,Vector2:De,Vector3:K,Vector4:zt,VectorKeyframeTrack:_o,VideoTexture:nE,WebGL1Renderer:fy,WebGL3DRenderTarget:H_,WebGLArrayRenderTarget:V_,WebGLCoordinateSystem:Ai,WebGLCubeRenderTarget:ny,WebGLMultipleRenderTargets:k_,WebGLRenderTarget:mi,WebGLRenderer:Od,WebGLUtils:hy,WebGPUCoordinateSystem:uo,WireframeGeometry:u0,WrapAroundEnding:ao,ZeroCurvatureEnding:Jr,ZeroFactor:Xv,ZeroSlopeEnding:Kr,ZeroStencilOp:e_,_SRGBAFormat:Cc,createCanvasElement:Xg,sRGBEncoding:xr},Symbol.toStringTag,{value:"Module"})),tv={type:"change"},bu={type:"start"},nv={type:"end"},lc=new gs,iv=new Wi,VT=Math.cos(70*Vg.DEG2RAD);class HT extends Ni{constructor(e,n){super(),this.object=e,this.domElement=n,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new K,this.cursor=new K,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:kr.ROTATE,MIDDLE:kr.DOLLY,RIGHT:kr.PAN},this.touches={ONE:Wr.ROTATE,TWO:Wr.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return o.phi},this.getAzimuthalAngle=function(){return o.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(se){se.addEventListener("keydown",Fe),this._domElementKeyEvents=se},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",Fe),this._domElementKeyEvents=null},this.saveState=function(){i.target0.copy(i.target),i.position0.copy(i.object.position),i.zoom0=i.object.zoom},this.reset=function(){i.target.copy(i.target0),i.object.position.copy(i.position0),i.object.zoom=i.zoom0,i.object.updateProjectionMatrix(),i.dispatchEvent(tv),i.update(),s=r.NONE},this.update=function(){const se=new K,Oe=new wn().setFromUnitVectors(e.up,new K(0,1,0)),He=Oe.clone().invert(),et=new K,te=new wn,Ne=new K,Ue=2*Math.PI;return function(lt=null){const Et=i.object.position;se.copy(Et).sub(i.target),se.applyQuaternion(Oe),o.setFromVector3(se),i.autoRotate&&s===r.NONE&&N(M(lt)),i.enableDamping?(o.theta+=l.theta*i.dampingFactor,o.phi+=l.phi*i.dampingFactor):(o.theta+=l.theta,o.phi+=l.phi);let _t=i.minAzimuthAngle,gt=i.maxAzimuthAngle;isFinite(_t)&&isFinite(gt)&&(_t<-Math.PI?_t+=Ue:_t>Math.PI&&(_t-=Ue),gt<-Math.PI?gt+=Ue:gt>Math.PI&&(gt-=Ue),_t<=gt?o.theta=Math.max(_t,Math.min(gt,o.theta)):o.theta=o.theta>(_t+gt)/2?Math.max(_t,o.theta):Math.min(gt,o.theta)),o.phi=Math.max(i.minPolarAngle,Math.min(i.maxPolarAngle,o.phi)),o.makeSafe(),i.enableDamping===!0?i.target.addScaledVector(h,i.dampingFactor):i.target.add(h),i.target.sub(i.cursor),i.target.clampLength(i.minTargetRadius,i.maxTargetRadius),i.target.add(i.cursor),i.zoomToCursor&&w||i.object.isOrthographicCamera?o.radius=O(o.radius):o.radius=O(o.radius*c),se.setFromSpherical(o),se.applyQuaternion(He),Et.copy(i.target).add(se),i.object.lookAt(i.target),i.enableDamping===!0?(l.theta*=1-i.dampingFactor,l.phi*=1-i.dampingFactor,h.multiplyScalar(1-i.dampingFactor)):(l.set(0,0,0),h.set(0,0,0));let be=!1;if(i.zoomToCursor&&w){let Me=null;if(i.object.isPerspectiveCamera){const Ce=se.length();Me=O(Ce*c);const Re=Ce-Me;i.object.position.addScaledVector(_,Re),i.object.updateMatrixWorld()}else if(i.object.isOrthographicCamera){const Ce=new K(b.x,b.y,0);Ce.unproject(i.object),i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/c)),i.object.updateProjectionMatrix(),be=!0;const Re=new K(b.x,b.y,0);Re.unproject(i.object),i.object.position.sub(Re).add(Ce),i.object.updateMatrixWorld(),Me=se.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),i.zoomToCursor=!1;Me!==null&&(this.screenSpacePanning?i.target.set(0,0,-1).transformDirection(i.object.matrix).multiplyScalar(Me).add(i.object.position):(lc.origin.copy(i.object.position),lc.direction.set(0,0,-1).transformDirection(i.object.matrix),Math.abs(i.object.up.dot(lc.direction))<VT?e.lookAt(i.target):(iv.setFromNormalAndCoplanarPoint(i.object.up,i.target),lc.intersectPlane(iv,i.target))))}else i.object.isOrthographicCamera&&(be=c!==1,be&&(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/c)),i.object.updateProjectionMatrix()));return c=1,w=!1,be||et.distanceToSquared(i.object.position)>a||8*(1-te.dot(i.object.quaternion))>a||Ne.distanceToSquared(i.target)>0?(i.dispatchEvent(tv),et.copy(i.object.position),te.copy(i.object.quaternion),Ne.copy(i.target),!0):!1}}(),this.dispose=function(){i.domElement.removeEventListener("contextmenu",it),i.domElement.removeEventListener("pointerdown",z),i.domElement.removeEventListener("pointercancel",ue),i.domElement.removeEventListener("wheel",ge),i.domElement.removeEventListener("pointermove",I),i.domElement.removeEventListener("pointerup",ue),i._domElementKeyEvents!==null&&(i._domElementKeyEvents.removeEventListener("keydown",Fe),i._domElementKeyEvents=null)};const i=this,r={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let s=r.NONE;const a=1e-6,o=new Rf,l=new Rf;let c=1;const h=new K,u=new De,f=new De,d=new De,p=new De,g=new De,v=new De,m=new De,y=new De,x=new De,_=new K,b=new De;let w=!1;const S=[],C={};let L=!1;function M(se){return se!==null?2*Math.PI/60*i.autoRotateSpeed*se:2*Math.PI/60/60*i.autoRotateSpeed}function E(se){const Oe=Math.abs(se*.01);return Math.pow(.95,i.zoomSpeed*Oe)}function N(se){l.theta-=se}function k(se){l.phi-=se}const F=function(){const se=new K;return function(He,et){se.setFromMatrixColumn(et,0),se.multiplyScalar(-He),h.add(se)}}(),V=function(){const se=new K;return function(He,et){i.screenSpacePanning===!0?se.setFromMatrixColumn(et,1):(se.setFromMatrixColumn(et,0),se.crossVectors(i.object.up,se)),se.multiplyScalar(He),h.add(se)}}(),ee=function(){const se=new K;return function(He,et){const te=i.domElement;if(i.object.isPerspectiveCamera){const Ne=i.object.position;se.copy(Ne).sub(i.target);let Ue=se.length();Ue*=Math.tan(i.object.fov/2*Math.PI/180),F(2*He*Ue/te.clientHeight,i.object.matrix),V(2*et*Ue/te.clientHeight,i.object.matrix)}else i.object.isOrthographicCamera?(F(He*(i.object.right-i.object.left)/i.object.zoom/te.clientWidth,i.object.matrix),V(et*(i.object.top-i.object.bottom)/i.object.zoom/te.clientHeight,i.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),i.enablePan=!1)}}();function R(se){i.object.isPerspectiveCamera||i.object.isOrthographicCamera?c/=se:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function T(se){i.object.isPerspectiveCamera||i.object.isOrthographicCamera?c*=se:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function H(se,Oe){if(!i.zoomToCursor)return;w=!0;const He=i.domElement.getBoundingClientRect(),et=se-He.left,te=Oe-He.top,Ne=He.width,Ue=He.height;b.x=et/Ne*2-1,b.y=-(te/Ue)*2+1,_.set(b.x,b.y,1).unproject(i.object).sub(i.object.position).normalize()}function O(se){return Math.max(i.minDistance,Math.min(i.maxDistance,se))}function B(se){u.set(se.clientX,se.clientY)}function q(se){H(se.clientX,se.clientX),m.set(se.clientX,se.clientY)}function G(se){p.set(se.clientX,se.clientY)}function A(se){f.set(se.clientX,se.clientY),d.subVectors(f,u).multiplyScalar(i.rotateSpeed);const Oe=i.domElement;N(2*Math.PI*d.x/Oe.clientHeight),k(2*Math.PI*d.y/Oe.clientHeight),u.copy(f),i.update()}function U(se){y.set(se.clientX,se.clientY),x.subVectors(y,m),x.y>0?R(E(x.y)):x.y<0&&T(E(x.y)),m.copy(y),i.update()}function J(se){g.set(se.clientX,se.clientY),v.subVectors(g,p).multiplyScalar(i.panSpeed),ee(v.x,v.y),p.copy(g),i.update()}function $(se){H(se.clientX,se.clientY),se.deltaY<0?T(E(se.deltaY)):se.deltaY>0&&R(E(se.deltaY)),i.update()}function ie(se){let Oe=!1;switch(se.code){case i.keys.UP:se.ctrlKey||se.metaKey||se.shiftKey?k(2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):ee(0,i.keyPanSpeed),Oe=!0;break;case i.keys.BOTTOM:se.ctrlKey||se.metaKey||se.shiftKey?k(-2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):ee(0,-i.keyPanSpeed),Oe=!0;break;case i.keys.LEFT:se.ctrlKey||se.metaKey||se.shiftKey?N(2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):ee(i.keyPanSpeed,0),Oe=!0;break;case i.keys.RIGHT:se.ctrlKey||se.metaKey||se.shiftKey?N(-2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):ee(-i.keyPanSpeed,0),Oe=!0;break}Oe&&(se.preventDefault(),i.update())}function re(se){if(S.length===1)u.set(se.pageX,se.pageY);else{const Oe=We(se),He=.5*(se.pageX+Oe.x),et=.5*(se.pageY+Oe.y);u.set(He,et)}}function de(se){if(S.length===1)p.set(se.pageX,se.pageY);else{const Oe=We(se),He=.5*(se.pageX+Oe.x),et=.5*(se.pageY+Oe.y);p.set(He,et)}}function me(se){const Oe=We(se),He=se.pageX-Oe.x,et=se.pageY-Oe.y,te=Math.sqrt(He*He+et*et);m.set(0,te)}function X(se){i.enableZoom&&me(se),i.enablePan&&de(se)}function pe(se){i.enableZoom&&me(se),i.enableRotate&&re(se)}function he(se){if(S.length==1)f.set(se.pageX,se.pageY);else{const He=We(se),et=.5*(se.pageX+He.x),te=.5*(se.pageY+He.y);f.set(et,te)}d.subVectors(f,u).multiplyScalar(i.rotateSpeed);const Oe=i.domElement;N(2*Math.PI*d.x/Oe.clientHeight),k(2*Math.PI*d.y/Oe.clientHeight),u.copy(f)}function ce(se){if(S.length===1)g.set(se.pageX,se.pageY);else{const Oe=We(se),He=.5*(se.pageX+Oe.x),et=.5*(se.pageY+Oe.y);g.set(He,et)}v.subVectors(g,p).multiplyScalar(i.panSpeed),ee(v.x,v.y),p.copy(g)}function oe(se){const Oe=We(se),He=se.pageX-Oe.x,et=se.pageY-Oe.y,te=Math.sqrt(He*He+et*et);y.set(0,te),x.set(0,Math.pow(y.y/m.y,i.zoomSpeed)),R(x.y),m.copy(y);const Ne=(se.pageX+Oe.x)*.5,Ue=(se.pageY+Oe.y)*.5;H(Ne,Ue)}function ze(se){i.enableZoom&&oe(se),i.enablePan&&ce(se)}function Te(se){i.enableZoom&&oe(se),i.enableRotate&&he(se)}function z(se){i.enabled!==!1&&(S.length===0&&(i.domElement.setPointerCapture(se.pointerId),i.domElement.addEventListener("pointermove",I),i.domElement.addEventListener("pointerup",ue)),je(se),se.pointerType==="touch"?Pe(se):we(se))}function I(se){i.enabled!==!1&&(se.pointerType==="touch"?Ee(se):ve(se))}function ue(se){switch(Je(se),S.length){case 0:i.domElement.releasePointerCapture(se.pointerId),i.domElement.removeEventListener("pointermove",I),i.domElement.removeEventListener("pointerup",ue),i.dispatchEvent(nv),s=r.NONE;break;case 1:const Oe=S[0],He=C[Oe];Pe({pointerId:Oe,pageX:He.x,pageY:He.y});break}}function we(se){let Oe;switch(se.button){case 0:Oe=i.mouseButtons.LEFT;break;case 1:Oe=i.mouseButtons.MIDDLE;break;case 2:Oe=i.mouseButtons.RIGHT;break;default:Oe=-1}switch(Oe){case kr.DOLLY:if(i.enableZoom===!1)return;q(se),s=r.DOLLY;break;case kr.ROTATE:if(se.ctrlKey||se.metaKey||se.shiftKey){if(i.enablePan===!1)return;G(se),s=r.PAN}else{if(i.enableRotate===!1)return;B(se),s=r.ROTATE}break;case kr.PAN:if(se.ctrlKey||se.metaKey||se.shiftKey){if(i.enableRotate===!1)return;B(se),s=r.ROTATE}else{if(i.enablePan===!1)return;G(se),s=r.PAN}break;default:s=r.NONE}s!==r.NONE&&i.dispatchEvent(bu)}function ve(se){switch(s){case r.ROTATE:if(i.enableRotate===!1)return;A(se);break;case r.DOLLY:if(i.enableZoom===!1)return;U(se);break;case r.PAN:if(i.enablePan===!1)return;J(se);break}}function ge(se){i.enabled===!1||i.enableZoom===!1||s!==r.NONE||(se.preventDefault(),i.dispatchEvent(bu),$(ne(se)),i.dispatchEvent(nv))}function ne(se){const Oe=se.deltaMode,He={clientX:se.clientX,clientY:se.clientY,deltaY:se.deltaY};switch(Oe){case 1:He.deltaY*=16;break;case 2:He.deltaY*=100;break}return se.ctrlKey&&!L&&(He.deltaY*=10),He}function ye(se){se.key==="Control"&&(L=!0,i.domElement.getRootNode().addEventListener("keyup",xe,{passive:!0,capture:!0}))}function xe(se){se.key==="Control"&&(L=!1,i.domElement.getRootNode().removeEventListener("keyup",xe,{passive:!0,capture:!0}))}function Fe(se){i.enabled===!1||i.enablePan===!1||ie(se)}function Pe(se){switch(Ge(se),S.length){case 1:switch(i.touches.ONE){case Wr.ROTATE:if(i.enableRotate===!1)return;re(se),s=r.TOUCH_ROTATE;break;case Wr.PAN:if(i.enablePan===!1)return;de(se),s=r.TOUCH_PAN;break;default:s=r.NONE}break;case 2:switch(i.touches.TWO){case Wr.DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;X(se),s=r.TOUCH_DOLLY_PAN;break;case Wr.DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;pe(se),s=r.TOUCH_DOLLY_ROTATE;break;default:s=r.NONE}break;default:s=r.NONE}s!==r.NONE&&i.dispatchEvent(bu)}function Ee(se){switch(Ge(se),s){case r.TOUCH_ROTATE:if(i.enableRotate===!1)return;he(se),i.update();break;case r.TOUCH_PAN:if(i.enablePan===!1)return;ce(se),i.update();break;case r.TOUCH_DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;ze(se),i.update();break;case r.TOUCH_DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;Te(se),i.update();break;default:s=r.NONE}}function it(se){i.enabled!==!1&&se.preventDefault()}function je(se){S.push(se.pointerId)}function Je(se){delete C[se.pointerId];for(let Oe=0;Oe<S.length;Oe++)if(S[Oe]==se.pointerId){S.splice(Oe,1);return}}function Ge(se){let Oe=C[se.pointerId];Oe===void 0&&(Oe=new De,C[se.pointerId]=Oe),Oe.set(se.pageX,se.pageY)}function We(se){const Oe=se.pointerId===S[0]?S[1]:S[0];return C[Oe]}i.domElement.addEventListener("contextmenu",it),i.domElement.addEventListener("pointerdown",z),i.domElement.addEventListener("pointercancel",ue),i.domElement.addEventListener("wheel",ge,{passive:!1}),i.domElement.getRootNode().addEventListener("keydown",ye,{passive:!0,capture:!0}),this.update()}}var kT=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function H0(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function cc(t){throw new Error('Could not dynamically require "'+t+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var k0={exports:{}};(function(t,e){(function(n){t.exports=n()})(function(){return function n(i,r,s){function a(c,h){if(!r[c]){if(!i[c]){var u=typeof cc=="function"&&cc;if(!h&&u)return u(c,!0);if(o)return o(c,!0);throw new Error("Cannot find module '"+c+"'")}var f=r[c]={exports:{}};i[c][0].call(f.exports,function(d){var p=i[c][1][d];return a(p||d)},f,f.exports,n,i,r,s)}return r[c].exports}for(var o=typeof cc=="function"&&cc,l=0;l<s.length;l++)a(s[l]);return a}({1:[function(n,i,r){i.exports={name:"cannon",version:"0.6.2",description:"A lightweight 3D physics engine written in JavaScript.",homepage:"https://github.com/schteppe/cannon.js",author:"Stefan Hedman <schteppe@gmail.com> (http://steffe.se)",keywords:["cannon.js","cannon","physics","engine","3d"],main:"./build/cannon.js",engines:{node:"*"},repository:{type:"git",url:"https://github.com/schteppe/cannon.js.git"},bugs:{url:"https://github.com/schteppe/cannon.js/issues"},licenses:[{type:"MIT"}],devDependencies:{jshint:"latest","uglify-js":"latest",nodeunit:"^0.9.0",grunt:"~0.4.0","grunt-contrib-jshint":"~0.1.1","grunt-contrib-nodeunit":"^0.4.1","grunt-contrib-concat":"~0.1.3","grunt-contrib-uglify":"^0.5.1","grunt-browserify":"^2.1.4","grunt-contrib-yuidoc":"^0.5.2",browserify:"*"},dependencies:{}}},{}],2:[function(n,i,r){i.exports={version:n("../package.json").version,AABB:n("./collision/AABB"),ArrayCollisionMatrix:n("./collision/ArrayCollisionMatrix"),Body:n("./objects/Body"),Box:n("./shapes/Box"),Broadphase:n("./collision/Broadphase"),Constraint:n("./constraints/Constraint"),ContactEquation:n("./equations/ContactEquation"),Narrowphase:n("./world/Narrowphase"),ConeTwistConstraint:n("./constraints/ConeTwistConstraint"),ContactMaterial:n("./material/ContactMaterial"),ConvexPolyhedron:n("./shapes/ConvexPolyhedron"),Cylinder:n("./shapes/Cylinder"),DistanceConstraint:n("./constraints/DistanceConstraint"),Equation:n("./equations/Equation"),EventTarget:n("./utils/EventTarget"),FrictionEquation:n("./equations/FrictionEquation"),GSSolver:n("./solver/GSSolver"),GridBroadphase:n("./collision/GridBroadphase"),Heightfield:n("./shapes/Heightfield"),HingeConstraint:n("./constraints/HingeConstraint"),LockConstraint:n("./constraints/LockConstraint"),Mat3:n("./math/Mat3"),Material:n("./material/Material"),NaiveBroadphase:n("./collision/NaiveBroadphase"),ObjectCollisionMatrix:n("./collision/ObjectCollisionMatrix"),Pool:n("./utils/Pool"),Particle:n("./shapes/Particle"),Plane:n("./shapes/Plane"),PointToPointConstraint:n("./constraints/PointToPointConstraint"),Quaternion:n("./math/Quaternion"),Ray:n("./collision/Ray"),RaycastVehicle:n("./objects/RaycastVehicle"),RaycastResult:n("./collision/RaycastResult"),RigidVehicle:n("./objects/RigidVehicle"),RotationalEquation:n("./equations/RotationalEquation"),RotationalMotorEquation:n("./equations/RotationalMotorEquation"),SAPBroadphase:n("./collision/SAPBroadphase"),SPHSystem:n("./objects/SPHSystem"),Shape:n("./shapes/Shape"),Solver:n("./solver/Solver"),Sphere:n("./shapes/Sphere"),SplitSolver:n("./solver/SplitSolver"),Spring:n("./objects/Spring"),Trimesh:n("./shapes/Trimesh"),Vec3:n("./math/Vec3"),Vec3Pool:n("./utils/Vec3Pool"),World:n("./world/World")}},{"../package.json":1,"./collision/AABB":3,"./collision/ArrayCollisionMatrix":4,"./collision/Broadphase":5,"./collision/GridBroadphase":6,"./collision/NaiveBroadphase":7,"./collision/ObjectCollisionMatrix":8,"./collision/Ray":9,"./collision/RaycastResult":10,"./collision/SAPBroadphase":11,"./constraints/ConeTwistConstraint":12,"./constraints/Constraint":13,"./constraints/DistanceConstraint":14,"./constraints/HingeConstraint":15,"./constraints/LockConstraint":16,"./constraints/PointToPointConstraint":17,"./equations/ContactEquation":19,"./equations/Equation":20,"./equations/FrictionEquation":21,"./equations/RotationalEquation":22,"./equations/RotationalMotorEquation":23,"./material/ContactMaterial":24,"./material/Material":25,"./math/Mat3":27,"./math/Quaternion":28,"./math/Vec3":30,"./objects/Body":31,"./objects/RaycastVehicle":32,"./objects/RigidVehicle":33,"./objects/SPHSystem":34,"./objects/Spring":35,"./shapes/Box":37,"./shapes/ConvexPolyhedron":38,"./shapes/Cylinder":39,"./shapes/Heightfield":40,"./shapes/Particle":41,"./shapes/Plane":42,"./shapes/Shape":43,"./shapes/Sphere":44,"./shapes/Trimesh":45,"./solver/GSSolver":46,"./solver/Solver":47,"./solver/SplitSolver":48,"./utils/EventTarget":49,"./utils/Pool":51,"./utils/Vec3Pool":54,"./world/Narrowphase":55,"./world/World":56}],3:[function(n,i,r){var s=n("../math/Vec3");n("../utils/Utils"),i.exports=a;function a(c){c=c||{},this.lowerBound=new s,c.lowerBound&&this.lowerBound.copy(c.lowerBound),this.upperBound=new s,c.upperBound&&this.upperBound.copy(c.upperBound)}var o=new s;a.prototype.setFromPoints=function(c,h,u,f){var d=this.lowerBound,p=this.upperBound,g=u;d.copy(c[0]),g&&g.vmult(d,d),p.copy(d);for(var v=1;v<c.length;v++){var m=c[v];g&&(g.vmult(m,o),m=o),m.x>p.x&&(p.x=m.x),m.x<d.x&&(d.x=m.x),m.y>p.y&&(p.y=m.y),m.y<d.y&&(d.y=m.y),m.z>p.z&&(p.z=m.z),m.z<d.z&&(d.z=m.z)}return h&&(h.vadd(d,d),h.vadd(p,p)),f&&(d.x-=f,d.y-=f,d.z-=f,p.x+=f,p.y+=f,p.z+=f),this},a.prototype.copy=function(c){return this.lowerBound.copy(c.lowerBound),this.upperBound.copy(c.upperBound),this},a.prototype.clone=function(){return new a().copy(this)},a.prototype.extend=function(c){var h=c.lowerBound.x;this.lowerBound.x>h&&(this.lowerBound.x=h);var u=c.upperBound.x;this.upperBound.x<u&&(this.upperBound.x=u);var h=c.lowerBound.y;this.lowerBound.y>h&&(this.lowerBound.y=h);var u=c.upperBound.y;this.upperBound.y<u&&(this.upperBound.y=u);var h=c.lowerBound.z;this.lowerBound.z>h&&(this.lowerBound.z=h);var u=c.upperBound.z;this.upperBound.z<u&&(this.upperBound.z=u)},a.prototype.overlaps=function(c){var h=this.lowerBound,u=this.upperBound,f=c.lowerBound,d=c.upperBound;return(f.x<=u.x&&u.x<=d.x||h.x<=d.x&&d.x<=u.x)&&(f.y<=u.y&&u.y<=d.y||h.y<=d.y&&d.y<=u.y)&&(f.z<=u.z&&u.z<=d.z||h.z<=d.z&&d.z<=u.z)},a.prototype.contains=function(c){var h=this.lowerBound,u=this.upperBound,f=c.lowerBound,d=c.upperBound;return h.x<=f.x&&u.x>=d.x&&h.y<=f.y&&u.y>=d.y&&h.z<=f.z&&u.z>=d.z},a.prototype.getCorners=function(c,h,u,f,d,p,g,v){var m=this.lowerBound,y=this.upperBound;c.copy(m),h.set(y.x,m.y,m.z),u.set(y.x,y.y,m.z),f.set(m.x,y.y,y.z),d.set(y.x,m.y,m.z),p.set(m.x,y.y,m.z),g.set(m.x,m.y,y.z),v.copy(y)};var l=[new s,new s,new s,new s,new s,new s,new s,new s];a.prototype.toLocalFrame=function(c,h){var u=l,f=u[0],d=u[1],p=u[2],g=u[3],v=u[4],m=u[5],y=u[6],x=u[7];this.getCorners(f,d,p,g,v,m,y,x);for(var _=0;_!==8;_++){var b=u[_];c.pointToLocal(b,b)}return h.setFromPoints(u)},a.prototype.toWorldFrame=function(c,h){var u=l,f=u[0],d=u[1],p=u[2],g=u[3],v=u[4],m=u[5],y=u[6],x=u[7];this.getCorners(f,d,p,g,v,m,y,x);for(var _=0;_!==8;_++){var b=u[_];c.pointToWorld(b,b)}return h.setFromPoints(u)}},{"../math/Vec3":30,"../utils/Utils":53}],4:[function(n,i,r){i.exports=s;function s(){this.matrix=[]}s.prototype.get=function(a,o){if(a=a.index,o=o.index,o>a){var l=o;o=a,a=l}return this.matrix[(a*(a+1)>>1)+o-1]},s.prototype.set=function(a,o,l){if(a=a.index,o=o.index,o>a){var c=o;o=a,a=c}this.matrix[(a*(a+1)>>1)+o-1]=l?1:0},s.prototype.reset=function(){for(var a=0,o=this.matrix.length;a!==o;a++)this.matrix[a]=0},s.prototype.setNumObjects=function(a){this.matrix.length=a*(a-1)>>1}},{}],5:[function(n,i,r){var s=n("../objects/Body"),a=n("../math/Vec3"),o=n("../math/Quaternion");n("../shapes/Shape"),n("../shapes/Plane"),i.exports=l;function l(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}l.prototype.collisionPairs=function(g,v,m){throw new Error("collisionPairs not implemented for this BroadPhase class!")};var c=s.STATIC|s.KINEMATIC;l.prototype.needBroadphaseCollision=function(g,v){return!(!(g.collisionFilterGroup&v.collisionFilterMask)||!(v.collisionFilterGroup&g.collisionFilterMask)||(g.type&c||g.sleepState===s.SLEEPING)&&(v.type&c||v.sleepState===s.SLEEPING))},l.prototype.intersectionTest=function(g,v,m,y){this.useBoundingBoxes?this.doBoundingBoxBroadphase(g,v,m,y):this.doBoundingSphereBroadphase(g,v,m,y)};var h=new a;new a,new o,new a,l.prototype.doBoundingSphereBroadphase=function(g,v,m,y){var x=h;v.position.vsub(g.position,x);var _=Math.pow(g.boundingRadius+v.boundingRadius,2),b=x.norm2();b<_&&(m.push(g),y.push(v))},l.prototype.doBoundingBoxBroadphase=function(g,v,m,y){g.aabbNeedsUpdate&&g.computeAABB(),v.aabbNeedsUpdate&&v.computeAABB(),g.aabb.overlaps(v.aabb)&&(m.push(g),y.push(v))};var u={keys:[]},f=[],d=[];l.prototype.makePairsUnique=function(g,v){for(var m=u,y=f,x=d,_=g.length,b=0;b!==_;b++)y[b]=g[b],x[b]=v[b];g.length=0,v.length=0;for(var b=0;b!==_;b++){var w=y[b].id,S=x[b].id,C=w<S?w+","+S:S+","+w;m[C]=b,m.keys.push(C)}for(var b=0;b!==m.keys.length;b++){var C=m.keys.pop(),L=m[C];g.push(y[L]),v.push(x[L]),delete m[C]}},l.prototype.setWorld=function(g){};var p=new a;l.boundingSphereCheck=function(g,v){var m=p;return g.position.vsub(v.position,m),Math.pow(g.shape.boundingSphereRadius+v.shape.boundingSphereRadius,2)>m.norm2()},l.prototype.aabbQuery=function(g,v,m){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}},{"../math/Quaternion":28,"../math/Vec3":30,"../objects/Body":31,"../shapes/Plane":42,"../shapes/Shape":43}],6:[function(n,i,r){i.exports=l;var s=n("./Broadphase"),a=n("../math/Vec3"),o=n("../shapes/Shape");function l(h,u,f,d,p){s.apply(this),this.nx=f||10,this.ny=d||10,this.nz=p||10,this.aabbMin=h||new a(100,100,100),this.aabbMax=u||new a(-100,-100,-100);var g=this.nx*this.ny*this.nz;if(g<=0)throw"GridBroadphase: Each dimension's n must be >0";this.bins=[],this.binLengths=[],this.bins.length=g,this.binLengths.length=g;for(var v=0;v<g;v++)this.bins[v]=[],this.binLengths[v]=0}l.prototype=new s,l.prototype.constructor=l;var c=new a;new a,l.prototype.collisionPairs=function(h,u,f){var d=h.numObjects(),p=h.bodies,$=this.aabbMax,J=this.aabbMin,g=this.nx,v=this.ny,m=this.nz,y=v*m,x=m,_=1,b=$.x,w=$.y,S=$.z,C=J.x,L=J.y,M=J.z,E=g/(b-C),N=v/(w-L),k=m/(S-M),F=(b-C)/g,V=(w-L)/v,ee=(S-M)/m,R=Math.sqrt(F*F+V*V+ee*ee)*.5,T=o.types,H=T.SPHERE,O=T.PLANE;T.BOX,T.COMPOUND,T.CONVEXPOLYHEDRON;for(var B=this.bins,q=this.binLengths,G=this.bins.length,A=0;A!==G;A++)q[A]=0;var U=Math.ceil,J=Math.min,$=Math.max;function ie(Ee,it,je,Je,Ge,We,at){var se=(Ee-C)*E|0,Oe=(it-L)*N|0,He=(je-M)*k|0,et=U((Je-C)*E),te=U((Ge-L)*N),Ne=U((We-M)*k);se<0?se=0:se>=g&&(se=g-1),Oe<0?Oe=0:Oe>=v&&(Oe=v-1),He<0?He=0:He>=m&&(He=m-1),et<0?et=0:et>=g&&(et=g-1),te<0?te=0:te>=v&&(te=v-1),Ne<0?Ne=0:Ne>=m&&(Ne=m-1),se*=y,Oe*=x,He*=_,et*=y,te*=x,Ne*=_;for(var Ue=se;Ue<=et;Ue+=y)for(var Ke=Oe;Ke<=te;Ke+=x)for(var lt=He;lt<=Ne;lt+=_){var Et=Ue+Ke+lt;B[Et][q[Et]++]=at}}for(var A=0;A!==d;A++){var re=p[A],de=re.shape;switch(de.type){case H:var me=re.position.x,X=re.position.y,pe=re.position.z,he=de.radius;ie(me-he,X-he,pe-he,me+he,X+he,pe+he,re);break;case O:de.worldNormalNeedsUpdate&&de.computeWorldNormal(re.quaternion);var ce=de.worldNormal,oe=C+F*.5-re.position.x,ze=L+V*.5-re.position.y,Te=M+ee*.5-re.position.z,z=c;z.set(oe,ze,Te);for(var I=0,ue=0;I!==g;I++,ue+=y,z.y=ze,z.x+=F)for(var we=0,ve=0;we!==v;we++,ve+=x,z.z=Te,z.y+=V)for(var ge=0,ne=0;ge!==m;ge++,ne+=_,z.z+=ee)if(z.dot(ce)<R){var ye=ue+ve+ne;B[ye][q[ye]++]=re}break;default:re.aabbNeedsUpdate&&re.computeAABB(),ie(re.aabb.lowerBound.x,re.aabb.lowerBound.y,re.aabb.lowerBound.z,re.aabb.upperBound.x,re.aabb.upperBound.y,re.aabb.upperBound.z,re);break}}for(var A=0;A!==G;A++){var xe=q[A];if(xe>1)for(var Fe=B[A],I=0;I!==xe;I++)for(var re=Fe[I],we=0;we!==I;we++){var Pe=Fe[we];this.needBroadphaseCollision(re,Pe)&&this.intersectionTest(re,Pe,u,f)}}this.makePairsUnique(u,f)}},{"../math/Vec3":30,"../shapes/Shape":43,"./Broadphase":5}],7:[function(n,i,r){i.exports=o;var s=n("./Broadphase"),a=n("./AABB");function o(){s.apply(this)}o.prototype=new s,o.prototype.constructor=o,o.prototype.collisionPairs=function(l,c,h){var u=l.bodies,f=u.length,d,p,g,v;for(d=0;d!==f;d++)for(p=0;p!==d;p++)g=u[d],v=u[p],this.needBroadphaseCollision(g,v)&&this.intersectionTest(g,v,c,h)},new a,o.prototype.aabbQuery=function(l,c,h){h=h||[];for(var u=0;u<l.bodies.length;u++){var f=l.bodies[u];f.aabbNeedsUpdate&&f.computeAABB(),f.aabb.overlaps(c)&&h.push(f)}return h}},{"./AABB":3,"./Broadphase":5}],8:[function(n,i,r){i.exports=s;function s(){this.matrix={}}s.prototype.get=function(a,o){if(a=a.id,o=o.id,o>a){var l=o;o=a,a=l}return a+"-"+o in this.matrix},s.prototype.set=function(a,o,l){if(a=a.id,o=o.id,o>a){var c=o;o=a,a=c}l?this.matrix[a+"-"+o]=!0:delete this.matrix[a+"-"+o]},s.prototype.reset=function(){this.matrix={}},s.prototype.setNumObjects=function(a){}},{}],9:[function(n,i,r){i.exports=u;var s=n("../math/Vec3"),a=n("../math/Quaternion"),o=n("../math/Transform");n("../shapes/ConvexPolyhedron"),n("../shapes/Box");var l=n("../collision/RaycastResult"),c=n("../shapes/Shape"),h=n("../collision/AABB");function u(G,A){this.from=G?G.clone():new s,this.to=A?A.clone():new s,this._direction=new s,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=u.ANY,this.result=new l,this.hasHit=!1,this.callback=function(U){}}u.prototype.constructor=u,u.CLOSEST=1,u.ANY=2,u.ALL=4;var f=new h,d=[];u.prototype.intersectWorld=function(G,A){return this.mode=A.mode||u.ANY,this.result=A.result||new l,this.skipBackfaces=!!A.skipBackfaces,this.collisionFilterMask=typeof A.collisionFilterMask<"u"?A.collisionFilterMask:-1,this.collisionFilterGroup=typeof A.collisionFilterGroup<"u"?A.collisionFilterGroup:-1,A.from&&this.from.copy(A.from),A.to&&this.to.copy(A.to),this.callback=A.callback||function(){},this.hasHit=!1,this.result.reset(),this._updateDirection(),this.getAABB(f),d.length=0,G.broadphase.aabbQuery(G,f,d),this.intersectBodies(d),this.hasHit};var p=new s,g=new s;u.pointInTriangle=v;function v(G,A,U,J){J.vsub(A,O),U.vsub(A,p),G.vsub(A,g);var $=O.dot(O),ie=O.dot(p),re=O.dot(g),de=p.dot(p),me=p.dot(g),X,pe;return(X=de*re-ie*me)>=0&&(pe=$*me-ie*re)>=0&&X+pe<$*de-ie*ie}var m=new s,y=new a;u.prototype.intersectBody=function(G,A){A&&(this.result=A,this._updateDirection());var U=this.checkCollisionResponse;if(!(U&&!G.collisionResponse)&&!(!(this.collisionFilterGroup&G.collisionFilterMask)||!(G.collisionFilterGroup&this.collisionFilterMask)))for(var J=m,$=y,ie=0,re=G.shapes.length;ie<re;ie++){var de=G.shapes[ie];if(!(U&&!de.collisionResponse)&&(G.quaternion.mult(G.shapeOrientations[ie],$),G.quaternion.vmult(G.shapeOffsets[ie],J),J.vadd(G.position,J),this.intersectShape(de,$,J,G),this.result._shouldStop))break}},u.prototype.intersectBodies=function(G,A){A&&(this.result=A,this._updateDirection());for(var U=0,J=G.length;!this.result._shouldStop&&U<J;U++)this.intersectBody(G[U])},u.prototype._updateDirection=function(){this.to.vsub(this.from,this._direction),this._direction.normalize()},u.prototype.intersectShape=function(G,A,U,J){var $=this.from,ie=q($,this._direction,U);if(!(ie>G.boundingSphereRadius)){var re=this[G.type];re&&re.call(this,G,A,U,J)}},new s,new s;var x=new s,_=new s,b=new s,w=new s;new s,new l,u.prototype.intersectBox=function(G,A,U,J){return this.intersectConvex(G.convexPolyhedronRepresentation,A,U,J)},u.prototype[c.types.BOX]=u.prototype.intersectBox,u.prototype.intersectPlane=function(G,A,U,J){var $=this.from,ie=this.to,re=this._direction,de=new s(0,0,1);A.vmult(de,de);var me=new s;$.vsub(U,me);var X=me.dot(de);ie.vsub(U,me);var pe=me.dot(de);if(!(X*pe>0)&&!($.distanceTo(ie)<X)){var he=de.dot(re);if(!(Math.abs(he)<this.precision)){var ce=new s,oe=new s,ze=new s;$.vsub(U,ce);var Te=-de.dot(ce)/he;re.scale(Te,oe),$.vadd(oe,ze),this.reportIntersection(de,ze,G,J,-1)}}},u.prototype[c.types.PLANE]=u.prototype.intersectPlane,u.prototype.getAABB=function(G){var A=this.to,U=this.from;G.lowerBound.x=Math.min(A.x,U.x),G.lowerBound.y=Math.min(A.y,U.y),G.lowerBound.z=Math.min(A.z,U.z),G.upperBound.x=Math.max(A.x,U.x),G.upperBound.y=Math.max(A.y,U.y),G.upperBound.z=Math.max(A.z,U.z)};var S={faceList:[0]};u.prototype.intersectHeightfield=function(G,A,U,J){G.data,G.elementSize;var $=new s,ie=new u(this.from,this.to);o.pointToLocalFrame(U,A,ie.from,ie.from),o.pointToLocalFrame(U,A,ie.to,ie.to);var re=[],de=null,me=null,X=null,pe=null,he=G.getIndexOfPosition(ie.from.x,ie.from.y,re,!1);if(he&&(de=re[0],me=re[1],X=re[0],pe=re[1]),he=G.getIndexOfPosition(ie.to.x,ie.to.y,re,!1),he&&((de===null||re[0]<de)&&(de=re[0]),(X===null||re[0]>X)&&(X=re[0]),(me===null||re[1]<me)&&(me=re[1]),(pe===null||re[1]>pe)&&(pe=re[1])),de!==null){var ce=[];G.getRectMinMax(de,me,X,pe,ce),ce[0],ce[1];for(var oe=de;oe<=X;oe++)for(var ze=me;ze<=pe;ze++){if(this.result._shouldStop||(G.getConvexTrianglePillar(oe,ze,!1),o.pointToWorldFrame(U,A,G.pillarOffset,$),this.intersectConvex(G.pillarConvex,A,$,J,S),this.result._shouldStop))return;G.getConvexTrianglePillar(oe,ze,!0),o.pointToWorldFrame(U,A,G.pillarOffset,$),this.intersectConvex(G.pillarConvex,A,$,J,S)}}},u.prototype[c.types.HEIGHTFIELD]=u.prototype.intersectHeightfield;var C=new s,L=new s;u.prototype.intersectSphere=function(G,A,U,J){var $=this.from,ie=this.to,re=G.radius,de=Math.pow(ie.x-$.x,2)+Math.pow(ie.y-$.y,2)+Math.pow(ie.z-$.z,2),me=2*((ie.x-$.x)*($.x-U.x)+(ie.y-$.y)*($.y-U.y)+(ie.z-$.z)*($.z-U.z)),X=Math.pow($.x-U.x,2)+Math.pow($.y-U.y,2)+Math.pow($.z-U.z,2)-Math.pow(re,2),pe=Math.pow(me,2)-4*de*X,he=C,ce=L;if(!(pe<0))if(pe===0)$.lerp(ie,pe,he),he.vsub(U,ce),ce.normalize(),this.reportIntersection(ce,he,G,J,-1);else{var oe=(-me-Math.sqrt(pe))/(2*de),ze=(-me+Math.sqrt(pe))/(2*de);if(oe>=0&&oe<=1&&($.lerp(ie,oe,he),he.vsub(U,ce),ce.normalize(),this.reportIntersection(ce,he,G,J,-1)),this.result._shouldStop)return;ze>=0&&ze<=1&&($.lerp(ie,ze,he),he.vsub(U,ce),ce.normalize(),this.reportIntersection(ce,he,G,J,-1))}},u.prototype[c.types.SPHERE]=u.prototype.intersectSphere;var M=new s;new s,new s;var E=new s;u.prototype.intersectConvex=function(A,U,J,$,ie){for(var re=M,de=E,me=ie&&ie.faceList||null,X=A.faces,pe=A.vertices,he=A.faceNormals,ce=this._direction,oe=this.from,ze=this.to,Te=oe.distanceTo(ze),z=me?me.length:X.length,I=this.result,ue=0;!I._shouldStop&&ue<z;ue++){var we=me?me[ue]:ue,ve=X[we],ge=he[we],ne=U,ye=J;de.copy(pe[ve[0]]),ne.vmult(de,de),de.vadd(ye,de),de.vsub(oe,de),ne.vmult(ge,re);var xe=ce.dot(re);if(!(Math.abs(xe)<this.precision)){var Fe=re.dot(de)/xe;if(!(Fe<0)){ce.mult(Fe,x),x.vadd(oe,x),_.copy(pe[ve[0]]),ne.vmult(_,_),ye.vadd(_,_);for(var Pe=1;!I._shouldStop&&Pe<ve.length-1;Pe++){b.copy(pe[ve[Pe]]),w.copy(pe[ve[Pe+1]]),ne.vmult(b,b),ne.vmult(w,w),ye.vadd(b,b),ye.vadd(w,w);var Ee=x.distanceTo(oe);!(v(x,_,b,w)||v(x,b,_,w))||Ee>Te||this.reportIntersection(re,x,A,$,we)}}}}},u.prototype[c.types.CONVEXPOLYHEDRON]=u.prototype.intersectConvex;var N=new s,k=new s,F=new s,V=new s,ee=new s,R=new s;new h;var T=[],H=new o;u.prototype.intersectTrimesh=function(A,U,J,$,ie){var re=N,de=T,me=H,X=E,pe=k,he=F,ce=V,oe=R,ze=ee;ie&&ie.faceList;var Te=A.indices;A.vertices,A.faceNormals;var z=this.from,I=this.to,ue=this._direction;me.position.copy(J),me.quaternion.copy(U),o.vectorToLocalFrame(J,U,ue,pe),o.pointToLocalFrame(J,U,z,he),o.pointToLocalFrame(J,U,I,ce);var we=he.distanceSquared(ce);A.tree.rayQuery(this,me,de);for(var ve=0,ge=de.length;!this.result._shouldStop&&ve!==ge;ve++){var ne=de[ve];A.getNormal(ne,re),A.getVertex(Te[ne*3],_),_.vsub(he,X);var ye=pe.dot(re),xe=re.dot(X)/ye;if(!(xe<0)){pe.scale(xe,x),x.vadd(he,x),A.getVertex(Te[ne*3+1],b),A.getVertex(Te[ne*3+2],w);var Fe=x.distanceSquared(he);!(v(x,b,_,w)||v(x,_,b,w))||Fe>we||(o.vectorToWorldFrame(U,re,ze),o.pointToWorldFrame(J,U,x,oe),this.reportIntersection(ze,oe,A,$,ne))}}de.length=0},u.prototype[c.types.TRIMESH]=u.prototype.intersectTrimesh,u.prototype.reportIntersection=function(G,A,U,J,$){var ie=this.from,re=this.to,de=ie.distanceTo(A),me=this.result;if(!(this.skipBackfaces&&G.dot(this._direction)>0))switch(me.hitFaceIndex=typeof $<"u"?$:-1,this.mode){case u.ALL:this.hasHit=!0,me.set(ie,re,G,A,U,J,de),me.hasHit=!0,this.callback(me);break;case u.CLOSEST:(de<me.distance||!me.hasHit)&&(this.hasHit=!0,me.hasHit=!0,me.set(ie,re,G,A,U,J,de));break;case u.ANY:this.hasHit=!0,me.hasHit=!0,me.set(ie,re,G,A,U,J,de),me._shouldStop=!0;break}};var O=new s,B=new s;function q(G,A,U){U.vsub(G,O);var J=O.dot(A);A.mult(J,B),B.vadd(G,B);var $=U.distanceTo(B);return $}},{"../collision/AABB":3,"../collision/RaycastResult":10,"../math/Quaternion":28,"../math/Transform":29,"../math/Vec3":30,"../shapes/Box":37,"../shapes/ConvexPolyhedron":38,"../shapes/Shape":43}],10:[function(n,i,r){var s=n("../math/Vec3");i.exports=a;function a(){this.rayFromWorld=new s,this.rayToWorld=new s,this.hitNormalWorld=new s,this.hitPointWorld=new s,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this._shouldStop=!1}a.prototype.reset=function(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this._shouldStop=!1},a.prototype.abort=function(){this._shouldStop=!0},a.prototype.set=function(o,l,c,h,u,f,d){this.rayFromWorld.copy(o),this.rayToWorld.copy(l),this.hitNormalWorld.copy(c),this.hitPointWorld.copy(h),this.shape=u,this.body=f,this.distance=d}},{"../math/Vec3":30}],11:[function(n,i,r){n("../shapes/Shape");var s=n("../collision/Broadphase");i.exports=a;function a(o){s.apply(this),this.axisList=[],this.world=null,this.axisIndex=0;var l=this.axisList;this._addBodyHandler=function(c){l.push(c.body)},this._removeBodyHandler=function(c){var h=l.indexOf(c.body);h!==-1&&l.splice(h,1)},o&&this.setWorld(o)}a.prototype=new s,a.prototype.setWorld=function(o){this.axisList.length=0;for(var l=0;l<o.bodies.length;l++)this.axisList.push(o.bodies[l]);o.removeEventListener("addBody",this._addBodyHandler),o.removeEventListener("removeBody",this._removeBodyHandler),o.addEventListener("addBody",this._addBodyHandler),o.addEventListener("removeBody",this._removeBodyHandler),this.world=o,this.dirty=!0},a.insertionSortX=function(o){for(var l=1,c=o.length;l<c;l++){for(var h=o[l],u=l-1;u>=0&&!(o[u].aabb.lowerBound.x<=h.aabb.lowerBound.x);u--)o[u+1]=o[u];o[u+1]=h}return o},a.insertionSortY=function(o){for(var l=1,c=o.length;l<c;l++){for(var h=o[l],u=l-1;u>=0&&!(o[u].aabb.lowerBound.y<=h.aabb.lowerBound.y);u--)o[u+1]=o[u];o[u+1]=h}return o},a.insertionSortZ=function(o){for(var l=1,c=o.length;l<c;l++){for(var h=o[l],u=l-1;u>=0&&!(o[u].aabb.lowerBound.z<=h.aabb.lowerBound.z);u--)o[u+1]=o[u];o[u+1]=h}return o},a.prototype.collisionPairs=function(o,l,c){var h=this.axisList,u=h.length,f=this.axisIndex,d,p;for(this.dirty&&(this.sortList(),this.dirty=!1),d=0;d!==u;d++){var g=h[d];for(p=d+1;p<u;p++){var v=h[p];if(this.needBroadphaseCollision(g,v)){if(!a.checkBounds(g,v,f))break;this.intersectionTest(g,v,l,c)}}}},a.prototype.sortList=function(){for(var o=this.axisList,l=this.axisIndex,c=o.length,h=0;h!==c;h++){var u=o[h];u.aabbNeedsUpdate&&u.computeAABB()}l===0?a.insertionSortX(o):l===1?a.insertionSortY(o):l===2&&a.insertionSortZ(o)},a.checkBounds=function(o,l,c){var h,u;c===0?(h=o.position.x,u=l.position.x):c===1?(h=o.position.y,u=l.position.y):c===2&&(h=o.position.z,u=l.position.z);var f=o.boundingRadius,d=l.boundingRadius,p=h+f,g=u-d;return g<p},a.prototype.autoDetectAxis=function(){for(var o=0,l=0,c=0,h=0,u=0,f=0,d=this.axisList,p=d.length,g=1/p,v=0;v!==p;v++){var m=d[v],y=m.position.x;o+=y,l+=y*y;var x=m.position.y;c+=x,h+=x*x;var _=m.position.z;u+=_,f+=_*_}var b=l-o*o*g,w=h-c*c*g,S=f-u*u*g;b>w?b>S?this.axisIndex=0:this.axisIndex=2:w>S?this.axisIndex=1:this.axisIndex=2},a.prototype.aabbQuery=function(o,l,c){c=c||[],this.dirty&&(this.sortList(),this.dirty=!1);var h=this.axisIndex,u="x";h===1&&(u="y"),h===2&&(u="z");var f=this.axisList;l.lowerBound[u],l.upperBound[u];for(var d=0;d<f.length;d++){var p=f[d];p.aabbNeedsUpdate&&p.computeAABB(),p.aabb.overlaps(l)&&c.push(p)}return c}},{"../collision/Broadphase":5,"../shapes/Shape":43}],12:[function(n,i,r){i.exports=c,n("./Constraint");var s=n("./PointToPointConstraint"),a=n("../equations/ConeEquation"),o=n("../equations/RotationalEquation");n("../equations/ContactEquation");var l=n("../math/Vec3");function c(h,u,f){f=f||{};var d=typeof f.maxForce<"u"?f.maxForce:1e6,p=f.pivotA?f.pivotA.clone():new l,g=f.pivotB?f.pivotB.clone():new l;this.axisA=f.axisA?f.axisA.clone():new l,this.axisB=f.axisB?f.axisB.clone():new l,s.call(this,h,p,u,g,d),this.collideConnected=!!f.collideConnected,this.angle=typeof f.angle<"u"?f.angle:0;var v=this.coneEquation=new a(h,u,f),m=this.twistEquation=new o(h,u,f);this.twistAngle=typeof f.twistAngle<"u"?f.twistAngle:0,v.maxForce=0,v.minForce=-d,m.maxForce=0,m.minForce=-d,this.equations.push(v,m)}c.prototype=new s,c.constructor=c,new l,new l,c.prototype.update=function(){var h=this.bodyA,u=this.bodyB,f=this.coneEquation,d=this.twistEquation;s.prototype.update.call(this),h.vectorToWorldFrame(this.axisA,f.axisA),u.vectorToWorldFrame(this.axisB,f.axisB),this.axisA.tangents(d.axisA,d.axisA),h.vectorToWorldFrame(d.axisA,d.axisA),this.axisB.tangents(d.axisB,d.axisB),u.vectorToWorldFrame(d.axisB,d.axisB),f.angle=this.angle,d.maxAngle=this.twistAngle}},{"../equations/ConeEquation":18,"../equations/ContactEquation":19,"../equations/RotationalEquation":22,"../math/Vec3":30,"./Constraint":13,"./PointToPointConstraint":17}],13:[function(n,i,r){i.exports=a;var s=n("../utils/Utils");function a(o,l,c){c=s.defaults(c,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=o,this.bodyB=l,this.id=a.idCounter++,this.collideConnected=c.collideConnected,c.wakeUpBodies&&(o&&o.wakeUp(),l&&l.wakeUp())}a.prototype.update=function(){throw new Error("method update() not implmemented in this Constraint subclass!")},a.prototype.enable=function(){for(var o=this.equations,l=0;l<o.length;l++)o[l].enabled=!0},a.prototype.disable=function(){for(var o=this.equations,l=0;l<o.length;l++)o[l].enabled=!1},a.idCounter=0},{"../utils/Utils":53}],14:[function(n,i,r){i.exports=o;var s=n("./Constraint"),a=n("../equations/ContactEquation");function o(l,c,h,u){s.call(this,l,c),typeof h>"u"&&(h=l.position.distanceTo(c.position)),typeof u>"u"&&(u=1e6),this.distance=h;var f=this.distanceEquation=new a(l,c);this.equations.push(f),f.minForce=-u,f.maxForce=u}o.prototype=new s,o.prototype.update=function(){var l=this.bodyA,c=this.bodyB,h=this.distanceEquation,u=this.distance*.5,f=h.ni;c.position.vsub(l.position,f),f.normalize(),f.mult(u,h.ri),f.mult(-u,h.rj)}},{"../equations/ContactEquation":19,"./Constraint":13}],15:[function(n,i,r){i.exports=c,n("./Constraint");var s=n("./PointToPointConstraint"),a=n("../equations/RotationalEquation"),o=n("../equations/RotationalMotorEquation");n("../equations/ContactEquation");var l=n("../math/Vec3");function c(f,d,p){p=p||{};var g=typeof p.maxForce<"u"?p.maxForce:1e6,v=p.pivotA?p.pivotA.clone():new l,m=p.pivotB?p.pivotB.clone():new l;s.call(this,f,v,d,m,g);var y=this.axisA=p.axisA?p.axisA.clone():new l(1,0,0);y.normalize();var x=this.axisB=p.axisB?p.axisB.clone():new l(1,0,0);x.normalize();var _=this.rotationalEquation1=new a(f,d,p),b=this.rotationalEquation2=new a(f,d,p),w=this.motorEquation=new o(f,d,g);w.enabled=!1,this.equations.push(_,b,w)}c.prototype=new s,c.constructor=c,c.prototype.enableMotor=function(){this.motorEquation.enabled=!0},c.prototype.disableMotor=function(){this.motorEquation.enabled=!1},c.prototype.setMotorSpeed=function(f){this.motorEquation.targetVelocity=f},c.prototype.setMotorMaxForce=function(f){this.motorEquation.maxForce=f,this.motorEquation.minForce=-f};var h=new l,u=new l;c.prototype.update=function(){var f=this.bodyA,d=this.bodyB,p=this.motorEquation,g=this.rotationalEquation1,v=this.rotationalEquation2,m=h,y=u,x=this.axisA,_=this.axisB;s.prototype.update.call(this),f.quaternion.vmult(x,m),d.quaternion.vmult(_,y),m.tangents(g.axisA,v.axisA),g.axisB.copy(y),v.axisB.copy(y),this.motorEquation.enabled&&(f.quaternion.vmult(this.axisA,p.axisA),d.quaternion.vmult(this.axisB,p.axisB))}},{"../equations/ContactEquation":19,"../equations/RotationalEquation":22,"../equations/RotationalMotorEquation":23,"../math/Vec3":30,"./Constraint":13,"./PointToPointConstraint":17}],16:[function(n,i,r){i.exports=l,n("./Constraint");var s=n("./PointToPointConstraint"),a=n("../equations/RotationalEquation");n("../equations/RotationalMotorEquation"),n("../equations/ContactEquation");var o=n("../math/Vec3");function l(c,h,u){u=u||{};var f=typeof u.maxForce<"u"?u.maxForce:1e6,d=new o,p=new o,g=new o;c.position.vadd(h.position,g),g.scale(.5,g),h.pointToLocalFrame(g,p),c.pointToLocalFrame(g,d),s.call(this,c,d,h,p,f);var v=this.rotationalEquation1=new a(c,h,u),m=this.rotationalEquation2=new a(c,h,u),y=this.rotationalEquation3=new a(c,h,u);this.equations.push(v,m,y)}l.prototype=new s,l.constructor=l,new o,new o,l.prototype.update=function(){var c=this.bodyA,h=this.bodyB;this.motorEquation;var u=this.rotationalEquation1,f=this.rotationalEquation2,d=this.rotationalEquation3;s.prototype.update.call(this),c.vectorToWorldFrame(o.UNIT_X,u.axisA),h.vectorToWorldFrame(o.UNIT_Y,u.axisB),c.vectorToWorldFrame(o.UNIT_Y,f.axisA),h.vectorToWorldFrame(o.UNIT_Z,f.axisB),c.vectorToWorldFrame(o.UNIT_Z,d.axisA),h.vectorToWorldFrame(o.UNIT_X,d.axisB)}},{"../equations/ContactEquation":19,"../equations/RotationalEquation":22,"../equations/RotationalMotorEquation":23,"../math/Vec3":30,"./Constraint":13,"./PointToPointConstraint":17}],17:[function(n,i,r){i.exports=l;var s=n("./Constraint"),a=n("../equations/ContactEquation"),o=n("../math/Vec3");function l(c,h,u,f,d){s.call(this,c,u),d=typeof d<"u"?d:1e6,this.pivotA=h?h.clone():new o,this.pivotB=f?f.clone():new o;var p=this.equationX=new a(c,u),g=this.equationY=new a(c,u),v=this.equationZ=new a(c,u);this.equations.push(p,g,v),p.minForce=g.minForce=v.minForce=-d,p.maxForce=g.maxForce=v.maxForce=d,p.ni.set(1,0,0),g.ni.set(0,1,0),v.ni.set(0,0,1)}l.prototype=new s,l.prototype.update=function(){var c=this.bodyA,h=this.bodyB,u=this.equationX,f=this.equationY,d=this.equationZ;c.quaternion.vmult(this.pivotA,u.ri),h.quaternion.vmult(this.pivotB,u.rj),f.ri.copy(u.ri),f.rj.copy(u.rj),d.ri.copy(u.ri),d.rj.copy(u.rj)}},{"../equations/ContactEquation":19,"../math/Vec3":30,"./Constraint":13}],18:[function(n,i,r){i.exports=o;var s=n("../math/Vec3");n("../math/Mat3");var a=n("./Equation");function o(h,u,f){f=f||{};var d=typeof f.maxForce<"u"?f.maxForce:1e6;a.call(this,h,u,-d,d),this.axisA=f.axisA?f.axisA.clone():new s(1,0,0),this.axisB=f.axisB?f.axisB.clone():new s(0,1,0),this.angle=typeof f.angle<"u"?f.angle:0}o.prototype=new a,o.prototype.constructor=o;var l=new s,c=new s;o.prototype.computeB=function(h){var u=this.a,f=this.b,d=this.axisA,p=this.axisB,g=l,v=c,m=this.jacobianElementA,y=this.jacobianElementB;d.cross(p,g),p.cross(d,v),m.rotational.copy(v),y.rotational.copy(g);var x=Math.cos(this.angle)-d.dot(p),_=this.computeGW(),b=this.computeGiMf(),w=-x*u-_*f-h*b;return w}},{"../math/Mat3":27,"../math/Vec3":30,"./Equation":20}],19:[function(n,i,r){i.exports=o;var s=n("./Equation"),a=n("../math/Vec3");n("../math/Mat3");function o(v,m,y){y=typeof y<"u"?y:1e6,s.call(this,v,m,0,y),this.restitution=0,this.ri=new a,this.rj=new a,this.ni=new a}o.prototype=new s,o.prototype.constructor=o;var l=new a,c=new a,h=new a;o.prototype.computeB=function(v){var m=this.a,y=this.b,x=this.bi,_=this.bj,b=this.ri,w=this.rj,S=l,C=c,L=x.velocity,M=x.angularVelocity;x.force,x.torque;var E=_.velocity,N=_.angularVelocity;_.force,_.torque;var k=h,F=this.jacobianElementA,V=this.jacobianElementB,ee=this.ni;b.cross(ee,S),w.cross(ee,C),ee.negate(F.spatial),S.negate(F.rotational),V.spatial.copy(ee),V.rotational.copy(C),k.copy(_.position),k.vadd(w,k),k.vsub(x.position,k),k.vsub(b,k);var R=ee.dot(k),T=this.restitution+1,H=T*E.dot(ee)-T*L.dot(ee)+N.dot(C)-M.dot(S),O=this.computeGiMf(),B=-R*m-H*y-v*O;return B};var u=new a,f=new a,d=new a,p=new a,g=new a;o.prototype.getImpactVelocityAlongNormal=function(){var v=u,m=f,y=d,x=p,_=g;return this.bi.position.vadd(this.ri,y),this.bj.position.vadd(this.rj,x),this.bi.getVelocityAtWorldPoint(y,v),this.bj.getVelocityAtWorldPoint(x,m),v.vsub(m,_),this.ni.dot(_)}},{"../math/Mat3":27,"../math/Vec3":30,"./Equation":20}],20:[function(n,i,r){i.exports=o;var s=n("../math/JacobianElement"),a=n("../math/Vec3");function o(g,v,m,y){this.id=o.id++,this.minForce=typeof m>"u"?-1e6:m,this.maxForce=typeof y>"u"?1e6:y,this.bi=g,this.bj=v,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new s,this.jacobianElementB=new s,this.enabled=!0,this.setSpookParams(1e7,4,1/60)}o.prototype.constructor=o,o.id=0,o.prototype.setSpookParams=function(g,v,m){var y=v,x=g,_=m;this.a=4/(_*(1+4*y)),this.b=4*y/(1+4*y),this.eps=4/(_*_*x*(1+4*y))},o.prototype.computeB=function(g,v,m){var y=this.computeGW(),x=this.computeGq(),_=this.computeGiMf();return-x*g-y*v-_*m},o.prototype.computeGq=function(){var g=this.jacobianElementA,v=this.jacobianElementB,m=this.bi,y=this.bj,x=m.position,_=y.position;return g.spatial.dot(x)+v.spatial.dot(_)};var l=new a;o.prototype.computeGW=function(){var g=this.jacobianElementA,v=this.jacobianElementB,m=this.bi,y=this.bj,x=m.velocity,_=y.velocity,b=m.angularVelocity||l,w=y.angularVelocity||l;return g.multiplyVectors(x,b)+v.multiplyVectors(_,w)},o.prototype.computeGWlambda=function(){var g=this.jacobianElementA,v=this.jacobianElementB,m=this.bi,y=this.bj,x=m.vlambda,_=y.vlambda,b=m.wlambda||l,w=y.wlambda||l;return g.multiplyVectors(x,b)+v.multiplyVectors(_,w)};var c=new a,h=new a,u=new a,f=new a;o.prototype.computeGiMf=function(){var g=this.jacobianElementA,v=this.jacobianElementB,m=this.bi,y=this.bj,x=m.force,_=m.torque,b=y.force,w=y.torque,S=m.invMassSolve,C=y.invMassSolve;return m.invInertiaWorldSolve?m.invInertiaWorldSolve.vmult(_,u):u.set(0,0,0),y.invInertiaWorldSolve?y.invInertiaWorldSolve.vmult(w,f):f.set(0,0,0),x.mult(S,c),b.mult(C,h),g.multiplyVectors(c,u)+v.multiplyVectors(h,f)};var d=new a;o.prototype.computeGiMGt=function(){var g=this.jacobianElementA,v=this.jacobianElementB,m=this.bi,y=this.bj,x=m.invMassSolve,_=y.invMassSolve,b=m.invInertiaWorldSolve,w=y.invInertiaWorldSolve,S=x+_;return b&&(b.vmult(g.rotational,d),S+=d.dot(g.rotational)),w&&(w.vmult(v.rotational,d),S+=d.dot(v.rotational)),S};var p=new a;new a,new a,new a,new a,new a,o.prototype.addToWlambda=function(g){var v=this.jacobianElementA,m=this.jacobianElementB,y=this.bi,x=this.bj,_=p;v.spatial.mult(y.invMassSolve*g,_),y.vlambda.vadd(_,y.vlambda),m.spatial.mult(x.invMassSolve*g,_),x.vlambda.vadd(_,x.vlambda),y.invInertiaWorldSolve&&(y.invInertiaWorldSolve.vmult(v.rotational,_),_.mult(g,_),y.wlambda.vadd(_,y.wlambda)),x.invInertiaWorldSolve&&(x.invInertiaWorldSolve.vmult(m.rotational,_),_.mult(g,_),x.wlambda.vadd(_,x.wlambda))},o.prototype.computeC=function(){return this.computeGiMGt()+this.eps}},{"../math/JacobianElement":26,"../math/Vec3":30}],21:[function(n,i,r){i.exports=o;var s=n("./Equation"),a=n("../math/Vec3");n("../math/Mat3");function o(h,u,f){s.call(this,h,u,-f,f),this.ri=new a,this.rj=new a,this.t=new a}o.prototype=new s,o.prototype.constructor=o;var l=new a,c=new a;o.prototype.computeB=function(h){this.a;var u=this.b;this.bi,this.bj;var f=this.ri,d=this.rj,p=l,g=c,v=this.t;f.cross(v,p),d.cross(v,g);var m=this.jacobianElementA,y=this.jacobianElementB;v.negate(m.spatial),p.negate(m.rotational),y.spatial.copy(v),y.rotational.copy(g);var x=this.computeGW(),_=this.computeGiMf(),b=-x*u-h*_;return b}},{"../math/Mat3":27,"../math/Vec3":30,"./Equation":20}],22:[function(n,i,r){i.exports=o;var s=n("../math/Vec3");n("../math/Mat3");var a=n("./Equation");function o(h,u,f){f=f||{};var d=typeof f.maxForce<"u"?f.maxForce:1e6;a.call(this,h,u,-d,d),this.axisA=f.axisA?f.axisA.clone():new s(1,0,0),this.axisB=f.axisB?f.axisB.clone():new s(0,1,0),this.maxAngle=Math.PI/2}o.prototype=new a,o.prototype.constructor=o;var l=new s,c=new s;o.prototype.computeB=function(h){var u=this.a,f=this.b,d=this.axisA,p=this.axisB,g=l,v=c,m=this.jacobianElementA,y=this.jacobianElementB;d.cross(p,g),p.cross(d,v),m.rotational.copy(v),y.rotational.copy(g);var x=Math.cos(this.maxAngle)-d.dot(p),_=this.computeGW(),b=this.computeGiMf(),w=-x*u-_*f-h*b;return w}},{"../math/Mat3":27,"../math/Vec3":30,"./Equation":20}],23:[function(n,i,r){i.exports=o;var s=n("../math/Vec3");n("../math/Mat3");var a=n("./Equation");function o(l,c,h){h=typeof h<"u"?h:1e6,a.call(this,l,c,-h,h),this.axisA=new s,this.axisB=new s,this.targetVelocity=0}o.prototype=new a,o.prototype.constructor=o,o.prototype.computeB=function(l){this.a;var c=this.b;this.bi,this.bj;var h=this.axisA,u=this.axisB,f=this.jacobianElementA,d=this.jacobianElementB;f.rotational.copy(h),u.negate(d.rotational);var p=this.computeGW()-this.targetVelocity,g=this.computeGiMf(),v=-p*c-l*g;return v}},{"../math/Mat3":27,"../math/Vec3":30,"./Equation":20}],24:[function(n,i,r){var s=n("../utils/Utils");i.exports=a;function a(o,l,c){c=s.defaults(c,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=a.idCounter++,this.materials=[o,l],this.friction=c.friction,this.restitution=c.restitution,this.contactEquationStiffness=c.contactEquationStiffness,this.contactEquationRelaxation=c.contactEquationRelaxation,this.frictionEquationStiffness=c.frictionEquationStiffness,this.frictionEquationRelaxation=c.frictionEquationRelaxation}a.idCounter=0},{"../utils/Utils":53}],25:[function(n,i,r){i.exports=s;function s(a){var o="";a=a||{},typeof a=="string"?(o=a,a={}):typeof a=="object"&&(o=""),this.name=o,this.id=s.idCounter++,this.friction=typeof a.friction<"u"?a.friction:-1,this.restitution=typeof a.restitution<"u"?a.restitution:-1}s.idCounter=0},{}],26:[function(n,i,r){i.exports=a;var s=n("./Vec3");function a(){this.spatial=new s,this.rotational=new s}a.prototype.multiplyElement=function(o){return o.spatial.dot(this.spatial)+o.rotational.dot(this.rotational)},a.prototype.multiplyVectors=function(o,l){return o.dot(this.spatial)+l.dot(this.rotational)}},{"./Vec3":30}],27:[function(n,i,r){i.exports=a;var s=n("./Vec3");function a(o){o?this.elements=o:this.elements=[0,0,0,0,0,0,0,0,0]}a.prototype.identity=function(){var o=this.elements;o[0]=1,o[1]=0,o[2]=0,o[3]=0,o[4]=1,o[5]=0,o[6]=0,o[7]=0,o[8]=1},a.prototype.setZero=function(){var o=this.elements;o[0]=0,o[1]=0,o[2]=0,o[3]=0,o[4]=0,o[5]=0,o[6]=0,o[7]=0,o[8]=0},a.prototype.setTrace=function(o){var l=this.elements;l[0]=o.x,l[4]=o.y,l[8]=o.z},a.prototype.getTrace=function(l){var l=l||new s,c=this.elements;l.x=c[0],l.y=c[4],l.z=c[8]},a.prototype.vmult=function(o,l){l=l||new s;var c=this.elements,h=o.x,u=o.y,f=o.z;return l.x=c[0]*h+c[1]*u+c[2]*f,l.y=c[3]*h+c[4]*u+c[5]*f,l.z=c[6]*h+c[7]*u+c[8]*f,l},a.prototype.smult=function(o){for(var l=0;l<this.elements.length;l++)this.elements[l]*=o},a.prototype.mmult=function(o,l){for(var c=l||new a,h=0;h<3;h++)for(var u=0;u<3;u++){for(var f=0,d=0;d<3;d++)f+=o.elements[h+d*3]*this.elements[d+u*3];c.elements[h+u*3]=f}return c},a.prototype.scale=function(o,l){l=l||new a;for(var c=this.elements,h=l.elements,u=0;u!==3;u++)h[3*u+0]=o.x*c[3*u+0],h[3*u+1]=o.y*c[3*u+1],h[3*u+2]=o.z*c[3*u+2];return l},a.prototype.solve=function(o,l){l=l||new s;for(var c=3,h=4,u=[],f=0;f<c*h;f++)u.push(0);var f,d;for(f=0;f<3;f++)for(d=0;d<3;d++)u[f+h*d]=this.elements[f+3*d];u[3+4*0]=o.x,u[3+4*1]=o.y,u[3+4*2]=o.z;var p=3,g=p,v,m=4,y;do{if(f=g-p,u[f+h*f]===0){for(d=f+1;d<g;d++)if(u[f+h*d]!==0){v=m;do y=m-v,u[y+h*f]+=u[y+h*d];while(--v);break}}if(u[f+h*f]!==0)for(d=f+1;d<g;d++){var x=u[f+h*d]/u[f+h*f];v=m;do y=m-v,u[y+h*d]=y<=f?0:u[y+h*d]-u[y+h*f]*x;while(--v)}}while(--p);if(l.z=u[2*h+3]/u[2*h+2],l.y=(u[1*h+3]-u[1*h+2]*l.z)/u[1*h+1],l.x=(u[0*h+3]-u[0*h+2]*l.z-u[0*h+1]*l.y)/u[0*h+0],isNaN(l.x)||isNaN(l.y)||isNaN(l.z)||l.x===1/0||l.y===1/0||l.z===1/0)throw"Could not solve equation! Got x=["+l.toString()+"], b=["+o.toString()+"], A=["+this.toString()+"]";return l},a.prototype.e=function(o,l,c){if(c===void 0)return this.elements[l+3*o];this.elements[l+3*o]=c},a.prototype.copy=function(o){for(var l=0;l<o.elements.length;l++)this.elements[l]=o.elements[l];return this},a.prototype.toString=function(){for(var o="",l=",",c=0;c<9;c++)o+=this.elements[c]+l;return o},a.prototype.reverse=function(o){o=o||new a;for(var l=3,c=6,h=[],u=0;u<l*c;u++)h.push(0);var u,f;for(u=0;u<3;u++)for(f=0;f<3;f++)h[u+c*f]=this.elements[u+3*f];h[3+6*0]=1,h[3+6*1]=0,h[3+6*2]=0,h[4+6*0]=0,h[4+6*1]=1,h[4+6*2]=0,h[5+6*0]=0,h[5+6*1]=0,h[5+6*2]=1;var d=3,p=d,g,v=c,m;do{if(u=p-d,h[u+c*u]===0){for(f=u+1;f<p;f++)if(h[u+c*f]!==0){g=v;do m=v-g,h[m+c*u]+=h[m+c*f];while(--g);break}}if(h[u+c*u]!==0)for(f=u+1;f<p;f++){var y=h[u+c*f]/h[u+c*u];g=v;do m=v-g,h[m+c*f]=m<=u?0:h[m+c*f]-h[m+c*u]*y;while(--g)}}while(--d);u=2;do{f=u-1;do{var y=h[u+c*f]/h[u+c*u];g=c;do m=c-g,h[m+c*f]=h[m+c*f]-h[m+c*u]*y;while(--g)}while(f--)}while(--u);u=2;do{var y=1/h[u+c*u];g=c;do m=c-g,h[m+c*u]=h[m+c*u]*y;while(--g)}while(u--);u=2;do{f=2;do{if(m=h[l+f+c*u],isNaN(m)||m===1/0)throw"Could not reverse! A=["+this.toString()+"]";o.e(u,f,m)}while(f--)}while(u--);return o},a.prototype.setRotationFromQuaternion=function(o){var l=o.x,c=o.y,h=o.z,u=o.w,f=l+l,d=c+c,p=h+h,g=l*f,v=l*d,m=l*p,y=c*d,x=c*p,_=h*p,b=u*f,w=u*d,S=u*p,C=this.elements;return C[3*0+0]=1-(y+_),C[3*0+1]=v-S,C[3*0+2]=m+w,C[3*1+0]=v+S,C[3*1+1]=1-(g+_),C[3*1+2]=x-b,C[3*2+0]=m-w,C[3*2+1]=x+b,C[3*2+2]=1-(g+y),this},a.prototype.transpose=function(o){o=o||new a;for(var l=o.elements,c=this.elements,h=0;h!==3;h++)for(var u=0;u!==3;u++)l[3*h+u]=c[3*u+h];return o}},{"./Vec3":30}],28:[function(n,i,r){i.exports=a;var s=n("./Vec3");function a(f,d,p,g){this.x=f!==void 0?f:0,this.y=d!==void 0?d:0,this.z=p!==void 0?p:0,this.w=g!==void 0?g:1}a.prototype.set=function(f,d,p,g){this.x=f,this.y=d,this.z=p,this.w=g},a.prototype.toString=function(){return this.x+","+this.y+","+this.z+","+this.w},a.prototype.toArray=function(){return[this.x,this.y,this.z,this.w]},a.prototype.setFromAxisAngle=function(f,d){var p=Math.sin(d*.5);this.x=f.x*p,this.y=f.y*p,this.z=f.z*p,this.w=Math.cos(d*.5)},a.prototype.toAxisAngle=function(f){f=f||new s,this.normalize();var d=2*Math.acos(this.w),p=Math.sqrt(1-this.w*this.w);return p<.001?(f.x=this.x,f.y=this.y,f.z=this.z):(f.x=this.x/p,f.y=this.y/p,f.z=this.z/p),[f,d]};var o=new s,l=new s;a.prototype.setFromVectors=function(f,d){if(f.isAntiparallelTo(d)){var p=o,g=l;f.tangents(p,g),this.setFromAxisAngle(p,Math.PI)}else{var v=f.cross(d);this.x=v.x,this.y=v.y,this.z=v.z,this.w=Math.sqrt(Math.pow(f.norm(),2)*Math.pow(d.norm(),2))+f.dot(d),this.normalize()}};var c=new s,h=new s,u=new s;a.prototype.mult=function(f,d){d=d||new a;var p=this.w,g=c,v=h,m=u;return g.set(this.x,this.y,this.z),v.set(f.x,f.y,f.z),d.w=p*f.w-g.dot(v),g.cross(v,m),d.x=p*v.x+f.w*g.x+m.x,d.y=p*v.y+f.w*g.y+m.y,d.z=p*v.z+f.w*g.z+m.z,d},a.prototype.inverse=function(f){var d=this.x,p=this.y,g=this.z,v=this.w;f=f||new a,this.conjugate(f);var m=1/(d*d+p*p+g*g+v*v);return f.x*=m,f.y*=m,f.z*=m,f.w*=m,f},a.prototype.conjugate=function(f){return f=f||new a,f.x=-this.x,f.y=-this.y,f.z=-this.z,f.w=this.w,f},a.prototype.normalize=function(){var f=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);f===0?(this.x=0,this.y=0,this.z=0,this.w=0):(f=1/f,this.x*=f,this.y*=f,this.z*=f,this.w*=f)},a.prototype.normalizeFast=function(){var f=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;f===0?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=f,this.y*=f,this.z*=f,this.w*=f)},a.prototype.vmult=function(f,d){d=d||new s;var p=f.x,g=f.y,v=f.z,m=this.x,y=this.y,x=this.z,_=this.w,b=_*p+y*v-x*g,w=_*g+x*p-m*v,S=_*v+m*g-y*p,C=-m*p-y*g-x*v;return d.x=b*_+C*-m+w*-x-S*-y,d.y=w*_+C*-y+S*-m-b*-x,d.z=S*_+C*-x+b*-y-w*-m,d},a.prototype.copy=function(f){return this.x=f.x,this.y=f.y,this.z=f.z,this.w=f.w,this},a.prototype.toEuler=function(f,d){d=d||"YZX";var p,g,v,m=this.x,y=this.y,x=this.z,_=this.w;switch(d){case"YZX":var b=m*y+x*_;if(b>.499&&(p=2*Math.atan2(m,_),g=Math.PI/2,v=0),b<-.499&&(p=-2*Math.atan2(m,_),g=-Math.PI/2,v=0),isNaN(p)){var w=m*m,S=y*y,C=x*x;p=Math.atan2(2*y*_-2*m*x,1-2*S-2*C),g=Math.asin(2*b),v=Math.atan2(2*m*_-2*y*x,1-2*w-2*C)}break;default:throw new Error("Euler order "+d+" not supported yet.")}f.y=p,f.z=g,f.x=v},a.prototype.setFromEuler=function(f,d,p,g){g=g||"XYZ";var v=Math.cos(f/2),m=Math.cos(d/2),y=Math.cos(p/2),x=Math.sin(f/2),_=Math.sin(d/2),b=Math.sin(p/2);return g==="XYZ"?(this.x=x*m*y+v*_*b,this.y=v*_*y-x*m*b,this.z=v*m*b+x*_*y,this.w=v*m*y-x*_*b):g==="YXZ"?(this.x=x*m*y+v*_*b,this.y=v*_*y-x*m*b,this.z=v*m*b-x*_*y,this.w=v*m*y+x*_*b):g==="ZXY"?(this.x=x*m*y-v*_*b,this.y=v*_*y+x*m*b,this.z=v*m*b+x*_*y,this.w=v*m*y-x*_*b):g==="ZYX"?(this.x=x*m*y-v*_*b,this.y=v*_*y+x*m*b,this.z=v*m*b-x*_*y,this.w=v*m*y+x*_*b):g==="YZX"?(this.x=x*m*y+v*_*b,this.y=v*_*y+x*m*b,this.z=v*m*b-x*_*y,this.w=v*m*y-x*_*b):g==="XZY"&&(this.x=x*m*y-v*_*b,this.y=v*_*y-x*m*b,this.z=v*m*b+x*_*y,this.w=v*m*y+x*_*b),this},a.prototype.clone=function(){return new a(this.x,this.y,this.z,this.w)}},{"./Vec3":30}],29:[function(n,i,r){var s=n("./Vec3"),a=n("./Quaternion");i.exports=o;function o(c){c=c||{},this.position=new s,c.position&&this.position.copy(c.position),this.quaternion=new a,c.quaternion&&this.quaternion.copy(c.quaternion)}var l=new a;o.pointToLocalFrame=function(c,h,u,d){var d=d||new s;return u.vsub(c,d),h.conjugate(l),l.vmult(d,d),d},o.prototype.pointToLocal=function(c,h){return o.pointToLocalFrame(this.position,this.quaternion,c,h)},o.pointToWorldFrame=function(c,h,u,d){var d=d||new s;return h.vmult(u,d),d.vadd(c,d),d},o.prototype.pointToWorld=function(c,h){return o.pointToWorldFrame(this.position,this.quaternion,c,h)},o.prototype.vectorToWorldFrame=function(c,u){var u=u||new s;return this.quaternion.vmult(c,u),u},o.vectorToWorldFrame=function(c,h,u){return c.vmult(h,u),u},o.vectorToLocalFrame=function(c,h,u,d){var d=d||new s;return h.w*=-1,h.vmult(u,d),h.w*=-1,d}},{"./Quaternion":28,"./Vec3":30}],30:[function(n,i,r){i.exports=a;var s=n("./Mat3");function a(h,u,f){this.x=h||0,this.y=u||0,this.z=f||0}a.ZERO=new a(0,0,0),a.UNIT_X=new a(1,0,0),a.UNIT_Y=new a(0,1,0),a.UNIT_Z=new a(0,0,1),a.prototype.cross=function(h,u){var f=h.x,d=h.y,p=h.z,g=this.x,v=this.y,m=this.z;return u=u||new a,u.x=v*p-m*d,u.y=m*f-g*p,u.z=g*d-v*f,u},a.prototype.set=function(h,u,f){return this.x=h,this.y=u,this.z=f,this},a.prototype.setZero=function(){this.x=this.y=this.z=0},a.prototype.vadd=function(h,u){if(u)u.x=h.x+this.x,u.y=h.y+this.y,u.z=h.z+this.z;else return new a(this.x+h.x,this.y+h.y,this.z+h.z)},a.prototype.vsub=function(h,u){if(u)u.x=this.x-h.x,u.y=this.y-h.y,u.z=this.z-h.z;else return new a(this.x-h.x,this.y-h.y,this.z-h.z)},a.prototype.crossmat=function(){return new s([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])},a.prototype.normalize=function(){var h=this.x,u=this.y,f=this.z,d=Math.sqrt(h*h+u*u+f*f);if(d>0){var p=1/d;this.x*=p,this.y*=p,this.z*=p}else this.x=0,this.y=0,this.z=0;return d},a.prototype.unit=function(h){h=h||new a;var u=this.x,f=this.y,d=this.z,p=Math.sqrt(u*u+f*f+d*d);return p>0?(p=1/p,h.x=u*p,h.y=f*p,h.z=d*p):(h.x=1,h.y=0,h.z=0),h},a.prototype.norm=function(){var h=this.x,u=this.y,f=this.z;return Math.sqrt(h*h+u*u+f*f)},a.prototype.length=a.prototype.norm,a.prototype.norm2=function(){return this.dot(this)},a.prototype.lengthSquared=a.prototype.norm2,a.prototype.distanceTo=function(h){var u=this.x,f=this.y,d=this.z,p=h.x,g=h.y,v=h.z;return Math.sqrt((p-u)*(p-u)+(g-f)*(g-f)+(v-d)*(v-d))},a.prototype.distanceSquared=function(h){var u=this.x,f=this.y,d=this.z,p=h.x,g=h.y,v=h.z;return(p-u)*(p-u)+(g-f)*(g-f)+(v-d)*(v-d)},a.prototype.mult=function(h,u){u=u||new a;var f=this.x,d=this.y,p=this.z;return u.x=h*f,u.y=h*d,u.z=h*p,u},a.prototype.scale=a.prototype.mult,a.prototype.dot=function(h){return this.x*h.x+this.y*h.y+this.z*h.z},a.prototype.isZero=function(){return this.x===0&&this.y===0&&this.z===0},a.prototype.negate=function(h){return h=h||new a,h.x=-this.x,h.y=-this.y,h.z=-this.z,h};var o=new a,l=new a;a.prototype.tangents=function(h,u){var f=this.norm();if(f>0){var d=o,p=1/f;d.set(this.x*p,this.y*p,this.z*p);var g=l;Math.abs(d.x)<.9?(g.set(1,0,0),d.cross(g,h)):(g.set(0,1,0),d.cross(g,h)),d.cross(h,u)}else h.set(1,0,0),u.set(0,1,0)},a.prototype.toString=function(){return this.x+","+this.y+","+this.z},a.prototype.toArray=function(){return[this.x,this.y,this.z]},a.prototype.copy=function(h){return this.x=h.x,this.y=h.y,this.z=h.z,this},a.prototype.lerp=function(h,u,f){var d=this.x,p=this.y,g=this.z;f.x=d+(h.x-d)*u,f.y=p+(h.y-p)*u,f.z=g+(h.z-g)*u},a.prototype.almostEquals=function(h,u){return u===void 0&&(u=1e-6),!(Math.abs(this.x-h.x)>u||Math.abs(this.y-h.y)>u||Math.abs(this.z-h.z)>u)},a.prototype.almostZero=function(h){return h===void 0&&(h=1e-6),!(Math.abs(this.x)>h||Math.abs(this.y)>h||Math.abs(this.z)>h)};var c=new a;a.prototype.isAntiparallelTo=function(h,u){return this.negate(c),c.almostEquals(h,u)},a.prototype.clone=function(){return new a(this.x,this.y,this.z)}},{"./Mat3":27}],31:[function(n,i,r){i.exports=u;var s=n("../utils/EventTarget");n("../shapes/Shape");var a=n("../math/Vec3"),o=n("../math/Mat3"),l=n("../math/Quaternion");n("../material/Material");var c=n("../collision/AABB"),h=n("../shapes/Box");function u(E){E=E||{},s.apply(this),this.id=u.idCounter++,this.world=null,this.preStep=null,this.postStep=null,this.vlambda=new a,this.collisionFilterGroup=typeof E.collisionFilterGroup=="number"?E.collisionFilterGroup:1,this.collisionFilterMask=typeof E.collisionFilterMask=="number"?E.collisionFilterMask:1,this.collisionResponse=!0,this.position=new a,E.position&&this.position.copy(E.position),this.previousPosition=new a,this.initPosition=new a,this.velocity=new a,E.velocity&&this.velocity.copy(E.velocity),this.initVelocity=new a,this.force=new a;var N=typeof E.mass=="number"?E.mass:0;this.mass=N,this.invMass=N>0?1/N:0,this.material=E.material||null,this.linearDamping=typeof E.linearDamping=="number"?E.linearDamping:.01,this.type=N<=0?u.STATIC:u.DYNAMIC,typeof E.type==typeof u.STATIC&&(this.type=E.type),this.allowSleep=typeof E.allowSleep<"u"?E.allowSleep:!0,this.sleepState=0,this.sleepSpeedLimit=typeof E.sleepSpeedLimit<"u"?E.sleepSpeedLimit:.1,this.sleepTimeLimit=typeof E.sleepTimeLimit<"u"?E.sleepTimeLimit:1,this.timeLastSleepy=0,this._wakeUpAfterNarrowphase=!1,this.torque=new a,this.quaternion=new l,E.quaternion&&this.quaternion.copy(E.quaternion),this.initQuaternion=new l,this.angularVelocity=new a,E.angularVelocity&&this.angularVelocity.copy(E.angularVelocity),this.initAngularVelocity=new a,this.interpolatedPosition=new a,this.interpolatedQuaternion=new l,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new a,this.invInertia=new a,this.invInertiaWorld=new o,this.invMassSolve=0,this.invInertiaSolve=new a,this.invInertiaWorldSolve=new o,this.fixedRotation=typeof E.fixedRotation<"u"?E.fixedRotation:!1,this.angularDamping=typeof E.angularDamping<"u"?E.angularDamping:.01,this.aabb=new c,this.aabbNeedsUpdate=!0,this.wlambda=new a,E.shape&&this.addShape(E.shape),this.updateMassProperties()}u.prototype=new s,u.prototype.constructor=u,u.DYNAMIC=1,u.STATIC=2,u.KINEMATIC=4,u.AWAKE=0,u.SLEEPY=1,u.SLEEPING=2,u.idCounter=0,u.prototype.wakeUp=function(){var E=this.sleepState;this.sleepState=0,E===u.SLEEPING&&this.dispatchEvent({type:"wakeup"})},u.prototype.sleep=function(){this.sleepState=u.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0)},u.sleepyEvent={type:"sleepy"},u.sleepEvent={type:"sleep"},u.prototype.sleepTick=function(E){if(this.allowSleep){var N=this.sleepState,k=this.velocity.norm2()+this.angularVelocity.norm2(),F=Math.pow(this.sleepSpeedLimit,2);N===u.AWAKE&&k<F?(this.sleepState=u.SLEEPY,this.timeLastSleepy=E,this.dispatchEvent(u.sleepyEvent)):N===u.SLEEPY&&k>F?this.wakeUp():N===u.SLEEPY&&E-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(u.sleepEvent))}},u.prototype.updateSolveMassProperties=function(){this.sleepState===u.SLEEPING||this.type===u.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))},u.prototype.pointToLocalFrame=function(E,k){var k=k||new a;return E.vsub(this.position,k),this.quaternion.conjugate().vmult(k,k),k},u.prototype.vectorToLocalFrame=function(E,k){var k=k||new a;return this.quaternion.conjugate().vmult(E,k),k},u.prototype.pointToWorldFrame=function(E,k){var k=k||new a;return this.quaternion.vmult(E,k),k.vadd(this.position,k),k},u.prototype.vectorToWorldFrame=function(E,k){var k=k||new a;return this.quaternion.vmult(E,k),k};var f=new a,d=new l;u.prototype.addShape=function(E,N,k){var F=new a,V=new l;return N&&F.copy(N),k&&V.copy(k),this.shapes.push(E),this.shapeOffsets.push(F),this.shapeOrientations.push(V),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,this},u.prototype.updateBoundingRadius=function(){for(var E=this.shapes,N=this.shapeOffsets,k=E.length,F=0,V=0;V!==k;V++){var ee=E[V];ee.updateBoundingSphereRadius();var R=N[V].norm(),T=ee.boundingSphereRadius;R+T>F&&(F=R+T)}this.boundingRadius=F};var p=new c;u.prototype.computeAABB=function(){for(var E=this.shapes,N=this.shapeOffsets,k=this.shapeOrientations,F=E.length,V=f,ee=d,R=this.quaternion,T=this.aabb,H=p,O=0;O!==F;O++){var B=E[O];k[O].mult(R,ee),ee.vmult(N[O],V),V.vadd(this.position,V),B.calculateWorldAABB(V,ee,H.lowerBound,H.upperBound),O===0?T.copy(H):T.extend(H)}this.aabbNeedsUpdate=!1};var g=new o,v=new o;new o,u.prototype.updateInertiaWorld=function(E){var N=this.invInertia;if(!(N.x===N.y&&N.y===N.z&&!E)){var k=g,F=v;k.setRotationFromQuaternion(this.quaternion),k.transpose(F),k.scale(N,k),k.mmult(F,this.invInertiaWorld)}};var m=new a,y=new a;u.prototype.applyForce=function(E,N){if(this.type===u.DYNAMIC){var k=m;N.vsub(this.position,k);var F=y;k.cross(E,F),this.force.vadd(E,this.force),this.torque.vadd(F,this.torque)}};var x=new a,_=new a;u.prototype.applyLocalForce=function(E,N){if(this.type===u.DYNAMIC){var k=x,F=_;this.vectorToWorldFrame(E,k),this.pointToWorldFrame(N,F),this.applyForce(k,F)}};var b=new a,w=new a,S=new a;u.prototype.applyImpulse=function(E,N){if(this.type===u.DYNAMIC){var k=b;N.vsub(this.position,k);var F=w;F.copy(E),F.mult(this.invMass,F),this.velocity.vadd(F,this.velocity);var V=S;k.cross(E,V),this.invInertiaWorld.vmult(V,V),this.angularVelocity.vadd(V,this.angularVelocity)}};var C=new a,L=new a;u.prototype.applyLocalImpulse=function(E,N){if(this.type===u.DYNAMIC){var k=C,F=L;this.vectorToWorldFrame(E,k),this.pointToWorldFrame(N,F),this.applyImpulse(k,F)}};var M=new a;u.prototype.updateMassProperties=function(){var E=M;this.invMass=this.mass>0?1/this.mass:0;var N=this.inertia,k=this.fixedRotation;this.computeAABB(),E.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),h.calculateInertia(E,this.mass,N),this.invInertia.set(N.x>0&&!k?1/N.x:0,N.y>0&&!k?1/N.y:0,N.z>0&&!k?1/N.z:0),this.updateInertiaWorld(!0)},u.prototype.getVelocityAtWorldPoint=function(E,N){var k=new a;return E.vsub(this.position,k),this.angularVelocity.cross(k,N),this.velocity.vadd(N,N),N}},{"../collision/AABB":3,"../material/Material":25,"../math/Mat3":27,"../math/Quaternion":28,"../math/Vec3":30,"../shapes/Box":37,"../shapes/Shape":43,"../utils/EventTarget":49}],32:[function(n,i,r){n("./Body");var s=n("../math/Vec3"),a=n("../math/Quaternion");n("../collision/RaycastResult");var o=n("../collision/Ray"),l=n("../objects/WheelInfo");i.exports=c;function c(R){this.chassisBody=R.chassisBody,this.wheelInfos=[],this.sliding=!1,this.world=null,this.indexRightAxis=typeof R.indexRightAxis<"u"?R.indexRightAxis:1,this.indexForwardAxis=typeof R.indexForwardAxis<"u"?R.indexForwardAxis:0,this.indexUpAxis=typeof R.indexUpAxis<"u"?R.indexUpAxis:2}new s,new s,new s;var h=new s,u=new s,f=new s;new o,c.prototype.addWheel=function(R){R=R||{};var T=new l(R),H=this.wheelInfos.length;return this.wheelInfos.push(T),H},c.prototype.setSteeringValue=function(R,T){var H=this.wheelInfos[T];H.steering=R},new s,c.prototype.applyEngineForce=function(R,T){this.wheelInfos[T].engineForce=R},c.prototype.setBrake=function(R,T){this.wheelInfos[T].brake=R},c.prototype.addToWorld=function(R){this.constraints,R.add(this.chassisBody);var T=this;this.preStepCallback=function(){T.updateVehicle(R.dt)},R.addEventListener("preStep",this.preStepCallback),this.world=R},c.prototype.getVehicleAxisWorld=function(R,T){T.set(R===0?1:0,R===1?1:0,R===2?1:0),this.chassisBody.vectorToWorldFrame(T,T)},c.prototype.updateVehicle=function(R){for(var T=this.wheelInfos,H=T.length,O=this.chassisBody,B=0;B<H;B++)this.updateWheelTransform(B);this.currentVehicleSpeedKmHour=3.6*O.velocity.norm();var q=new s;this.getVehicleAxisWorld(this.indexForwardAxis,q),q.dot(O.velocity)<0&&(this.currentVehicleSpeedKmHour*=-1);for(var B=0;B<H;B++)this.castRay(T[B]);this.updateSuspension(R);for(var G=new s,A=new s,B=0;B<H;B++){var U=T[B],J=U.suspensionForce;J>U.maxSuspensionForce&&(J=U.maxSuspensionForce),U.raycastResult.hitNormalWorld.scale(J*R,G),U.raycastResult.hitPointWorld.vsub(O.position,A),O.applyImpulse(G,U.raycastResult.hitPointWorld)}this.updateFriction(R);var $=new s,ie=new s,re=new s;for(B=0;B<H;B++){var U=T[B];O.getVelocityAtWorldPoint(U.chassisConnectionPointWorld,re);var de=1;switch(this.indexUpAxis){case 1:de=-1;break}if(U.isInContact){this.getVehicleAxisWorld(this.indexForwardAxis,ie);var me=ie.dot(U.raycastResult.hitNormalWorld);U.raycastResult.hitNormalWorld.scale(me,$),ie.vsub($,ie);var X=ie.dot(re);U.deltaRotation=de*X*R/U.radius}(U.sliding||!U.isInContact)&&U.engineForce!==0&&U.useCustomSlidingRotationalSpeed&&(U.deltaRotation=(U.engineForce>0?1:-1)*U.customSlidingRotationalSpeed*R),Math.abs(U.brake)>Math.abs(U.engineForce)&&(U.deltaRotation=0),U.rotation+=U.deltaRotation,U.deltaRotation*=.99}},c.prototype.updateSuspension=function(R){for(var T=this.chassisBody,H=T.mass,O=this.wheelInfos,B=O.length,q=0;q<B;q++){var G=O[q];if(G.isInContact){var A,U=G.suspensionRestLength,J=G.suspensionLength,$=U-J;A=G.suspensionStiffness*$*G.clippedInvContactDotSuspension;var ie=G.suspensionRelativeVelocity,re;ie<0?re=G.dampingCompression:re=G.dampingRelaxation,A-=re*ie,G.suspensionForce=A*H,G.suspensionForce<0&&(G.suspensionForce=0)}else G.suspensionForce=0}},c.prototype.removeFromWorld=function(R){this.constraints,R.remove(this.chassisBody),R.removeEventListener("preStep",this.preStepCallback),this.world=null};var d=new s,p=new s;c.prototype.castRay=function(R){var T=d,H=p;this.updateWheelTransformWorld(R);var O=this.chassisBody,B=-1,q=R.suspensionRestLength+R.radius;R.directionWorld.scale(q,T);var G=R.chassisConnectionPointWorld;G.vadd(T,H);var A=R.raycastResult;A.reset();var U=O.collisionResponse;O.collisionResponse=!1,this.world.rayTest(G,H,A),O.collisionResponse=U;var J=A.body;if(R.raycastResult.groundObject=0,J){B=A.distance,R.raycastResult.hitNormalWorld=A.hitNormalWorld,R.isInContact=!0;var $=A.distance;R.suspensionLength=$-R.radius;var ie=R.suspensionRestLength-R.maxSuspensionTravel,re=R.suspensionRestLength+R.maxSuspensionTravel;R.suspensionLength<ie&&(R.suspensionLength=ie),R.suspensionLength>re&&(R.suspensionLength=re,R.raycastResult.reset());var de=R.raycastResult.hitNormalWorld.dot(R.directionWorld),me=new s;O.getVelocityAtWorldPoint(R.raycastResult.hitPointWorld,me);var X=R.raycastResult.hitNormalWorld.dot(me);if(de>=-.1)R.suspensionRelativeVelocity=0,R.clippedInvContactDotSuspension=1/.1;else{var pe=-1/de;R.suspensionRelativeVelocity=X*pe,R.clippedInvContactDotSuspension=pe}}else R.suspensionLength=R.suspensionRestLength+0*R.maxSuspensionTravel,R.suspensionRelativeVelocity=0,R.directionWorld.scale(-1,R.raycastResult.hitNormalWorld),R.clippedInvContactDotSuspension=1;return B},c.prototype.updateWheelTransformWorld=function(R){R.isInContact=!1;var T=this.chassisBody;T.pointToWorldFrame(R.chassisConnectionPointLocal,R.chassisConnectionPointWorld),T.vectorToWorldFrame(R.directionLocal,R.directionWorld),T.vectorToWorldFrame(R.axleLocal,R.axleWorld)},c.prototype.updateWheelTransform=function(R){var T=h,H=u,O=f,B=this.wheelInfos[R];this.updateWheelTransformWorld(B),B.directionLocal.scale(-1,T),H.copy(B.axleLocal),T.cross(H,O),O.normalize(),H.normalize();var q=B.steering,G=new a;G.setFromAxisAngle(T,q);var A=new a;A.setFromAxisAngle(H,B.rotation);var U=B.worldTransform.quaternion;this.chassisBody.quaternion.mult(G,U),U.mult(A,U),U.normalize();var J=B.worldTransform.position;J.copy(B.directionWorld),J.scale(B.suspensionLength,J),J.vadd(B.chassisConnectionPointWorld,J)};var g=[new s(1,0,0),new s(0,1,0),new s(0,0,1)];c.prototype.getWheelTransformWorld=function(R){return this.wheelInfos[R].worldTransform};var v=new s,m=[],y=[],x=1;c.prototype.updateFriction=function(R){for(var T=v,H=this.wheelInfos,O=H.length,B=this.chassisBody,q=y,G=m,A=0;A<O;A++){var U=H[A],J=U.raycastResult.body;U.sideImpulse=0,U.forwardImpulse=0,q[A]||(q[A]=new s),G[A]||(G[A]=new s)}for(var A=0;A<O;A++){var U=H[A],J=U.raycastResult.body;if(J){var $=G[A],ie=this.getWheelTransformWorld(A);ie.vectorToWorldFrame(g[this.indexRightAxis],$);var re=U.raycastResult.hitNormalWorld,de=$.dot(re);re.scale(de,T),$.vsub(T,$),$.normalize(),re.cross($,q[A]),q[A].normalize(),U.sideImpulse=ee(B,U.raycastResult.hitPointWorld,J,U.raycastResult.hitPointWorld,$),U.sideImpulse*=x}}var me=1,X=.5;this.sliding=!1;for(var A=0;A<O;A++){var U=H[A],J=U.raycastResult.body,pe=0;if(U.slipInfo=1,J){var he=0,ce=U.brake?U.brake:he;pe=S(B,J,U.raycastResult.hitPointWorld,q[A],ce),pe+=U.engineForce*R;var oe=ce/pe;U.slipInfo*=oe}if(U.forwardImpulse=0,U.skidInfo=1,J){U.skidInfo=1;var ze=U.suspensionForce*R*U.frictionSlip,Te=ze,z=ze*Te;U.forwardImpulse=pe;var I=U.forwardImpulse*X,ue=U.sideImpulse*me,we=I*I+ue*ue;if(U.sliding=!1,we>z){this.sliding=!0,U.sliding=!0;var oe=ze/Math.sqrt(we);U.skidInfo*=oe}}}if(this.sliding)for(var A=0;A<O;A++){var U=H[A];U.sideImpulse!==0&&U.skidInfo<1&&(U.forwardImpulse*=U.skidInfo,U.sideImpulse*=U.skidInfo)}for(var A=0;A<O;A++){var U=H[A],ve=new s;if(ve.copy(U.raycastResult.hitPointWorld),U.forwardImpulse!==0){var ge=new s;q[A].scale(U.forwardImpulse,ge),B.applyImpulse(ge,ve)}if(U.sideImpulse!==0){var J=U.raycastResult.body,ne=new s;ne.copy(U.raycastResult.hitPointWorld);var ye=new s;G[A].scale(U.sideImpulse,ye),B.pointToLocalFrame(ve,ve),ve["xyz"[this.indexUpAxis]]*=U.rollInfluence,B.pointToWorldFrame(ve,ve),B.applyImpulse(ye,ve),ye.scale(-1,ye),J.applyImpulse(ye,ne)}}};var _=new s,b=new s,w=new s;function S(R,T,H,O,B){var q=0,G=H,A=_,U=b,J=w;R.getVelocityAtWorldPoint(G,A),T.getVelocityAtWorldPoint(G,U),A.vsub(U,J);var $=O.dot(J),ie=N(R,H,O),re=N(T,H,O),de=1,me=de/(ie+re);return q=-$*me,B<q&&(q=B),q<-B&&(q=-B),q}var C=new s,L=new s,M=new s,E=new s;function N(R,T,H){var O=C,B=L,q=M,G=E;return T.vsub(R.position,O),O.cross(H,B),R.invInertiaWorld.vmult(B,G),G.cross(O,q),R.invMass+H.dot(q)}var k=new s,F=new s,V=new s;function ee(R,T,H,O,B,de){var G=B.norm2();if(G>1.1)return 0;var A=k,U=F,J=V;R.getVelocityAtWorldPoint(T,A),H.getVelocityAtWorldPoint(O,U),A.vsub(U,J);var $=B.dot(J),ie=.2,re=1/(R.invMass+H.invMass),de=-ie*$*re;return de}},{"../collision/Ray":9,"../collision/RaycastResult":10,"../math/Quaternion":28,"../math/Vec3":30,"../objects/WheelInfo":36,"./Body":31}],33:[function(n,i,r){var s=n("./Body"),a=n("../shapes/Sphere"),o=n("../shapes/Box"),l=n("../math/Vec3"),c=n("../constraints/HingeConstraint");i.exports=h;function h(d){if(this.wheelBodies=[],this.coordinateSystem=typeof d.coordinateSystem>"u"?new l(1,2,3):d.coordinateSystem.clone(),this.chassisBody=d.chassisBody,!this.chassisBody){var p=new o(new l(5,2,.5));this.chassisBody=new s(1,p)}this.constraints=[],this.wheelAxes=[],this.wheelForces=[]}h.prototype.addWheel=function(d){d=d||{};var p=d.body;p||(p=new s(1,new a(1.2))),this.wheelBodies.push(p),this.wheelForces.push(0),new l;var g=typeof d.position<"u"?d.position.clone():new l,v=new l;this.chassisBody.pointToWorldFrame(g,v),p.position.set(v.x,v.y,v.z);var m=typeof d.axis<"u"?d.axis.clone():new l(0,1,0);this.wheelAxes.push(m);var y=new c(this.chassisBody,p,{pivotA:g,axisA:m,pivotB:l.ZERO,axisB:m,collideConnected:!1});return this.constraints.push(y),this.wheelBodies.length-1},h.prototype.setSteeringValue=function(d,p){var g=this.wheelAxes[p],v=Math.cos(d),m=Math.sin(d),y=g.x,x=g.y;this.constraints[p].axisA.set(v*y-m*x,m*y+v*x,0)},h.prototype.setMotorSpeed=function(d,p){var g=this.constraints[p];g.enableMotor(),g.motorTargetVelocity=d},h.prototype.disableMotor=function(d){var p=this.constraints[d];p.disableMotor()};var u=new l;h.prototype.setWheelForce=function(d,p){this.wheelForces[p]=d},h.prototype.applyWheelForce=function(d,p){var g=this.wheelAxes[p],v=this.wheelBodies[p],m=v.torque;g.scale(d,u),v.vectorToWorldFrame(u,u),m.vadd(u,m)},h.prototype.addToWorld=function(d){for(var p=this.constraints,g=this.wheelBodies.concat([this.chassisBody]),v=0;v<g.length;v++)d.add(g[v]);for(var v=0;v<p.length;v++)d.addConstraint(p[v]);d.addEventListener("preStep",this._update.bind(this))},h.prototype._update=function(){for(var d=this.wheelForces,p=0;p<d.length;p++)this.applyWheelForce(d[p],p)},h.prototype.removeFromWorld=function(d){for(var p=this.constraints,g=this.wheelBodies.concat([this.chassisBody]),v=0;v<g.length;v++)d.remove(g[v]);for(var v=0;v<p.length;v++)d.removeConstraint(p[v])};var f=new l;h.prototype.getWheelSpeed=function(d){var p=this.wheelAxes[d],g=this.wheelBodies[d],v=g.angularVelocity;return this.chassisBody.vectorToWorldFrame(p,f),v.dot(f)}},{"../constraints/HingeConstraint":15,"../math/Vec3":30,"../shapes/Box":37,"../shapes/Sphere":44,"./Body":31}],34:[function(n,i,r){i.exports=a,n("../shapes/Shape");var s=n("../math/Vec3");n("../math/Quaternion"),n("../shapes/Particle"),n("../objects/Body"),n("../material/Material");function a(){this.particles=[],this.density=1,this.smoothingRadius=1,this.speedOfSound=1,this.viscosity=.01,this.eps=1e-6,this.pressures=[],this.densities=[],this.neighbors=[]}a.prototype.add=function(p){this.particles.push(p),this.neighbors.length<this.particles.length&&this.neighbors.push([])},a.prototype.remove=function(p){var g=this.particles.indexOf(p);g!==-1&&(this.particles.splice(g,1),this.neighbors.length>this.particles.length&&this.neighbors.pop())};var o=new s;a.prototype.getNeighbors=function(p,g){for(var v=this.particles.length,m=p.id,y=this.smoothingRadius*this.smoothingRadius,x=o,_=0;_!==v;_++){var b=this.particles[_];b.position.vsub(p.position,x),m!==b.id&&x.norm2()<y&&g.push(b)}};var l=new s,c=new s,h=new s,u=new s,f=new s,d=new s;a.prototype.update=function(){for(var p=this.particles.length,g=l,v=this.speedOfSound,m=this.eps,y=0;y!==p;y++){var x=this.particles[y],_=this.neighbors[y];_.length=0,this.getNeighbors(x,_),_.push(this.particles[y]);for(var b=_.length,w=0,S=0;S!==b;S++){x.position.vsub(_[S].position,g);var C=g.norm(),L=this.w(C);w+=_[S].mass*L}this.densities[y]=w,this.pressures[y]=v*v*(this.densities[y]-this.density)}for(var M=c,E=h,N=u,k=f,F=d,y=0;y!==p;y++){var V=this.particles[y];M.set(0,0,0),E.set(0,0,0);for(var ee,R,_=this.neighbors[y],b=_.length,S=0;S!==b;S++){var T=_[S];V.position.vsub(T.position,k);var H=k.norm();ee=-T.mass*(this.pressures[y]/(this.densities[y]*this.densities[y]+m)+this.pressures[S]/(this.densities[S]*this.densities[S]+m)),this.gradw(k,N),N.mult(ee,N),M.vadd(N,M),T.velocity.vsub(V.velocity,F),F.mult(1/(1e-4+this.densities[y]*this.densities[S])*this.viscosity*T.mass,F),R=this.nablaw(H),F.mult(R,F),E.vadd(F,E)}E.mult(V.mass,E),M.mult(V.mass,M),V.force.vadd(E,V.force),V.force.vadd(M,V.force)}},a.prototype.w=function(p){var g=this.smoothingRadius;return 315/(64*Math.PI*Math.pow(g,9))*Math.pow(g*g-p*p,3)},a.prototype.gradw=function(p,g){var v=p.norm(),m=this.smoothingRadius;p.mult(945/(32*Math.PI*Math.pow(m,9))*Math.pow(m*m-v*v,2),g)},a.prototype.nablaw=function(p){var g=this.smoothingRadius,v=945/(32*Math.PI*Math.pow(g,9))*(g*g-p*p)*(7*p*p-3*g*g);return v}},{"../material/Material":25,"../math/Quaternion":28,"../math/Vec3":30,"../objects/Body":31,"../shapes/Particle":41,"../shapes/Shape":43}],35:[function(n,i,r){var s=n("../math/Vec3");i.exports=a;function a(y,x,_){_=_||{},this.restLength=typeof _.restLength=="number"?_.restLength:1,this.stiffness=_.stiffness||100,this.damping=_.damping||1,this.bodyA=y,this.bodyB=x,this.localAnchorA=new s,this.localAnchorB=new s,_.localAnchorA&&this.localAnchorA.copy(_.localAnchorA),_.localAnchorB&&this.localAnchorB.copy(_.localAnchorB),_.worldAnchorA&&this.setWorldAnchorA(_.worldAnchorA),_.worldAnchorB&&this.setWorldAnchorB(_.worldAnchorB)}a.prototype.setWorldAnchorA=function(y){this.bodyA.pointToLocalFrame(y,this.localAnchorA)},a.prototype.setWorldAnchorB=function(y){this.bodyB.pointToLocalFrame(y,this.localAnchorB)},a.prototype.getWorldAnchorA=function(y){this.bodyA.pointToWorldFrame(this.localAnchorA,y)},a.prototype.getWorldAnchorB=function(y){this.bodyB.pointToWorldFrame(this.localAnchorB,y)};var o=new s,l=new s,c=new s,h=new s,u=new s,f=new s,d=new s,p=new s,g=new s,v=new s,m=new s;a.prototype.applyForce=function(){var y=this.stiffness,x=this.damping,_=this.restLength,b=this.bodyA,w=this.bodyB,S=o,C=l,L=c,M=h,E=m,N=u,k=f,F=d,V=p,ee=g,R=v;this.getWorldAnchorA(N),this.getWorldAnchorB(k),N.vsub(b.position,F),k.vsub(w.position,V),k.vsub(N,S);var T=S.norm();C.copy(S),C.normalize(),w.velocity.vsub(b.velocity,L),w.angularVelocity.cross(V,E),L.vadd(E,L),b.angularVelocity.cross(F,E),L.vsub(E,L),C.mult(-y*(T-_)-x*L.dot(C),M),b.force.vsub(M,b.force),w.force.vadd(M,w.force),F.cross(M,ee),V.cross(M,R),b.torque.vsub(ee,b.torque),w.torque.vadd(R,w.torque)}},{"../math/Vec3":30}],36:[function(n,i,r){var s=n("../math/Vec3"),a=n("../math/Transform"),o=n("../collision/RaycastResult"),l=n("../utils/Utils");i.exports=c;function c(f){f=l.defaults(f,{chassisConnectionPointLocal:new s,chassisConnectionPointWorld:new s,directionLocal:new s,directionWorld:new s,axleLocal:new s,axleWorld:new s,suspensionRestLength:1,suspensionMaxLength:2,radius:1,suspensionStiffness:100,dampingCompression:10,dampingRelaxation:10,frictionSlip:1e4,steering:0,rotation:0,deltaRotation:0,rollInfluence:.01,maxSuspensionForce:Number.MAX_VALUE,isFrontWheel:!0,clippedInvContactDotSuspension:1,suspensionRelativeVelocity:0,suspensionForce:0,skidInfo:0,suspensionLength:0,maxSuspensionTravel:1,useCustomSlidingRotationalSpeed:!1,customSlidingRotationalSpeed:-.1}),this.maxSuspensionTravel=f.maxSuspensionTravel,this.customSlidingRotationalSpeed=f.customSlidingRotationalSpeed,this.useCustomSlidingRotationalSpeed=f.useCustomSlidingRotationalSpeed,this.sliding=!1,this.chassisConnectionPointLocal=f.chassisConnectionPointLocal.clone(),this.chassisConnectionPointWorld=f.chassisConnectionPointWorld.clone(),this.directionLocal=f.directionLocal.clone(),this.directionWorld=f.directionWorld.clone(),this.axleLocal=f.axleLocal.clone(),this.axleWorld=f.axleWorld.clone(),this.suspensionRestLength=f.suspensionRestLength,this.suspensionMaxLength=f.suspensionMaxLength,this.radius=f.radius,this.suspensionStiffness=f.suspensionStiffness,this.dampingCompression=f.dampingCompression,this.dampingRelaxation=f.dampingRelaxation,this.frictionSlip=f.frictionSlip,this.steering=0,this.rotation=0,this.deltaRotation=0,this.rollInfluence=f.rollInfluence,this.maxSuspensionForce=f.maxSuspensionForce,this.engineForce=0,this.brake=0,this.isFrontWheel=f.isFrontWheel,this.clippedInvContactDotSuspension=1,this.suspensionRelativeVelocity=0,this.suspensionForce=0,this.skidInfo=0,this.suspensionLength=0,this.sideImpulse=0,this.forwardImpulse=0,this.raycastResult=new o,this.worldTransform=new a,this.isInContact=!1}var u=new s,h=new s,u=new s;c.prototype.updateWheel=function(f){var d=this.raycastResult;if(this.isInContact){var p=d.hitNormalWorld.dot(d.directionWorld);d.hitPointWorld.vsub(f.position,h),f.getVelocityAtWorldPoint(h,u);var g=d.hitNormalWorld.dot(u);if(p>=-.1)this.suspensionRelativeVelocity=0,this.clippedInvContactDotSuspension=1/.1;else{var v=-1/p;this.suspensionRelativeVelocity=g*v,this.clippedInvContactDotSuspension=v}}else d.suspensionLength=this.suspensionRestLength,this.suspensionRelativeVelocity=0,d.directionWorld.scale(-1,d.hitNormalWorld),this.clippedInvContactDotSuspension=1}},{"../collision/RaycastResult":10,"../math/Transform":29,"../math/Vec3":30,"../utils/Utils":53}],37:[function(n,i,r){i.exports=l;var s=n("./Shape"),a=n("../math/Vec3"),o=n("./ConvexPolyhedron");function l(u){s.call(this),this.type=s.types.BOX,this.halfExtents=u,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}l.prototype=new s,l.prototype.constructor=l,l.prototype.updateConvexPolyhedronRepresentation=function(){var u=this.halfExtents.x,f=this.halfExtents.y,d=this.halfExtents.z,p=a,g=[new p(-u,-f,-d),new p(u,-f,-d),new p(u,f,-d),new p(-u,f,-d),new p(-u,-f,d),new p(u,-f,d),new p(u,f,d),new p(-u,f,d)],v=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]];new p(0,0,1),new p(0,1,0),new p(1,0,0);var m=new o(g,v);this.convexPolyhedronRepresentation=m,m.material=this.material},l.prototype.calculateLocalInertia=function(u,f){return f=f||new a,l.calculateInertia(this.halfExtents,u,f),f},l.calculateInertia=function(u,f,d){var p=u;d.x=1/12*f*(2*p.y*2*p.y+2*p.z*2*p.z),d.y=1/12*f*(2*p.x*2*p.x+2*p.z*2*p.z),d.z=1/12*f*(2*p.y*2*p.y+2*p.x*2*p.x)},l.prototype.getSideNormals=function(u,f){var d=u,p=this.halfExtents;if(d[0].set(p.x,0,0),d[1].set(0,p.y,0),d[2].set(0,0,p.z),d[3].set(-p.x,0,0),d[4].set(0,-p.y,0),d[5].set(0,0,-p.z),f!==void 0)for(var g=0;g!==d.length;g++)f.vmult(d[g],d[g]);return d},l.prototype.volume=function(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z},l.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=this.halfExtents.norm()};var c=new a;new a,l.prototype.forEachWorldCorner=function(u,f,d){for(var p=this.halfExtents,g=[[p.x,p.y,p.z],[-p.x,p.y,p.z],[-p.x,-p.y,p.z],[-p.x,-p.y,-p.z],[p.x,-p.y,-p.z],[p.x,p.y,-p.z],[-p.x,p.y,-p.z],[p.x,-p.y,p.z]],v=0;v<g.length;v++)c.set(g[v][0],g[v][1],g[v][2]),f.vmult(c,c),u.vadd(c,c),d(c.x,c.y,c.z)};var h=[new a,new a,new a,new a,new a,new a,new a,new a];l.prototype.calculateWorldAABB=function(u,f,d,p){var g=this.halfExtents;h[0].set(g.x,g.y,g.z),h[1].set(-g.x,g.y,g.z),h[2].set(-g.x,-g.y,g.z),h[3].set(-g.x,-g.y,-g.z),h[4].set(g.x,-g.y,-g.z),h[5].set(g.x,g.y,-g.z),h[6].set(-g.x,g.y,-g.z),h[7].set(g.x,-g.y,g.z);var v=h[0];f.vmult(v,v),u.vadd(v,v),p.copy(v),d.copy(v);for(var m=1;m<8;m++){var v=h[m];f.vmult(v,v),u.vadd(v,v);var y=v.x,x=v.y,_=v.z;y>p.x&&(p.x=y),x>p.y&&(p.y=x),_>p.z&&(p.z=_),y<d.x&&(d.x=y),x<d.y&&(d.y=x),_<d.z&&(d.z=_)}}},{"../math/Vec3":30,"./ConvexPolyhedron":38,"./Shape":43}],38:[function(n,i,r){i.exports=l;var s=n("./Shape"),a=n("../math/Vec3");n("../math/Quaternion");var o=n("../math/Transform");function l(B,q,G){s.call(this),this.type=s.types.CONVEXPOLYHEDRON,this.vertices=B||[],this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.faces=q||[],this.faceNormals=[],this.computeNormals(),this.worldFaceNormalsNeedsUpdate=!0,this.worldFaceNormals=[],this.uniqueEdges=[],this.uniqueAxes=G?G.slice():null,this.computeEdges(),this.updateBoundingSphereRadius()}l.prototype=new s,l.prototype.constructor=l;var c=new a;l.prototype.computeEdges=function(){var B=this.faces,q=this.vertices;q.length;var G=this.uniqueEdges;G.length=0;for(var A=c,U=0;U!==B.length;U++)for(var J=B[U],$=J.length,ie=0;ie!==$;ie++){var re=(ie+1)%$;q[J[ie]].vsub(q[J[re]],A),A.normalize();for(var de=!1,me=0;me!==G.length;me++)if(G[me].almostEquals(A)||G[me].almostEquals(A)){de=!0;break}de||G.push(A.clone())}},l.prototype.computeNormals=function(){this.faceNormals.length=this.faces.length;for(var B=0;B<this.faces.length;B++){for(var q=0;q<this.faces[B].length;q++)if(!this.vertices[this.faces[B][q]])throw new Error("Vertex "+this.faces[B][q]+" not found!");var G=this.faceNormals[B]||new a;this.getFaceNormal(B,G),G.negate(G),this.faceNormals[B]=G;var A=this.vertices[this.faces[B][0]];if(G.dot(A)<0){console.error(".faceNormals["+B+"] = Vec3("+G.toString()+") looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.");for(var q=0;q<this.faces[B].length;q++)console.warn(".vertices["+this.faces[B][q]+"] = Vec3("+this.vertices[this.faces[B][q]].toString()+")")}}};var h=new a,u=new a;l.computeNormal=function(B,q,G,A){q.vsub(B,u),G.vsub(q,h),h.cross(u,A),A.isZero()||A.normalize()},l.prototype.getFaceNormal=function(B,q){var G=this.faces[B],A=this.vertices[G[0]],U=this.vertices[G[1]],J=this.vertices[G[2]];return l.computeNormal(A,U,J,q)};var f=new a;l.prototype.clipAgainstHull=function(B,q,G,A,U,J,$,ie,re){for(var de=f,me=-1,X=-Number.MAX_VALUE,pe=0;pe<G.faces.length;pe++){de.copy(G.faceNormals[pe]),U.vmult(de,de);var he=de.dot(J);he>X&&(X=he,me=pe)}for(var ce=[],oe=G.faces[me],ze=oe.length,Te=0;Te<ze;Te++){var z=G.vertices[oe[Te]],I=new a;I.copy(z),U.vmult(I,I),A.vadd(I,I),ce.push(I)}me>=0&&this.clipFaceAgainstHull(J,B,q,ce,$,ie,re)};var d=new a,p=new a,g=new a,v=new a,m=new a,y=new a;l.prototype.findSeparatingAxis=function(B,q,G,A,U,J,$,ie){var re=d,de=p,me=g,X=v,pe=m,he=y,ce=Number.MAX_VALUE,oe=this;if(oe.uniqueAxes)for(var Te=0;Te!==oe.uniqueAxes.length;Te++){G.vmult(oe.uniqueAxes[Te],re);var I=oe.testSepAxis(re,B,q,G,A,U);if(I===!1)return!1;I<ce&&(ce=I,J.copy(re))}else for(var ze=$?$.length:oe.faces.length,Te=0;Te<ze;Te++){var z=$?$[Te]:Te;re.copy(oe.faceNormals[z]),G.vmult(re,re);var I=oe.testSepAxis(re,B,q,G,A,U);if(I===!1)return!1;I<ce&&(ce=I,J.copy(re))}if(B.uniqueAxes)for(var Te=0;Te!==B.uniqueAxes.length;Te++){U.vmult(B.uniqueAxes[Te],de);var I=oe.testSepAxis(de,B,q,G,A,U);if(I===!1)return!1;I<ce&&(ce=I,J.copy(de))}else for(var ue=ie?ie.length:B.faces.length,Te=0;Te<ue;Te++){var z=ie?ie[Te]:Te;de.copy(B.faceNormals[z]),U.vmult(de,de);var I=oe.testSepAxis(de,B,q,G,A,U);if(I===!1)return!1;I<ce&&(ce=I,J.copy(de))}for(var we=0;we!==oe.uniqueEdges.length;we++){G.vmult(oe.uniqueEdges[we],X);for(var ve=0;ve!==B.uniqueEdges.length;ve++)if(U.vmult(B.uniqueEdges[ve],pe),X.cross(pe,he),!he.almostZero()){he.normalize();var ge=oe.testSepAxis(he,B,q,G,A,U);if(ge===!1)return!1;ge<ce&&(ce=ge,J.copy(he))}}return A.vsub(q,me),me.dot(J)>0&&J.negate(J),!0};var x=[],_=[];l.prototype.testSepAxis=function(B,q,G,A,U,J){var $=this;l.project($,B,G,A,x),l.project(q,B,U,J,_);var ie=x[0],re=x[1],de=_[0],me=_[1],X=ie-me,pe=de-re,he=X<pe?X:pe;return he};var b=new a,w=new a;l.prototype.calculateLocalInertia=function(B,q){this.computeLocalAABB(b,w);var G=w.x-b.x,A=w.y-b.y,U=w.z-b.z;q.x=1/12*B*(2*A*2*A+2*U*2*U),q.y=1/12*B*(2*G*2*G+2*U*2*U),q.z=1/12*B*(2*A*2*A+2*G*2*G)},l.prototype.getPlaneConstantOfFace=function(B){var q=this.faces[B],G=this.faceNormals[B],A=this.vertices[q[0]],U=-G.dot(A);return U};var S=new a,C=new a,L=new a,M=new a,E=new a,N=new a,k=new a,F=new a;l.prototype.clipFaceAgainstHull=function(B,q,G,A,U,J,$){for(var ie=S,re=C,de=L,me=M,X=E,pe=N,he=k,ce=F,oe=this,ze=[],Te=A,z=ze,I=-1,ue=Number.MAX_VALUE,we=0;we<oe.faces.length;we++){ie.copy(oe.faceNormals[we]),G.vmult(ie,ie);var ve=ie.dot(B);ve<ue&&(ue=ve,I=we)}if(!(I<0)){var ge=oe.faces[I];ge.connectedFaces=[];for(var ne=0;ne<oe.faces.length;ne++)for(var ye=0;ye<oe.faces[ne].length;ye++)ge.indexOf(oe.faces[ne][ye])!==-1&&ne!==I&&ge.connectedFaces.indexOf(ne)===-1&&ge.connectedFaces.push(ne);Te.length;for(var xe=ge.length,Fe=0;Fe<xe;Fe++){var Pe=oe.vertices[ge[Fe]],Ee=oe.vertices[ge[(Fe+1)%xe]];Pe.vsub(Ee,re),de.copy(re),G.vmult(de,de),q.vadd(de,de),me.copy(this.faceNormals[I]),G.vmult(me,me),q.vadd(me,me),de.cross(me,X),X.negate(X),pe.copy(Pe),G.vmult(pe,pe),q.vadd(pe,pe),-pe.dot(X);var Je;{var it=ge.connectedFaces[Fe];he.copy(this.faceNormals[it]);var je=this.getPlaneConstantOfFace(it);ce.copy(he),G.vmult(ce,ce);var Je=je-ce.dot(q)}for(this.clipFaceAgainstPlane(Te,z,ce,Je);Te.length;)Te.shift();for(;z.length;)Te.push(z.shift())}he.copy(this.faceNormals[I]);var je=this.getPlaneConstantOfFace(I);ce.copy(he),G.vmult(ce,ce);for(var Je=je-ce.dot(q),ne=0;ne<Te.length;ne++){var Ge=ce.dot(Te[ne])+Je;if(Ge<=U&&(console.log("clamped: depth="+Ge+" to minDist="+(U+"")),Ge=U),Ge<=J){var We=Te[ne];if(Ge<=0){var at={point:We,normal:ce,depth:Ge};$.push(at)}}}}},l.prototype.clipFaceAgainstPlane=function(B,q,G,A){var U,J,$=B.length;if($<2)return q;var ie=B[B.length-1],re=B[0];U=G.dot(ie)+A;for(var de=0;de<$;de++){if(re=B[de],J=G.dot(re)+A,U<0)if(J<0){var me=new a;me.copy(re),q.push(me)}else{var me=new a;ie.lerp(re,U/(U-J),me),q.push(me)}else if(J<0){var me=new a;ie.lerp(re,U/(U-J),me),q.push(me),q.push(re)}ie=re,U=J}return q},l.prototype.computeWorldVertices=function(B,q){for(var G=this.vertices.length;this.worldVertices.length<G;)this.worldVertices.push(new a);for(var A=this.vertices,U=this.worldVertices,J=0;J!==G;J++)q.vmult(A[J],U[J]),B.vadd(U[J],U[J]);this.worldVerticesNeedsUpdate=!1},new a,l.prototype.computeLocalAABB=function(B,q){var G=this.vertices.length,A=this.vertices;B.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),q.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(var U=0;U<G;U++){var J=A[U];J.x<B.x?B.x=J.x:J.x>q.x&&(q.x=J.x),J.y<B.y?B.y=J.y:J.y>q.y&&(q.y=J.y),J.z<B.z?B.z=J.z:J.z>q.z&&(q.z=J.z)}},l.prototype.computeWorldFaceNormals=function(B){for(var q=this.faceNormals.length;this.worldFaceNormals.length<q;)this.worldFaceNormals.push(new a);for(var G=this.faceNormals,A=this.worldFaceNormals,U=0;U!==q;U++)B.vmult(G[U],A[U]);this.worldFaceNormalsNeedsUpdate=!1},l.prototype.updateBoundingSphereRadius=function(){for(var B=0,q=this.vertices,G=0,A=q.length;G!==A;G++){var U=q[G].norm2();U>B&&(B=U)}this.boundingSphereRadius=Math.sqrt(B)};var V=new a;l.prototype.calculateWorldAABB=function(B,q,G,A){for(var U=this.vertices.length,J=this.vertices,$,ie,re,de,me,X,pe=0;pe<U;pe++){V.copy(J[pe]),q.vmult(V,V),B.vadd(V,V);var he=V;he.x<$||$===void 0?$=he.x:(he.x>de||de===void 0)&&(de=he.x),he.y<ie||ie===void 0?ie=he.y:(he.y>me||me===void 0)&&(me=he.y),he.z<re||re===void 0?re=he.z:(he.z>X||X===void 0)&&(X=he.z)}G.set($,ie,re),A.set(de,me,X)},l.prototype.volume=function(){return 4*Math.PI*this.boundingSphereRadius/3},l.prototype.getAveragePointLocal=function(B){B=B||new a;for(var q=this.vertices.length,G=this.vertices,A=0;A<q;A++)B.vadd(G[A],B);return B.mult(1/q,B),B},l.prototype.transformAllPoints=function(B,q){var G=this.vertices.length,A=this.vertices;if(q){for(var U=0;U<G;U++){var J=A[U];q.vmult(J,J)}for(var U=0;U<this.faceNormals.length;U++){var J=this.faceNormals[U];q.vmult(J,J)}}if(B)for(var U=0;U<G;U++){var J=A[U];J.vadd(B,J)}};var ee=new a,R=new a,T=new a;l.prototype.pointIsInside=function(B){var q=this.vertices.length,G=this.vertices,A=this.faces,U=this.faceNormals,J=null,$=this.faces.length,ie=ee;this.getAveragePointLocal(ie);for(var re=0;re<$;re++){this.faces[re].length;var q=U[re],de=G[A[re][0]],me=R;B.vsub(de,me);var X=q.dot(me),pe=T;ie.vsub(de,pe);var he=q.dot(pe);if(X<0&&he>0||X>0&&he<0)return!1}return J?1:-1},new a;var H=new a,O=new a;l.project=function(B,q,G,A,U){var J=B.vertices.length,$=H,ie=0,re=0,de=O,me=B.vertices;de.setZero(),o.vectorToLocalFrame(G,A,q,$),o.pointToLocalFrame(G,A,de,de);var X=de.dot($);re=ie=me[0].dot($);for(var pe=1;pe<J;pe++){var he=me[pe].dot($);he>ie&&(ie=he),he<re&&(re=he)}if(re-=X,ie-=X,re>ie){var ce=re;re=ie,ie=ce}U[0]=ie,U[1]=re}},{"../math/Quaternion":28,"../math/Transform":29,"../math/Vec3":30,"./Shape":43}],39:[function(n,i,r){i.exports=l;var s=n("./Shape"),a=n("../math/Vec3");n("../math/Quaternion");var o=n("./ConvexPolyhedron");function l(c,h,u,f){var d=f,p=[],g=[],v=[],m=[],y=[],x=Math.cos,_=Math.sin;p.push(new a(h*x(0),h*_(0),-u*.5)),m.push(0),p.push(new a(c*x(0),c*_(0),u*.5)),y.push(1);for(var b=0;b<d;b++){var w=2*Math.PI/d*(b+1),S=2*Math.PI/d*(b+.5);b<d-1?(p.push(new a(h*x(w),h*_(w),-u*.5)),m.push(2*b+2),p.push(new a(c*x(w),c*_(w),u*.5)),y.push(2*b+3),v.push([2*b+2,2*b+3,2*b+1,2*b])):v.push([0,1,2*b+1,2*b]),(d%2===1||b<d/2)&&g.push(new a(x(S),_(S),0))}v.push(y),g.push(new a(0,0,1));for(var C=[],b=0;b<m.length;b++)C.push(m[m.length-b-1]);v.push(C),this.type=s.types.CONVEXPOLYHEDRON,o.call(this,p,v,g)}l.prototype=new o},{"../math/Quaternion":28,"../math/Vec3":30,"./ConvexPolyhedron":38,"./Shape":43}],40:[function(n,i,r){var s=n("./Shape"),a=n("./ConvexPolyhedron"),o=n("../math/Vec3"),l=n("../utils/Utils");i.exports=c;function c(h,u){u=l.defaults(u,{maxValue:null,minValue:null,elementSize:1}),this.data=h,this.maxValue=u.maxValue,this.minValue=u.minValue,this.elementSize=u.elementSize,u.minValue===null&&this.updateMinValue(),u.maxValue===null&&this.updateMaxValue(),this.cacheEnabled=!0,s.call(this),this.pillarConvex=new a,this.pillarOffset=new o,this.type=s.types.HEIGHTFIELD,this.updateBoundingSphereRadius(),this._cachedPillars={}}c.prototype=new s,c.prototype.update=function(){this._cachedPillars={}},c.prototype.updateMinValue=function(){for(var h=this.data,u=h[0][0],f=0;f!==h.length;f++)for(var d=0;d!==h[f].length;d++){var p=h[f][d];p<u&&(u=p)}this.minValue=u},c.prototype.updateMaxValue=function(){for(var h=this.data,u=h[0][0],f=0;f!==h.length;f++)for(var d=0;d!==h[f].length;d++){var p=h[f][d];p>u&&(u=p)}this.maxValue=u},c.prototype.setHeightValueAtIndex=function(h,u,f){var d=this.data;d[h][u]=f,this.clearCachedConvexTrianglePillar(h,u,!1),h>0&&(this.clearCachedConvexTrianglePillar(h-1,u,!0),this.clearCachedConvexTrianglePillar(h-1,u,!1)),u>0&&(this.clearCachedConvexTrianglePillar(h,u-1,!0),this.clearCachedConvexTrianglePillar(h,u-1,!1)),u>0&&h>0&&this.clearCachedConvexTrianglePillar(h-1,u-1,!0)},c.prototype.getRectMinMax=function(h,u,f,d,p){p=p||[];for(var g=this.data,v=this.minValue,m=h;m<=f;m++)for(var y=u;y<=d;y++){var x=g[m][y];x>v&&(v=x)}p[0]=this.minValue,p[1]=v},c.prototype.getIndexOfPosition=function(h,u,f,d){var p=this.elementSize,g=this.data,v=Math.floor(h/p),m=Math.floor(u/p);return f[0]=v,f[1]=m,d&&(v<0&&(v=0),m<0&&(m=0),v>=g.length-1&&(v=g.length-1),m>=g[0].length-1&&(m=g[0].length-1)),!(v<0||m<0||v>=g.length-1||m>=g[0].length-1)},c.prototype.getHeightAt=function(h,u,f){var d=[];this.getIndexOfPosition(h,u,d,f);var p=[];return this.getRectMinMax(d[0],d[1]+1,d[0],d[1]+1,p),(p[0]+p[1])/2},c.prototype.getCacheConvexTrianglePillarKey=function(h,u,f){return h+"_"+u+"_"+(f?1:0)},c.prototype.getCachedConvexTrianglePillar=function(h,u,f){return this._cachedPillars[this.getCacheConvexTrianglePillarKey(h,u,f)]},c.prototype.setCachedConvexTrianglePillar=function(h,u,f,d,p){this._cachedPillars[this.getCacheConvexTrianglePillarKey(h,u,f)]={convex:d,offset:p}},c.prototype.clearCachedConvexTrianglePillar=function(h,u,f){delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(h,u,f)]},c.prototype.getConvexTrianglePillar=function(h,u,f){var d=this.pillarConvex,p=this.pillarOffset;if(this.cacheEnabled){var g=this.getCachedConvexTrianglePillar(h,u,f);if(g){this.pillarConvex=g.convex,this.pillarOffset=g.offset;return}d=new a,p=new o,this.pillarConvex=d,this.pillarOffset=p}var g=this.data,v=this.elementSize,m=d.faces;d.vertices.length=6;for(var y=0;y<6;y++)d.vertices[y]||(d.vertices[y]=new o);m.length=5;for(var y=0;y<5;y++)m[y]||(m[y]=[]);var x=d.vertices,_=(Math.min(g[h][u],g[h+1][u],g[h][u+1],g[h+1][u+1])-this.minValue)/2+this.minValue;f?(p.set((h+.75)*v,(u+.75)*v,_),x[0].set(.25*v,.25*v,g[h+1][u+1]-_),x[1].set(-.75*v,.25*v,g[h][u+1]-_),x[2].set(.25*v,-.75*v,g[h+1][u]-_),x[3].set(.25*v,.25*v,-_-1),x[4].set(-.75*v,.25*v,-_-1),x[5].set(.25*v,-.75*v,-_-1),m[0][0]=0,m[0][1]=1,m[0][2]=2,m[1][0]=5,m[1][1]=4,m[1][2]=3,m[2][0]=2,m[2][1]=5,m[2][2]=3,m[2][3]=0,m[3][0]=3,m[3][1]=4,m[3][2]=1,m[3][3]=0,m[4][0]=1,m[4][1]=4,m[4][2]=5,m[4][3]=2):(p.set((h+.25)*v,(u+.25)*v,_),x[0].set(-.25*v,-.25*v,g[h][u]-_),x[1].set(.75*v,-.25*v,g[h+1][u]-_),x[2].set(-.25*v,.75*v,g[h][u+1]-_),x[3].set(-.25*v,-.25*v,-_-1),x[4].set(.75*v,-.25*v,-_-1),x[5].set(-.25*v,.75*v,-_-1),m[0][0]=0,m[0][1]=1,m[0][2]=2,m[1][0]=5,m[1][1]=4,m[1][2]=3,m[2][0]=0,m[2][1]=2,m[2][2]=5,m[2][3]=3,m[3][0]=1,m[3][1]=0,m[3][2]=3,m[3][3]=4,m[4][0]=4,m[4][1]=5,m[4][2]=2,m[4][3]=1),d.computeNormals(),d.computeEdges(),d.updateBoundingSphereRadius(),this.setCachedConvexTrianglePillar(h,u,f,d,p)},c.prototype.calculateLocalInertia=function(h,u){return u=u||new o,u.set(0,0,0),u},c.prototype.volume=function(){return Number.MAX_VALUE},c.prototype.calculateWorldAABB=function(h,u,f,d){f.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),d.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE)},c.prototype.updateBoundingSphereRadius=function(){var h=this.data,u=this.elementSize;this.boundingSphereRadius=new o(h.length*u,h[0].length*u,Math.max(Math.abs(this.maxValue),Math.abs(this.minValue))).norm()}},{"../math/Vec3":30,"../utils/Utils":53,"./ConvexPolyhedron":38,"./Shape":43}],41:[function(n,i,r){i.exports=o;var s=n("./Shape"),a=n("../math/Vec3");function o(){s.call(this),this.type=s.types.PARTICLE}o.prototype=new s,o.prototype.constructor=o,o.prototype.calculateLocalInertia=function(l,c){return c=c||new a,c.set(0,0,0),c},o.prototype.volume=function(){return 0},o.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=0},o.prototype.calculateWorldAABB=function(l,c,h,u){h.copy(l),u.copy(l)}},{"../math/Vec3":30,"./Shape":43}],42:[function(n,i,r){i.exports=o;var s=n("./Shape"),a=n("../math/Vec3");function o(){s.call(this),this.type=s.types.PLANE,this.worldNormal=new a,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}o.prototype=new s,o.prototype.constructor=o,o.prototype.computeWorldNormal=function(c){var h=this.worldNormal;h.set(0,0,1),c.vmult(h,h),this.worldNormalNeedsUpdate=!1},o.prototype.calculateLocalInertia=function(c,h){return h=h||new a,h},o.prototype.volume=function(){return Number.MAX_VALUE};var l=new a;o.prototype.calculateWorldAABB=function(c,h,u,f){l.set(0,0,1),h.vmult(l,l);var d=Number.MAX_VALUE;u.set(-d,-d,-d),f.set(d,d,d),l.x===1&&(f.x=c.x),l.y===1&&(f.y=c.y),l.z===1&&(f.z=c.z),l.x===-1&&(u.x=c.x),l.y===-1&&(u.y=c.y),l.z===-1&&(u.z=c.z)},o.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=Number.MAX_VALUE}},{"../math/Vec3":30,"./Shape":43}],43:[function(n,i,r){i.exports=s;var s=n("./Shape");n("../math/Vec3"),n("../math/Quaternion"),n("../material/Material");function s(){this.id=s.idCounter++,this.type=0,this.boundingSphereRadius=0,this.collisionResponse=!0,this.material=null}s.prototype.constructor=s,s.prototype.updateBoundingSphereRadius=function(){throw"computeBoundingSphereRadius() not implemented for shape type "+this.type},s.prototype.volume=function(){throw"volume() not implemented for shape type "+this.type},s.prototype.calculateLocalInertia=function(a,o){throw"calculateLocalInertia() not implemented for shape type "+this.type},s.idCounter=0,s.types={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256}},{"../material/Material":25,"../math/Quaternion":28,"../math/Vec3":30,"./Shape":43}],44:[function(n,i,r){i.exports=o;var s=n("./Shape"),a=n("../math/Vec3");function o(l){if(s.call(this),this.radius=l!==void 0?Number(l):1,this.type=s.types.SPHERE,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}o.prototype=new s,o.prototype.constructor=o,o.prototype.calculateLocalInertia=function(l,c){c=c||new a;var h=2*l*this.radius*this.radius/5;return c.x=h,c.y=h,c.z=h,c},o.prototype.volume=function(){return 4*Math.PI*this.radius/3},o.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=this.radius},o.prototype.calculateWorldAABB=function(l,c,h,u){for(var f=this.radius,d=["x","y","z"],p=0;p<d.length;p++){var g=d[p];h[g]=l[g]-f,u[g]=l[g]+f}}},{"../math/Vec3":30,"./Shape":43}],45:[function(n,i,r){i.exports=h;var s=n("./Shape"),a=n("../math/Vec3");n("../math/Quaternion");var o=n("../math/Transform"),l=n("../collision/AABB"),c=n("../utils/Octree");function h(C,L){s.call(this),this.type=s.types.TRIMESH,this.vertices=new Float32Array(C),this.indices=new Int16Array(L),this.normals=new Float32Array(L.length),this.aabb=new l,this.edges=null,this.scale=new a(1,1,1),this.tree=new c,this.updateEdges(),this.updateNormals(),this.updateAABB(),this.updateBoundingSphereRadius(),this.updateTree()}h.prototype=new s,h.prototype.constructor=h;var u=new a;h.prototype.updateTree=function(){var C=this.tree;C.reset(),C.aabb.copy(this.aabb);var L=this.scale;C.aabb.lowerBound.x*=1/L.x,C.aabb.lowerBound.y*=1/L.y,C.aabb.lowerBound.z*=1/L.z,C.aabb.upperBound.x*=1/L.x,C.aabb.upperBound.y*=1/L.y,C.aabb.upperBound.z*=1/L.z;for(var M=new l,E=new a,N=new a,k=new a,F=[E,N,k],V=0;V<this.indices.length/3;V++){var ee=V*3;this._getUnscaledVertex(this.indices[ee],E),this._getUnscaledVertex(this.indices[ee+1],N),this._getUnscaledVertex(this.indices[ee+2],k),M.setFromPoints(F),C.insert(M,V)}C.removeEmptyNodes()};var f=new l;h.prototype.getTrianglesInAABB=function(C,L){f.copy(C);var M=this.scale,E=M.x,N=M.y,k=M.z,F=f.lowerBound,V=f.upperBound;return F.x/=E,F.y/=N,F.z/=k,V.x/=E,V.y/=N,V.z/=k,this.tree.aabbQuery(f,L)},h.prototype.setScale=function(C){var L=this.scale.x===this.scale.y===this.scale.z,M=C.x===C.y===C.z;L&&M||this.updateNormals(),this.scale.copy(C),this.updateAABB(),this.updateBoundingSphereRadius()},h.prototype.updateNormals=function(){for(var C=u,L=this.normals,M=0;M<this.indices.length/3;M++){var E=M*3,N=this.indices[E],k=this.indices[E+1],F=this.indices[E+2];this.getVertex(N,m),this.getVertex(k,y),this.getVertex(F,x),h.computeNormal(y,m,x,C),L[E]=C.x,L[E+1]=C.y,L[E+2]=C.z}},h.prototype.updateEdges=function(){for(var C={},L=function(ee,R){var T=N<k?N+"_"+k:k+"_"+N;C[T]=!0},M=0;M<this.indices.length/3;M++){var E=M*3,N=this.indices[E],k=this.indices[E+1];this.indices[E+2],L(),L(),L()}var F=Object.keys(C);this.edges=new Int16Array(F.length*2);for(var M=0;M<F.length;M++){var V=F[M].split("_");this.edges[2*M]=parseInt(V[0],10),this.edges[2*M+1]=parseInt(V[1],10)}},h.prototype.getEdgeVertex=function(C,L,M){var E=this.edges[C*2+(L?1:0)];this.getVertex(E,M)};var d=new a,p=new a;h.prototype.getEdgeVector=function(C,L){var M=d,E=p;this.getEdgeVertex(C,0,M),this.getEdgeVertex(C,1,E),E.vsub(M,L)};var g=new a,v=new a;h.computeNormal=function(C,L,M,E){L.vsub(C,v),M.vsub(L,g),g.cross(v,E),E.isZero()||E.normalize()};var m=new a,y=new a,x=new a;h.prototype.getVertex=function(C,L){var M=this.scale;return this._getUnscaledVertex(C,L),L.x*=M.x,L.y*=M.y,L.z*=M.z,L},h.prototype._getUnscaledVertex=function(C,L){var M=C*3,E=this.vertices;return L.set(E[M],E[M+1],E[M+2])},h.prototype.getWorldVertex=function(C,L,M,E){return this.getVertex(C,E),o.pointToWorldFrame(L,M,E,E),E},h.prototype.getTriangleVertices=function(C,L,M,E){var N=C*3;this.getVertex(this.indices[N],L),this.getVertex(this.indices[N+1],M),this.getVertex(this.indices[N+2],E)},h.prototype.getNormal=function(C,L){var M=C*3;return L.set(this.normals[M],this.normals[M+1],this.normals[M+2])};var _=new l;h.prototype.calculateLocalInertia=function(C,L){this.computeLocalAABB(_);var M=_.upperBound.x-_.lowerBound.x,E=_.upperBound.y-_.lowerBound.y,N=_.upperBound.z-_.lowerBound.z;return L.set(1/12*C*(2*E*2*E+2*N*2*N),1/12*C*(2*M*2*M+2*N*2*N),1/12*C*(2*E*2*E+2*M*2*M))};var b=new a;h.prototype.computeLocalAABB=function(C){var L=C.lowerBound,M=C.upperBound,E=this.vertices.length;this.vertices;var N=b;this.getVertex(0,N),L.copy(N),M.copy(N);for(var k=0;k!==E;k++)this.getVertex(k,N),N.x<L.x?L.x=N.x:N.x>M.x&&(M.x=N.x),N.y<L.y?L.y=N.y:N.y>M.y&&(M.y=N.y),N.z<L.z?L.z=N.z:N.z>M.z&&(M.z=N.z)},h.prototype.updateAABB=function(){this.computeLocalAABB(this.aabb)},h.prototype.updateBoundingSphereRadius=function(){for(var C=0,L=this.vertices,M=new a,E=0,N=L.length/3;E!==N;E++){this.getVertex(E,M);var k=M.norm2();k>C&&(C=k)}this.boundingSphereRadius=Math.sqrt(C)},new a;var w=new o,S=new l;h.prototype.calculateWorldAABB=function(C,L,M,E){var N=w,k=S;N.position=C,N.quaternion=L,this.aabb.toWorldFrame(N,k),M.copy(k.lowerBound),E.copy(k.upperBound)},h.prototype.volume=function(){return 4*Math.PI*this.boundingSphereRadius/3},h.createTorus=function(C,L,M,E,N){C=C||1,L=L||.5,M=M||8,E=E||6,N=N||Math.PI*2;for(var k=[],F=[],V=0;V<=M;V++)for(var ee=0;ee<=E;ee++){var R=ee/E*N,T=V/M*Math.PI*2,H=(C+L*Math.cos(T))*Math.cos(R),O=(C+L*Math.cos(T))*Math.sin(R),B=L*Math.sin(T);k.push(H,O,B)}for(var V=1;V<=M;V++)for(var ee=1;ee<=E;ee++){var q=(E+1)*V+ee-1,G=(E+1)*(V-1)+ee-1,A=(E+1)*(V-1)+ee,U=(E+1)*V+ee;F.push(q,G,U),F.push(G,A,U)}return new h(k,F)}},{"../collision/AABB":3,"../math/Quaternion":28,"../math/Transform":29,"../math/Vec3":30,"../utils/Octree":50,"./Shape":43}],46:[function(n,i,r){i.exports=a,n("../math/Vec3"),n("../math/Quaternion");var s=n("./Solver");function a(){s.call(this),this.iterations=10,this.tolerance=1e-7}a.prototype=new s;var o=[],l=[],c=[];a.prototype.solve=function(h,u){var f=0,d=this.iterations,p=this.tolerance*this.tolerance,g=this.equations,v=g.length,m=u.bodies,y=m.length,x=h,_,b,w,S,C,L;if(v!==0)for(var M=0;M!==y;M++)m[M].updateSolveMassProperties();var E=l,N=c,k=o;E.length=v,N.length=v,k.length=v;for(var M=0;M!==v;M++){var F=g[M];k[M]=0,N[M]=F.computeB(x),E[M]=1/F.computeC()}if(v!==0){for(var M=0;M!==y;M++){var V=m[M],ee=V.vlambda,R=V.wlambda;ee.set(0,0,0),R&&R.set(0,0,0)}for(f=0;f!==d;f++){S=0;for(var T=0;T!==v;T++){var F=g[T];_=N[T],b=E[T],L=k[T],C=F.computeGWlambda(),w=b*(_-C-F.eps*L),L+w<F.minForce?w=F.minForce-L:L+w>F.maxForce&&(w=F.maxForce-L),k[T]+=w,S+=w>0?w:-w,F.addToWlambda(w)}if(S*S<p)break}for(var M=0;M!==y;M++){var V=m[M],H=V.velocity,O=V.angularVelocity;H.vadd(V.vlambda,H),O&&O.vadd(V.wlambda,O)}}return f}},{"../math/Quaternion":28,"../math/Vec3":30,"./Solver":47}],47:[function(n,i,r){i.exports=s;function s(){this.equations=[]}s.prototype.solve=function(a,o){return 0},s.prototype.addEquation=function(a){a.enabled&&this.equations.push(a)},s.prototype.removeEquation=function(a){var o=this.equations,l=o.indexOf(a);l!==-1&&o.splice(l,1)},s.prototype.removeAllEquations=function(){this.equations.length=0}},{}],48:[function(n,i,r){i.exports=o,n("../math/Vec3"),n("../math/Quaternion");var s=n("./Solver"),a=n("../objects/Body");function o(m){for(s.call(this),this.iterations=10,this.tolerance=1e-7,this.subsolver=m,this.nodes=[],this.nodePool=[];this.nodePool.length<128;)this.nodePool.push(this.createNode())}o.prototype=new s;var l=[],c=[],h={bodies:[]},u=a.STATIC;function f(m){for(var y=m.length,x=0;x!==y;x++){var _=m[x];if(!_.visited&&!(_.body.type&u))return _}return!1}var d=[];function p(m,y,x,_){for(d.push(m),m.visited=!0,y(m,x,_);d.length;)for(var b=d.pop(),w;w=f(b.children);)w.visited=!0,y(w,x,_),d.push(w)}function g(m,y,x){y.push(m.body);for(var _=m.eqs.length,b=0;b!==_;b++){var w=m.eqs[b];x.indexOf(w)===-1&&x.push(w)}}o.prototype.createNode=function(){return{body:null,children:[],eqs:[],visited:!1}},o.prototype.solve=function(m,y){for(var x=l,_=this.nodePool,b=y.bodies,w=this.equations,S=w.length,C=b.length,L=this.subsolver;_.length<C;)_.push(this.createNode());x.length=C;for(var M=0;M<C;M++)x[M]=_[M];for(var M=0;M!==C;M++){var E=x[M];E.body=b[M],E.children.length=0,E.eqs.length=0,E.visited=!1}for(var N=0;N!==S;N++){var k=w[N],M=b.indexOf(k.bi),F=b.indexOf(k.bj),V=x[M],ee=x[F];V.children.push(ee),V.eqs.push(k),ee.children.push(V),ee.eqs.push(k)}var R,T=0,H=c;L.tolerance=this.tolerance,L.iterations=this.iterations;for(var O=h;R=f(x);){H.length=0,O.bodies.length=0,p(R,g,O.bodies,H);var B=H.length;H=H.sort(v);for(var M=0;M!==B;M++)L.addEquation(H[M]);L.solve(m,O),L.removeAllEquations(),T++}return T};function v(m,y){return y.id-m.id}},{"../math/Quaternion":28,"../math/Vec3":30,"../objects/Body":31,"./Solver":47}],49:[function(n,i,r){var s=function(){};i.exports=s,s.prototype={constructor:s,addEventListener:function(a,o){this._listeners===void 0&&(this._listeners={});var l=this._listeners;return l[a]===void 0&&(l[a]=[]),l[a].indexOf(o)===-1&&l[a].push(o),this},hasEventListener:function(a,o){if(this._listeners===void 0)return!1;var l=this._listeners;return l[a]!==void 0&&l[a].indexOf(o)!==-1},removeEventListener:function(a,o){if(this._listeners===void 0)return this;var l=this._listeners;if(l[a]===void 0)return this;var c=l[a].indexOf(o);return c!==-1&&l[a].splice(c,1),this},dispatchEvent:function(a){if(this._listeners===void 0)return this;var o=this._listeners,l=o[a.type];if(l!==void 0){a.target=this;for(var c=0,h=l.length;c<h;c++)l[c].call(this,a)}return this}}},{}],50:[function(n,i,r){var s=n("../collision/AABB"),a=n("../math/Vec3");i.exports=l;function o(u){u=u||{},this.root=u.root||null,this.aabb=u.aabb?u.aabb.clone():new s,this.data=[],this.children=[]}function l(u,f){f=f||{},f.root=null,f.aabb=u,o.call(this,f),this.maxDepth=typeof f.maxDepth<"u"?f.maxDepth:8}l.prototype=new o,o.prototype.reset=function(u,f){this.children.length=this.data.length=0},o.prototype.insert=function(u,f,d){var p=this.data;if(d=d||0,!this.aabb.contains(u))return!1;var g=this.children;if(d<(this.maxDepth||this.root.maxDepth)){var v=!1;g.length||(this.subdivide(),v=!0);for(var m=0;m!==8;m++)if(g[m].insert(u,f,d+1))return!0;v&&(g.length=0)}return p.push(f),!0};var c=new a;o.prototype.subdivide=function(){var u=this.aabb,f=u.lowerBound,d=u.upperBound,p=this.children;p.push(new o({aabb:new s({lowerBound:new a(0,0,0)})}),new o({aabb:new s({lowerBound:new a(1,0,0)})}),new o({aabb:new s({lowerBound:new a(1,1,0)})}),new o({aabb:new s({lowerBound:new a(1,1,1)})}),new o({aabb:new s({lowerBound:new a(0,1,1)})}),new o({aabb:new s({lowerBound:new a(0,0,1)})}),new o({aabb:new s({lowerBound:new a(1,0,1)})}),new o({aabb:new s({lowerBound:new a(0,1,0)})})),d.vsub(f,c),c.scale(.5,c);for(var g=this.root||this,v=0;v!==8;v++){var m=p[v];m.root=g;var y=m.aabb.lowerBound;y.x*=c.x,y.y*=c.y,y.z*=c.z,y.vadd(f,y),y.vadd(c,m.aabb.upperBound)}},o.prototype.aabbQuery=function(u,f){this.data,this.children;for(var d=[this];d.length;){var p=d.pop();p.aabb.overlaps(u)&&Array.prototype.push.apply(f,p.data),Array.prototype.push.apply(d,p.children)}return f};var h=new s;o.prototype.rayQuery=function(u,f,d){return u.getAABB(h),h.toLocalFrame(f,h),this.aabbQuery(h,d),d},o.prototype.removeEmptyNodes=function(){for(var u=[this];u.length;){for(var f=u.pop(),d=f.children.length-1;d>=0;d--)f.children[d].data.length||f.children.splice(d,1);Array.prototype.push.apply(u,f.children)}}},{"../collision/AABB":3,"../math/Vec3":30}],51:[function(n,i,r){i.exports=s;function s(){this.objects=[],this.type=Object}s.prototype.release=function(){for(var a=arguments.length,o=0;o!==a;o++)this.objects.push(arguments[o])},s.prototype.get=function(){return this.objects.length===0?this.constructObject():this.objects.pop()},s.prototype.constructObject=function(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}},{}],52:[function(n,i,r){i.exports=s;function s(){this.data={keys:[]}}s.prototype.get=function(a,o){if(a>o){var l=o;o=a,a=l}return this.data[a+"-"+o]},s.prototype.set=function(a,o,l){if(a>o){var c=o;o=a,a=c}var h=a+"-"+o;this.get(a,o)||this.data.keys.push(h),this.data[h]=l},s.prototype.reset=function(){for(var a=this.data,o=a.keys;o.length>0;){var l=o.pop();delete a[l]}}},{}],53:[function(n,i,r){function s(){}i.exports=s,s.defaults=function(a,o){a=a||{};for(var l in o)l in a||(a[l]=o[l]);return a}},{}],54:[function(n,i,r){i.exports=o;var s=n("../math/Vec3"),a=n("./Pool");function o(){a.call(this),this.type=s}o.prototype=new a,o.prototype.constructObject=function(){return new s}},{"../math/Vec3":30,"./Pool":51}],55:[function(n,i,r){i.exports=p;var s=n("../collision/AABB"),a=n("../shapes/Shape"),o=n("../collision/Ray"),l=n("../math/Vec3"),c=n("../math/Transform");n("../shapes/ConvexPolyhedron");var h=n("../math/Quaternion");n("../solver/Solver");var u=n("../utils/Vec3Pool"),f=n("../equations/ContactEquation"),d=n("../equations/FrictionEquation");function p(be){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new u,this.world=be,this.currentContactMaterial=null,this.enableFrictionReduction=!1}p.prototype.createContactEquation=function(be,Me,Ce,Re,mt,Ze){var Ve;this.contactPointPool.length?(Ve=this.contactPointPool.pop(),Ve.bi=be,Ve.bj=Me):Ve=new f(be,Me),Ve.enabled=be.collisionResponse&&Me.collisionResponse&&Ce.collisionResponse&&Re.collisionResponse;var $e=this.currentContactMaterial;Ve.restitution=$e.restitution,Ve.setSpookParams($e.contactEquationStiffness,$e.contactEquationRelaxation,this.world.dt);var _e=Ce.material||be.material,ke=Re.material||Me.material;return _e&&ke&&_e.restitution>=0&&ke.restitution>=0&&(Ve.restitution=_e.restitution*ke.restitution),Ve.si=mt||Ce,Ve.sj=Ze||Re,Ve},p.prototype.createFrictionEquationsFromContact=function(be,Me){var Ce=be.bi,Re=be.bj,mt=be.si,Ze=be.sj,Ve=this.world,$e=this.currentContactMaterial,_e=$e.friction,ke=mt.material||Ce.material,D=Ze.material||Re.material;if(ke&&D&&ke.friction>=0&&D.friction>=0&&(_e=ke.friction*D.friction),_e>0){var W=_e*Ve.gravity.length(),Y=Ce.invMass+Re.invMass;Y>0&&(Y=1/Y);var fe=this.frictionEquationPool,P=fe.length?fe.pop():new d(Ce,Re,W*Y),Q=fe.length?fe.pop():new d(Ce,Re,W*Y);return P.bi=Q.bi=Ce,P.bj=Q.bj=Re,P.minForce=Q.minForce=-W*Y,P.maxForce=Q.maxForce=W*Y,P.ri.copy(be.ri),P.rj.copy(be.rj),Q.ri.copy(be.ri),Q.rj.copy(be.rj),be.ni.tangents(P.t,Q.t),P.setSpookParams($e.frictionEquationStiffness,$e.frictionEquationRelaxation,Ve.dt),Q.setSpookParams($e.frictionEquationStiffness,$e.frictionEquationRelaxation,Ve.dt),P.enabled=Q.enabled=be.enabled,Me.push(P,Q),!0}return!1};var g=new l,v=new l,m=new l;p.prototype.createFrictionFromAverage=function(be){var Me=this.result[this.result.length-1];if(!(!this.createFrictionEquationsFromContact(Me,this.frictionResult)||be===1)){var Ce=this.frictionResult[this.frictionResult.length-2],Re=this.frictionResult[this.frictionResult.length-1];g.setZero(),v.setZero(),m.setZero();var mt=Me.bi;Me.bj;for(var Ze=0;Ze!==be;Ze++)Me=this.result[this.result.length-1-Ze],Me.bodyA!==mt?(g.vadd(Me.ni,g),v.vadd(Me.ri,v),m.vadd(Me.rj,m)):(g.vsub(Me.ni,g),v.vadd(Me.rj,v),m.vadd(Me.ri,m));var Ve=1/be;v.scale(Ve,Ce.ri),m.scale(Ve,Ce.rj),Re.ri.copy(Ce.ri),Re.rj.copy(Ce.rj),g.normalize(),g.tangents(Ce.t,Re.t)}};var y=new l,x=new l,_=new h,b=new h;p.prototype.getContacts=function(be,Me,Ce,Re,mt,Ze,Ve){this.contactPointPool=mt,this.frictionEquationPool=Ve,this.result=Re,this.frictionResult=Ze;for(var $e=_,_e=b,ke=y,D=x,W=0,Y=be.length;W!==Y;W++){var fe=be[W],P=Me[W],Q=null;fe.material&&P.material&&(Q=Ce.getContactMaterial(fe.material,P.material)||null);for(var le=0;le<fe.shapes.length;le++){fe.quaternion.mult(fe.shapeOrientations[le],$e),fe.quaternion.vmult(fe.shapeOffsets[le],ke),ke.vadd(fe.position,ke);for(var Z=fe.shapes[le],ae=0;ae<P.shapes.length;ae++){P.quaternion.mult(P.shapeOrientations[ae],_e),P.quaternion.vmult(P.shapeOffsets[ae],D),D.vadd(P.position,D);var Se=P.shapes[ae];if(!(ke.distanceTo(D)>Z.boundingSphereRadius+Se.boundingSphereRadius)){var Be=null;Z.material&&Se.material&&(Be=Ce.getContactMaterial(Z.material,Se.material)||null),this.currentContactMaterial=Be||Q||Ce.defaultContactMaterial;var Le=this[Z.type|Se.type];Le&&(Z.type<Se.type?Le.call(this,Z,Se,ke,D,$e,_e,fe,P,Z,Se):Le.call(this,Se,Z,D,ke,_e,$e,P,fe,Z,Se))}}}}},p.prototype[a.types.BOX|a.types.BOX]=p.prototype.boxBox=function(be,Me,Ce,Re,mt,Ze,Ve,$e){be.convexPolyhedronRepresentation.material=be.material,Me.convexPolyhedronRepresentation.material=Me.material,be.convexPolyhedronRepresentation.collisionResponse=be.collisionResponse,Me.convexPolyhedronRepresentation.collisionResponse=Me.collisionResponse,this.convexConvex(be.convexPolyhedronRepresentation,Me.convexPolyhedronRepresentation,Ce,Re,mt,Ze,Ve,$e,be,Me)},p.prototype[a.types.BOX|a.types.CONVEXPOLYHEDRON]=p.prototype.boxConvex=function(be,Me,Ce,Re,mt,Ze,Ve,$e){be.convexPolyhedronRepresentation.material=be.material,be.convexPolyhedronRepresentation.collisionResponse=be.collisionResponse,this.convexConvex(be.convexPolyhedronRepresentation,Me,Ce,Re,mt,Ze,Ve,$e,be,Me)},p.prototype[a.types.BOX|a.types.PARTICLE]=p.prototype.boxParticle=function(be,Me,Ce,Re,mt,Ze,Ve,$e){be.convexPolyhedronRepresentation.material=be.material,be.convexPolyhedronRepresentation.collisionResponse=be.collisionResponse,this.convexParticle(be.convexPolyhedronRepresentation,Me,Ce,Re,mt,Ze,Ve,$e,be,Me)},p.prototype[a.types.SPHERE]=p.prototype.sphereSphere=function(be,Me,Ce,Re,mt,Ze,Ve,$e){var _e=this.createContactEquation(Ve,$e,be,Me);Re.vsub(Ce,_e.ni),_e.ni.normalize(),_e.ri.copy(_e.ni),_e.rj.copy(_e.ni),_e.ri.mult(be.radius,_e.ri),_e.rj.mult(-Me.radius,_e.rj),_e.ri.vadd(Ce,_e.ri),_e.ri.vsub(Ve.position,_e.ri),_e.rj.vadd(Re,_e.rj),_e.rj.vsub($e.position,_e.rj),this.result.push(_e),this.createFrictionEquationsFromContact(_e,this.frictionResult)};var w=new l,S=new l,C=new l;p.prototype[a.types.PLANE|a.types.TRIMESH]=p.prototype.planeTrimesh=function(be,Me,Ce,Re,mt,Ze,Ve,$e){var _e=new l,ke=w;ke.set(0,0,1),mt.vmult(ke,ke);for(var D=0;D<Me.vertices.length/3;D++){Me.getVertex(D,_e);var W=new l;W.copy(_e),c.pointToWorldFrame(Re,Ze,W,_e);var Y=S;_e.vsub(Ce,Y);var fe=ke.dot(Y);if(fe<=0){var P=this.createContactEquation(Ve,$e,be,Me);P.ni.copy(ke);var Q=C;ke.scale(Y.dot(ke),Q),_e.vsub(Q,Q),P.ri.copy(Q),P.ri.vsub(Ve.position,P.ri),P.rj.copy(_e),P.rj.vsub($e.position,P.rj),this.result.push(P),this.createFrictionEquationsFromContact(P,this.frictionResult)}}};var L=new l,M=new l;new l;var E=new l,N=new l,k=new l,F=new l,V=new l,ee=new l,R=new l,T=new l,H=new l,O=new l,B=new l,q=new s,G=[];p.prototype[a.types.SPHERE|a.types.TRIMESH]=p.prototype.sphereTrimesh=function(be,Me,Ce,Re,mt,Ze,Ve,$e){var _e=k,ke=F,D=V,W=ee,Y=R,fe=T,P=q,Q=N,le=M,Z=G;c.pointToLocalFrame(Re,Ze,Ce,Y);var ae=be.radius;P.lowerBound.set(Y.x-ae,Y.y-ae,Y.z-ae),P.upperBound.set(Y.x+ae,Y.y+ae,Y.z+ae),Me.getTrianglesInAABB(P,Z);for(var Se=E,Be=be.radius*be.radius,Le=0;Le<Z.length;Le++)for(var Ae=0;Ae<3;Ae++)if(Me.getVertex(Me.indices[Z[Le]*3+Ae],Se),Se.vsub(Y,le),le.norm2()<=Be){Q.copy(Se),c.pointToWorldFrame(Re,Ze,Q,Se),Se.vsub(Ce,le);var Ie=this.createContactEquation(Ve,$e,be,Me);Ie.ni.copy(le),Ie.ni.normalize(),Ie.ri.copy(Ie.ni),Ie.ri.scale(be.radius,Ie.ri),Ie.ri.vadd(Ce,Ie.ri),Ie.ri.vsub(Ve.position,Ie.ri),Ie.rj.copy(Se),Ie.rj.vsub($e.position,Ie.rj),this.result.push(Ie),this.createFrictionEquationsFromContact(Ie,this.frictionResult)}for(var Le=0;Le<Z.length;Le++)for(var Ae=0;Ae<3;Ae++){Me.getVertex(Me.indices[Z[Le]*3+Ae],_e),Me.getVertex(Me.indices[Z[Le]*3+(Ae+1)%3],ke),ke.vsub(_e,D),Y.vsub(ke,fe);var Xe=fe.dot(D);Y.vsub(_e,fe);var tt=fe.dot(D);if(tt>0&&Xe<0){Y.vsub(_e,fe),W.copy(D),W.normalize(),tt=fe.dot(W),W.scale(tt,fe),fe.vadd(_e,fe);var ut=fe.distanceTo(Y);if(ut<be.radius){var Ie=this.createContactEquation(Ve,$e,be,Me);fe.vsub(Y,Ie.ni),Ie.ni.normalize(),Ie.ni.scale(be.radius,Ie.ri),c.pointToWorldFrame(Re,Ze,fe,fe),fe.vsub($e.position,Ie.rj),c.vectorToWorldFrame(Ze,Ie.ni,Ie.ni),c.vectorToWorldFrame(Ze,Ie.ri,Ie.ri),this.result.push(Ie),this.createFrictionEquationsFromContact(Ie,this.frictionResult)}}}for(var Dt=H,bt=O,yt=B,It=L,Le=0,st=Z.length;Le!==st;Le++){Me.getTriangleVertices(Z[Le],Dt,bt,yt),Me.getNormal(Z[Le],It),Y.vsub(Dt,fe);var ut=fe.dot(It);if(It.scale(ut,fe),Y.vsub(fe,fe),ut=fe.distanceTo(Y),o.pointInTriangle(fe,Dt,bt,yt)&&ut<be.radius){var Ie=this.createContactEquation(Ve,$e,be,Me);fe.vsub(Y,Ie.ni),Ie.ni.normalize(),Ie.ni.scale(be.radius,Ie.ri),c.pointToWorldFrame(Re,Ze,fe,fe),fe.vsub($e.position,Ie.rj),c.vectorToWorldFrame(Ze,Ie.ni,Ie.ni),c.vectorToWorldFrame(Ze,Ie.ri,Ie.ri),this.result.push(Ie),this.createFrictionEquationsFromContact(Ie,this.frictionResult)}}Z.length=0};var A=new l,U=new l;p.prototype[a.types.SPHERE|a.types.PLANE]=p.prototype.spherePlane=function(be,Me,Ce,Re,mt,Ze,Ve,$e){var _e=this.createContactEquation(Ve,$e,be,Me);if(_e.ni.set(0,0,1),Ze.vmult(_e.ni,_e.ni),_e.ni.negate(_e.ni),_e.ni.normalize(),_e.ni.mult(be.radius,_e.ri),Ce.vsub(Re,A),_e.ni.mult(_e.ni.dot(A),U),A.vsub(U,_e.rj),-A.dot(_e.ni)<=be.radius){var ke=_e.ri,D=_e.rj;ke.vadd(Ce,ke),ke.vsub(Ve.position,ke),D.vadd(Re,D),D.vsub($e.position,D),this.result.push(_e),this.createFrictionEquationsFromContact(_e,this.frictionResult)}};var J=new l,$=new l,ie=new l;function re(be,Me,Ce){for(var Re=null,mt=be.length,Ze=0;Ze!==mt;Ze++){var Ve=be[Ze],$e=J;be[(Ze+1)%mt].vsub(Ve,$e);var _e=$;$e.cross(Me,_e);var ke=ie;Ce.vsub(Ve,ke);var D=_e.dot(ke);if(Re===null||D>0&&Re===!0||D<=0&&Re===!1){Re===null&&(Re=D>0);continue}else return!1}return!0}var de=new l,me=new l,X=new l,pe=new l,he=[new l,new l,new l,new l,new l,new l],ce=new l,oe=new l,ze=new l,Te=new l;p.prototype[a.types.SPHERE|a.types.BOX]=p.prototype.sphereBox=function(be,Me,Ce,Re,mt,Ze,Ve,$e){var _e=this.v3pool,ke=he;Ce.vsub(Re,de),Me.getSideNormals(ke,Ze);for(var D=be.radius,W=!1,Y=oe,fe=ze,P=Te,Q=null,le=0,Z=0,ae=0,Se=null,Be=0,Le=ke.length;Be!==Le&&W===!1;Be++){var Ae=me;Ae.copy(ke[Be]);var Ie=Ae.norm();Ae.normalize();var Xe=de.dot(Ae);if(Xe<Ie+D&&Xe>0){var tt=X,ut=pe;tt.copy(ke[(Be+1)%3]),ut.copy(ke[(Be+2)%3]);var Dt=tt.norm(),bt=ut.norm();tt.normalize(),ut.normalize();var yt=de.dot(tt),It=de.dot(ut);if(yt<Dt&&yt>-Dt&&It<bt&&It>-bt){var Zt=Math.abs(Xe-Ie-D);(Se===null||Zt<Se)&&(Se=Zt,Z=yt,ae=It,Q=Ie,Y.copy(Ae),fe.copy(tt),P.copy(ut),le++)}}}if(le){W=!0;var ct=this.createContactEquation(Ve,$e,be,Me);Y.mult(-D,ct.ri),ct.ni.copy(Y),ct.ni.negate(ct.ni),Y.mult(Q,Y),fe.mult(Z,fe),Y.vadd(fe,Y),P.mult(ae,P),Y.vadd(P,ct.rj),ct.ri.vadd(Ce,ct.ri),ct.ri.vsub(Ve.position,ct.ri),ct.rj.vadd(Re,ct.rj),ct.rj.vsub($e.position,ct.rj),this.result.push(ct),this.createFrictionEquationsFromContact(ct,this.frictionResult)}for(var st=_e.get(),yn=ce,Tt=0;Tt!==2&&!W;Tt++)for(var kt=0;kt!==2&&!W;kt++)for(var nn=0;nn!==2&&!W;nn++)if(st.set(0,0,0),Tt?st.vadd(ke[0],st):st.vsub(ke[0],st),kt?st.vadd(ke[1],st):st.vsub(ke[1],st),nn?st.vadd(ke[2],st):st.vsub(ke[2],st),Re.vadd(st,yn),yn.vsub(Ce,yn),yn.norm2()<D*D){W=!0;var ct=this.createContactEquation(Ve,$e,be,Me);ct.ri.copy(yn),ct.ri.normalize(),ct.ni.copy(ct.ri),ct.ri.mult(D,ct.ri),ct.rj.copy(st),ct.ri.vadd(Ce,ct.ri),ct.ri.vsub(Ve.position,ct.ri),ct.rj.vadd(Re,ct.rj),ct.rj.vsub($e.position,ct.rj),this.result.push(ct),this.createFrictionEquationsFromContact(ct,this.frictionResult)}_e.release(st),st=null;for(var un=_e.get(),zn=_e.get(),ct=_e.get(),Kt=_e.get(),Zt=_e.get(),rn=ke.length,Tt=0;Tt!==rn&&!W;Tt++)for(var kt=0;kt!==rn&&!W;kt++)if(Tt%3!==kt%3){ke[kt].cross(ke[Tt],un),un.normalize(),ke[Tt].vadd(ke[kt],zn),ct.copy(Ce),ct.vsub(zn,ct),ct.vsub(Re,ct);var oi=ct.dot(un);un.mult(oi,Kt);for(var nn=0;nn===Tt%3||nn===kt%3;)nn++;Zt.copy(Ce),Zt.vsub(Kt,Zt),Zt.vsub(zn,Zt),Zt.vsub(Re,Zt);var Oh=Math.abs(oi),vl=Zt.norm();if(Oh<ke[nn].norm()&&vl<D){W=!0;var Wt=this.createContactEquation(Ve,$e,be,Me);zn.vadd(Kt,Wt.rj),Wt.rj.copy(Wt.rj),Zt.negate(Wt.ni),Wt.ni.normalize(),Wt.ri.copy(Wt.rj),Wt.ri.vadd(Re,Wt.ri),Wt.ri.vsub(Ce,Wt.ri),Wt.ri.normalize(),Wt.ri.mult(D,Wt.ri),Wt.ri.vadd(Ce,Wt.ri),Wt.ri.vsub(Ve.position,Wt.ri),Wt.rj.vadd(Re,Wt.rj),Wt.rj.vsub($e.position,Wt.rj),this.result.push(Wt),this.createFrictionEquationsFromContact(Wt,this.frictionResult)}}_e.release(un,zn,ct,Kt,Zt)};var z=new l,I=new l,ue=new l,we=new l,ve=new l,ge=new l,ne=new l,ye=new l,xe=new l,Fe=new l;p.prototype[a.types.SPHERE|a.types.CONVEXPOLYHEDRON]=p.prototype.sphereConvex=function(be,Me,Ce,Re,mt,Ze,Ve,$e){var _e=this.v3pool;Ce.vsub(Re,z);for(var ke=Me.faceNormals,D=Me.faces,W=Me.vertices,Y=be.radius,fe=0;fe!==W.length;fe++){var P=W[fe],Q=ve;Ze.vmult(P,Q),Re.vadd(Q,Q);var le=we;if(Q.vsub(Ce,le),le.norm2()<Y*Y){ae=!0;var Z=this.createContactEquation(Ve,$e,be,Me);Z.ri.copy(le),Z.ri.normalize(),Z.ni.copy(Z.ri),Z.ri.mult(Y,Z.ri),Q.vsub(Re,Z.rj),Z.ri.vadd(Ce,Z.ri),Z.ri.vsub(Ve.position,Z.ri),Z.rj.vadd(Re,Z.rj),Z.rj.vsub($e.position,Z.rj),this.result.push(Z),this.createFrictionEquationsFromContact(Z,this.frictionResult);return}}for(var ae=!1,fe=0,Se=D.length;fe!==Se&&ae===!1;fe++){var Be=ke[fe],Le=D[fe],Ae=ge;Ze.vmult(Be,Ae);var Ie=ne;Ze.vmult(W[Le[0]],Ie),Ie.vadd(Re,Ie);var Xe=ye;Ae.mult(-Y,Xe),Ce.vadd(Xe,Xe);var tt=xe;Xe.vsub(Ie,tt);var ut=tt.dot(Ae),Dt=Fe;if(Ce.vsub(Ie,Dt),ut<0&&Dt.dot(Ae)>0){for(var bt=[],yt=0,It=Le.length;yt!==It;yt++){var st=_e.get();Ze.vmult(W[Le[yt]],st),Re.vadd(st,st),bt.push(st)}if(re(bt,Ae,Ce)){ae=!0;var Z=this.createContactEquation(Ve,$e,be,Me);Ae.mult(-Y,Z.ri),Ae.negate(Z.ni);var yn=_e.get();Ae.mult(-ut,yn);var Tt=_e.get();Ae.mult(-Y,Tt),Ce.vsub(Re,Z.rj),Z.rj.vadd(Tt,Z.rj),Z.rj.vadd(yn,Z.rj),Z.rj.vadd(Re,Z.rj),Z.rj.vsub($e.position,Z.rj),Z.ri.vadd(Ce,Z.ri),Z.ri.vsub(Ve.position,Z.ri),_e.release(yn),_e.release(Tt),this.result.push(Z),this.createFrictionEquationsFromContact(Z,this.frictionResult);for(var yt=0,kt=bt.length;yt!==kt;yt++)_e.release(bt[yt]);return}else for(var yt=0;yt!==Le.length;yt++){var nn=_e.get(),un=_e.get();Ze.vmult(W[Le[(yt+1)%Le.length]],nn),Ze.vmult(W[Le[(yt+2)%Le.length]],un),Re.vadd(nn,nn),Re.vadd(un,un);var zn=I;un.vsub(nn,zn);var ct=ue;zn.unit(ct);var Kt=_e.get(),Zt=_e.get();Ce.vsub(nn,Zt);var rn=Zt.dot(ct);ct.mult(rn,Kt),Kt.vadd(nn,Kt);var oi=_e.get();if(Kt.vsub(Ce,oi),rn>0&&rn*rn<zn.norm2()&&oi.norm2()<Y*Y){var Z=this.createContactEquation(Ve,$e,be,Me);Kt.vsub(Re,Z.rj),Kt.vsub(Ce,Z.ni),Z.ni.normalize(),Z.ni.mult(Y,Z.ri),Z.rj.vadd(Re,Z.rj),Z.rj.vsub($e.position,Z.rj),Z.ri.vadd(Ce,Z.ri),Z.ri.vsub(Ve.position,Z.ri),this.result.push(Z),this.createFrictionEquationsFromContact(Z,this.frictionResult);for(var yt=0,kt=bt.length;yt!==kt;yt++)_e.release(bt[yt]);_e.release(nn),_e.release(un),_e.release(Kt),_e.release(oi),_e.release(Zt);return}_e.release(nn),_e.release(un),_e.release(Kt),_e.release(oi),_e.release(Zt)}for(var yt=0,kt=bt.length;yt!==kt;yt++)_e.release(bt[yt])}}},new l,new l,p.prototype[a.types.PLANE|a.types.BOX]=p.prototype.planeBox=function(be,Me,Ce,Re,mt,Ze,Ve,$e){Me.convexPolyhedronRepresentation.material=Me.material,Me.convexPolyhedronRepresentation.collisionResponse=Me.collisionResponse,this.planeConvex(be,Me.convexPolyhedronRepresentation,Ce,Re,mt,Ze,Ve,$e)};var Pe=new l,Ee=new l,it=new l,je=new l;p.prototype[a.types.PLANE|a.types.CONVEXPOLYHEDRON]=p.prototype.planeConvex=function(be,Me,Ce,Re,mt,Ze,Ve,$e){var _e=Pe,ke=Ee;ke.set(0,0,1),mt.vmult(ke,ke);for(var D=0,W=it,Y=0;Y!==Me.vertices.length;Y++){_e.copy(Me.vertices[Y]),Ze.vmult(_e,_e),Re.vadd(_e,_e),_e.vsub(Ce,W);var fe=ke.dot(W);if(fe<=0){var P=this.createContactEquation(Ve,$e,be,Me),Q=je;ke.mult(ke.dot(W),Q),_e.vsub(Q,Q),Q.vsub(Ce,P.ri),P.ni.copy(ke),_e.vsub(Re,P.rj),P.ri.vadd(Ce,P.ri),P.ri.vsub(Ve.position,P.ri),P.rj.vadd(Re,P.rj),P.rj.vsub($e.position,P.rj),this.result.push(P),D++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(P,this.frictionResult)}}this.enableFrictionReduction&&D&&this.createFrictionFromAverage(D)};var Je=new l,Ge=new l;p.prototype[a.types.CONVEXPOLYHEDRON]=p.prototype.convexConvex=function(be,Me,Ce,Re,mt,Ze,Ve,$e,_e,ke,D,W){var Y=Je;if(!(Ce.distanceTo(Re)>be.boundingSphereRadius+Me.boundingSphereRadius)&&be.findSeparatingAxis(Me,Ce,mt,Re,Ze,Y,D,W)){var fe=[],P=Ge;be.clipAgainstHull(Ce,mt,Me,Re,Ze,Y,-100,100,fe);for(var Q=0,le=0;le!==fe.length;le++){var Z=this.createContactEquation(Ve,$e,be,Me,_e,ke),ae=Z.ri,Se=Z.rj;Y.negate(Z.ni),fe[le].normal.negate(P),P.mult(fe[le].depth,P),fe[le].point.vadd(P,ae),Se.copy(fe[le].point),ae.vsub(Ce,ae),Se.vsub(Re,Se),ae.vadd(Ce,ae),ae.vsub(Ve.position,ae),Se.vadd(Re,Se),Se.vsub($e.position,Se),this.result.push(Z),Q++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(Z,this.frictionResult)}this.enableFrictionReduction&&Q&&this.createFrictionFromAverage(Q)}};var We=new l,at=new l,se=new l;p.prototype[a.types.PLANE|a.types.PARTICLE]=p.prototype.planeParticle=function(be,Me,Ce,Re,mt,Ze,Ve,$e){var _e=We;_e.set(0,0,1),Ve.quaternion.vmult(_e,_e);var ke=at;Re.vsub(Ve.position,ke);var D=_e.dot(ke);if(D<=0){var W=this.createContactEquation($e,Ve,Me,be);W.ni.copy(_e),W.ni.negate(W.ni),W.ri.set(0,0,0);var Y=se;_e.mult(_e.dot(Re),Y),Re.vsub(Y,Y),W.rj.copy(Y),this.result.push(W),this.createFrictionEquationsFromContact(W,this.frictionResult)}};var Oe=new l;p.prototype[a.types.PARTICLE|a.types.SPHERE]=p.prototype.sphereParticle=function(be,Me,Ce,Re,mt,Ze,Ve,$e){var _e=Oe;_e.set(0,0,1),Re.vsub(Ce,_e);var ke=_e.norm2();if(ke<=be.radius*be.radius){var D=this.createContactEquation($e,Ve,Me,be);_e.normalize(),D.rj.copy(_e),D.rj.mult(be.radius,D.rj),D.ni.copy(_e),D.ni.negate(D.ni),D.ri.set(0,0,0),this.result.push(D),this.createFrictionEquationsFromContact(D,this.frictionResult)}};var He=new h,et=new l;new l;var te=new l,Ne=new l,Ue=new l;p.prototype[a.types.PARTICLE|a.types.CONVEXPOLYHEDRON]=p.prototype.convexParticle=function(be,Me,Ce,Re,mt,Ze,Ve,$e){var _e=-1,ke=te,D=Ue,W=null,Y=et;if(Y.copy(Re),Y.vsub(Ce,Y),mt.conjugate(He),He.vmult(Y,Y),be.pointIsInside(Y)){be.worldVerticesNeedsUpdate&&be.computeWorldVertices(Ce,mt),be.worldFaceNormalsNeedsUpdate&&be.computeWorldFaceNormals(mt);for(var fe=0,P=be.faces.length;fe!==P;fe++){var Q=[be.worldVertices[be.faces[fe][0]]],le=be.worldFaceNormals[fe];Re.vsub(Q[0],Ne);var Z=-le.dot(Ne);(W===null||Math.abs(Z)<Math.abs(W))&&(W=Z,_e=fe,ke.copy(le))}if(_e!==-1){var ae=this.createContactEquation($e,Ve,Me,be);ke.mult(W,D),D.vadd(Re,D),D.vsub(Ce,D),ae.rj.copy(D),ke.negate(ae.ni),ae.ri.set(0,0,0);var Se=ae.ri,Be=ae.rj;Se.vadd(Re,Se),Se.vsub($e.position,Se),Be.vadd(Ce,Be),Be.vsub(Ve.position,Be),this.result.push(ae),this.createFrictionEquationsFromContact(ae,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}},p.prototype[a.types.BOX|a.types.HEIGHTFIELD]=p.prototype.boxHeightfield=function(be,Me,Ce,Re,mt,Ze,Ve,$e){be.convexPolyhedronRepresentation.material=be.material,be.convexPolyhedronRepresentation.collisionResponse=be.collisionResponse,this.convexHeightfield(be.convexPolyhedronRepresentation,Me,Ce,Re,mt,Ze,Ve,$e)};var Ke=new l,lt=new l,Et=[0];p.prototype[a.types.CONVEXPOLYHEDRON|a.types.HEIGHTFIELD]=p.prototype.convexHeightfield=function(be,Me,Ce,Re,mt,Ze,Ve,$e){var _e=Me.data,ke=Me.elementSize,D=be.boundingSphereRadius,W=lt,Y=Et,fe=Ke;c.pointToLocalFrame(Re,Ze,Ce,fe);var P=Math.floor((fe.x-D)/ke)-1,Q=Math.ceil((fe.x+D)/ke)+1,le=Math.floor((fe.y-D)/ke)-1,Z=Math.ceil((fe.y+D)/ke)+1;if(!(Q<0||Z<0||P>_e.length||le>_e[0].length)){P<0&&(P=0),Q<0&&(Q=0),le<0&&(le=0),Z<0&&(Z=0),P>=_e.length&&(P=_e.length-1),Q>=_e.length&&(Q=_e.length-1),Z>=_e[0].length&&(Z=_e[0].length-1),le>=_e[0].length&&(le=_e[0].length-1);var ae=[];Me.getRectMinMax(P,le,Q,Z,ae);var Se=ae[0],Be=ae[1];if(!(fe.z-D>Be||fe.z+D<Se))for(var Le=P;Le<Q;Le++)for(var Ae=le;Ae<Z;Ae++)Me.getConvexTrianglePillar(Le,Ae,!1),c.pointToWorldFrame(Re,Ze,Me.pillarOffset,W),Ce.distanceTo(W)<Me.pillarConvex.boundingSphereRadius+be.boundingSphereRadius&&this.convexConvex(be,Me.pillarConvex,Ce,W,mt,Ze,Ve,$e,null,null,Y,null),Me.getConvexTrianglePillar(Le,Ae,!0),c.pointToWorldFrame(Re,Ze,Me.pillarOffset,W),Ce.distanceTo(W)<Me.pillarConvex.boundingSphereRadius+be.boundingSphereRadius&&this.convexConvex(be,Me.pillarConvex,Ce,W,mt,Ze,Ve,$e,null,null,Y,null)}};var _t=new l,gt=new l;p.prototype[a.types.SPHERE|a.types.HEIGHTFIELD]=p.prototype.sphereHeightfield=function(be,Me,Ce,Re,mt,Ze,Ve,$e){var _e=Me.data,ke=be.radius,D=Me.elementSize,W=gt,Y=_t;c.pointToLocalFrame(Re,Ze,Ce,Y);var fe=Math.floor((Y.x-ke)/D)-1,P=Math.ceil((Y.x+ke)/D)+1,Q=Math.floor((Y.y-ke)/D)-1,le=Math.ceil((Y.y+ke)/D)+1;if(!(P<0||le<0||fe>_e.length||le>_e[0].length)){fe<0&&(fe=0),P<0&&(P=0),Q<0&&(Q=0),le<0&&(le=0),fe>=_e.length&&(fe=_e.length-1),P>=_e.length&&(P=_e.length-1),le>=_e[0].length&&(le=_e[0].length-1),Q>=_e[0].length&&(Q=_e[0].length-1);var Z=[];Me.getRectMinMax(fe,Q,P,le,Z);var ae=Z[0],Se=Z[1];if(!(Y.z-ke>Se||Y.z+ke<ae))for(var Be=this.result,Le=fe;Le<P;Le++)for(var Ae=Q;Ae<le;Ae++){var Ie=Be.length;Me.getConvexTrianglePillar(Le,Ae,!1),c.pointToWorldFrame(Re,Ze,Me.pillarOffset,W),Ce.distanceTo(W)<Me.pillarConvex.boundingSphereRadius+be.boundingSphereRadius&&this.sphereConvex(be,Me.pillarConvex,Ce,W,mt,Ze,Ve,$e),Me.getConvexTrianglePillar(Le,Ae,!0),c.pointToWorldFrame(Re,Ze,Me.pillarOffset,W),Ce.distanceTo(W)<Me.pillarConvex.boundingSphereRadius+be.boundingSphereRadius&&this.sphereConvex(be,Me.pillarConvex,Ce,W,mt,Ze,Ve,$e);var Xe=Be.length-Ie;if(Xe>2)return}}}},{"../collision/AABB":3,"../collision/Ray":9,"../equations/ContactEquation":19,"../equations/FrictionEquation":21,"../math/Quaternion":28,"../math/Transform":29,"../math/Vec3":30,"../shapes/ConvexPolyhedron":38,"../shapes/Shape":43,"../solver/Solver":47,"../utils/Vec3Pool":54}],56:[function(n,i,r){i.exports=_;var s=n("../shapes/Shape"),a=n("../math/Vec3"),o=n("../math/Quaternion"),l=n("../solver/GSSolver");n("../utils/Vec3Pool"),n("../equations/ContactEquation"),n("../equations/FrictionEquation");var c=n("./Narrowphase"),h=n("../utils/EventTarget"),u=n("../collision/ArrayCollisionMatrix"),f=n("../material/Material"),d=n("../material/ContactMaterial"),p=n("../objects/Body"),g=n("../utils/TupleDictionary"),v=n("../collision/RaycastResult"),m=n("../collision/AABB"),y=n("../collision/Ray"),x=n("../collision/NaiveBroadphase");function _(){h.apply(this),this.dt=-1,this.allowSleep=!1,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=0,this.quatNormalizeFast=!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new a,this.broadphase=new x,this.bodies=[],this.solver=new l,this.constraints=[],this.narrowphase=new c(this),this.collisionMatrix=new u,this.collisionMatrixPrevious=new u,this.materials=[],this.contactmaterials=[],this.contactMaterialTable=new g,this.defaultMaterial=new f("default"),this.defaultContactMaterial=new d(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null}}_.prototype=new h,new m;var b=new y;if(_.prototype.getContactMaterial=function(T,H){return this.contactMaterialTable.get(T.id,H.id)},_.prototype.numObjects=function(){return this.bodies.length},_.prototype.collisionMatrixTick=function(){var T=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=T,this.collisionMatrix.reset()},_.prototype.add=_.prototype.addBody=function(T){this.bodies.indexOf(T)===-1&&(T.index=this.bodies.length,this.bodies.push(T),T.world=this,T.initPosition.copy(T.position),T.initVelocity.copy(T.velocity),T.timeLastSleepy=this.time,T instanceof p&&(T.initAngularVelocity.copy(T.angularVelocity),T.initQuaternion.copy(T.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=T,this.dispatchEvent(this.addBodyEvent))},_.prototype.addConstraint=function(T){this.constraints.push(T)},_.prototype.removeConstraint=function(T){var H=this.constraints.indexOf(T);H!==-1&&this.constraints.splice(H,1)},_.prototype.rayTest=function(T,H,O){O instanceof v?this.raycastClosest(T,H,{skipBackfaces:!0},O):this.raycastAll(T,H,{skipBackfaces:!0},O)},_.prototype.raycastAll=function(T,H,O,B){return O.mode=y.ALL,O.from=T,O.to=H,O.callback=B,b.intersectWorld(this,O)},_.prototype.raycastAny=function(T,H,O,B){return O.mode=y.ANY,O.from=T,O.to=H,O.result=B,b.intersectWorld(this,O)},_.prototype.raycastClosest=function(T,H,O,B){return O.mode=y.CLOSEST,O.from=T,O.to=H,O.result=B,b.intersectWorld(this,O)},_.prototype.remove=function(T){T.world=null;var H=this.bodies.length-1,O=this.bodies,B=O.indexOf(T);if(B!==-1){O.splice(B,1);for(var q=0;q!==O.length;q++)O[q].index=q;this.collisionMatrix.setNumObjects(H),this.removeBodyEvent.body=T,this.dispatchEvent(this.removeBodyEvent)}},_.prototype.removeBody=_.prototype.remove,_.prototype.addMaterial=function(T){this.materials.push(T)},_.prototype.addContactMaterial=function(T){this.contactmaterials.push(T),this.contactMaterialTable.set(T.materials[0].id,T.materials[1].id,T)},typeof performance>"u"&&(performance={}),!performance.now){var w=Date.now();performance.timing&&performance.timing.navigationStart&&(w=performance.timing.navigationStart),performance.now=function(){return Date.now()-w}}var S=new a;_.prototype.step=function(T,H,O){if(O=O||10,H=H||0,H===0)this.internalStep(T),this.time+=T;else{var B=Math.floor((this.time+H)/T)-Math.floor(this.time/T);B=Math.min(B,O);for(var q=performance.now(),G=0;G!==B&&(this.internalStep(T),!(performance.now()-q>T*1e3));G++);this.time+=H;for(var A=this.time%T,U=A/T,J=S,$=this.bodies,ie=0;ie!==$.length;ie++){var re=$[ie];re.type!==p.STATIC&&re.sleepState!==p.SLEEPING?(re.position.vsub(re.previousPosition,J),J.scale(U,J),re.position.vadd(J,re.interpolatedPosition)):(re.interpolatedPosition.copy(re.position),re.interpolatedQuaternion.copy(re.quaternion))}}};var C={type:"postStep"},L={type:"preStep"},M={type:"collide",body:null,contact:null},E=[],N=[],k=[],F=[];new a,new a,new a,new a,new a,new a,new a,new a,new a,new o;var V=new o,ee=new o,R=new a;_.prototype.internalStep=function(T){this.dt=T;var H=this.contacts,O=k,B=F,q=this.numObjects(),G=this.bodies,A=this.solver,U=this.gravity,J=this.doProfiling,$=this.profile,ie=p.DYNAMIC,re,de=this.constraints,me=N;U.norm();var X=U.x,pe=U.y,he=U.z,ce=0;for(J&&(re=performance.now()),ce=0;ce!==q;ce++){var oe=G[ce];if(oe.type&ie){var ze=oe.force,Te=oe.mass;ze.x+=Te*X,ze.y+=Te*pe,ze.z+=Te*he}}for(var ce=0,z=this.subsystems.length;ce!==z;ce++)this.subsystems[ce].update();J&&(re=performance.now()),O.length=0,B.length=0,this.broadphase.collisionPairs(this,O,B),J&&($.broadphase=performance.now()-re);var Je=de.length;for(ce=0;ce!==Je;ce++){var I=de[ce];if(!I.collideConnected)for(var ue=O.length-1;ue>=0;ue-=1)(I.bodyA===O[ue]&&I.bodyB===B[ue]||I.bodyB===O[ue]&&I.bodyA===B[ue])&&(O.splice(ue,1),B.splice(ue,1))}this.collisionMatrixTick(),J&&(re=performance.now());var we=E,ve=H.length;for(ce=0;ce!==ve;ce++)we.push(H[ce]);H.length=0;var ge=this.frictionEquations.length;for(ce=0;ce!==ge;ce++)me.push(this.frictionEquations[ce]);this.frictionEquations.length=0,this.narrowphase.getContacts(O,B,this,H,we,this.frictionEquations,me),J&&($.narrowphase=performance.now()-re),J&&(re=performance.now());for(var ce=0;ce<this.frictionEquations.length;ce++)A.addEquation(this.frictionEquations[ce]);for(var ne=H.length,ye=0;ye!==ne;ye++){var I=H[ye],oe=I.bi,xe=I.bj;I.si,I.sj;var Fe;if(oe.material&&xe.material?Fe=this.getContactMaterial(oe.material,xe.material)||this.defaultContactMaterial:Fe=this.defaultContactMaterial,Fe.friction,oe.material&&xe.material&&(oe.material.friction>=0&&xe.material.friction>=0&&oe.material.friction*xe.material.friction,oe.material.restitution>=0&&xe.material.restitution>=0&&(I.restitution=oe.material.restitution*xe.material.restitution)),A.addEquation(I),oe.allowSleep&&oe.type===p.DYNAMIC&&oe.sleepState===p.SLEEPING&&xe.sleepState===p.AWAKE&&xe.type!==p.STATIC){var Pe=xe.velocity.norm2()+xe.angularVelocity.norm2(),Ee=Math.pow(xe.sleepSpeedLimit,2);Pe>=Ee*2&&(oe._wakeUpAfterNarrowphase=!0)}if(xe.allowSleep&&xe.type===p.DYNAMIC&&xe.sleepState===p.SLEEPING&&oe.sleepState===p.AWAKE&&oe.type!==p.STATIC){var it=oe.velocity.norm2()+oe.angularVelocity.norm2(),je=Math.pow(oe.sleepSpeedLimit,2);it>=je*2&&(xe._wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(oe,xe,!0),this.collisionMatrixPrevious.get(oe,xe)||(M.body=xe,M.contact=I,oe.dispatchEvent(M),M.body=oe,xe.dispatchEvent(M))}for(J&&($.makeContactConstraints=performance.now()-re,re=performance.now()),ce=0;ce!==q;ce++){var oe=G[ce];oe._wakeUpAfterNarrowphase&&(oe.wakeUp(),oe._wakeUpAfterNarrowphase=!1)}var Je=de.length;for(ce=0;ce!==Je;ce++){var I=de[ce];I.update();for(var ue=0,Ge=I.equations.length;ue!==Ge;ue++){var We=I.equations[ue];A.addEquation(We)}}A.solve(T,this),J&&($.solve=performance.now()-re),A.removeAllEquations();var at=Math.pow;for(ce=0;ce!==q;ce++){var oe=G[ce];if(oe.type&ie){var se=at(1-oe.linearDamping,T),Oe=oe.velocity;Oe.mult(se,Oe);var He=oe.angularVelocity;if(He){var et=at(1-oe.angularDamping,T);He.mult(et,He)}}}for(this.dispatchEvent(L),ce=0;ce!==q;ce++){var oe=G[ce];oe.preStep&&oe.preStep.call(oe)}J&&(re=performance.now());var te=V,Ne=ee,Ue=this.stepnumber,Ke=p.DYNAMIC|p.KINEMATIC,lt=Ue%(this.quatNormalizeSkip+1)===0,Et=this.quatNormalizeFast,_t=T*.5;for(s.types.PLANE,s.types.CONVEXPOLYHEDRON,ce=0;ce!==q;ce++){var gt=G[ce],be=gt.force,Me=gt.torque;if(gt.type&Ke&&gt.sleepState!==p.SLEEPING){var Ce=gt.velocity,Re=gt.angularVelocity,mt=gt.position,Ze=gt.quaternion,Ve=gt.invMass,$e=gt.invInertiaWorld;Ce.x+=be.x*Ve*T,Ce.y+=be.y*Ve*T,Ce.z+=be.z*Ve*T,gt.angularVelocity&&($e.vmult(Me,R),R.mult(T,R),R.vadd(Re,Re)),mt.x+=Ce.x*T,mt.y+=Ce.y*T,mt.z+=Ce.z*T,gt.angularVelocity&&(te.set(Re.x,Re.y,Re.z,0),te.mult(Ze,Ne),Ze.x+=_t*Ne.x,Ze.y+=_t*Ne.y,Ze.z+=_t*Ne.z,Ze.w+=_t*Ne.w,lt&&(Et?Ze.normalizeFast():Ze.normalize())),gt.aabb&&(gt.aabbNeedsUpdate=!0),gt.updateInertiaWorld&&gt.updateInertiaWorld()}}for(this.clearForces(),this.broadphase.dirty=!0,J&&($.integrate=performance.now()-re),this.time+=T,this.stepnumber+=1,this.dispatchEvent(C),ce=0;ce!==q;ce++){var oe=G[ce],_e=oe.postStep;_e&&_e.call(oe)}if(this.allowSleep)for(ce=0;ce!==q;ce++)G[ce].sleepTick(this.time)},_.prototype.clearForces=function(){for(var T=this.bodies,H=T.length,O=0;O!==H;O++){var B=T[O];B.force,B.torque,B.force.set(0,0,0),B.torque.set(0,0,0)}}},{"../collision/AABB":3,"../collision/ArrayCollisionMatrix":4,"../collision/NaiveBroadphase":7,"../collision/Ray":9,"../collision/RaycastResult":10,"../equations/ContactEquation":19,"../equations/FrictionEquation":21,"../material/ContactMaterial":24,"../material/Material":25,"../math/Quaternion":28,"../math/Vec3":30,"../objects/Body":31,"../shapes/Shape":43,"../solver/GSSolver":46,"../utils/EventTarget":49,"../utils/TupleDictionary":52,"../utils/Vec3Pool":54,"./Narrowphase":55}]},{},[2])(2)})})(k0);var wi=k0.exports;const ui=H0(wi);Number.EPSILON===void 0&&(Number.EPSILON=Math.pow(2,-52));Number.isInteger===void 0&&(Number.isInteger=function(t){return typeof t=="number"&&isFinite(t)&&Math.floor(t)===t});Math.sign===void 0&&(Math.sign=function(t){return t<0?-1:t>0?1:+t});"name"in Function.prototype||Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}});Object.assign===void 0&&function(){Object.assign=function(t){if(t==null)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),n=1;n<arguments.length;n++){var i=arguments[n];if(i!=null)for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r])}return e}}();function Ir(){}Object.assign(Ir.prototype,{addEventListener:function(t,e){this._listeners===void 0&&(this._listeners={});var n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)},hasEventListener:function(t,e){if(this._listeners===void 0)return!1;var n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1},removeEventListener:function(t,e){if(this._listeners!==void 0){var n=this._listeners,i=n[t];if(i!==void 0){var r=i.indexOf(e);r!==-1&&i.splice(r,1)}}},dispatchEvent:function(t){if(this._listeners!==void 0){var e=this._listeners,n=e[t.type];if(n!==void 0){t.target=this;for(var i=n.slice(0),r=0,s=i.length;r<s;r++)i[r].call(this,t)}}}});var WT="90",XT=0,rv=1,qT=2,W0=1,$T=2,hp=0,Ta=1,ml=2,up=1,fp=0,X0=1,Aa=2,Pf=0,Nh=1,q0=2,$0=3,Y0=4,Z0=5,j0=100,YT=101,ZT=102,sv=103,av=104,jT=200,JT=201,KT=202,QT=203,J0=204,K0=205,eA=206,tA=207,nA=208,iA=209,rA=210,sA=0,aA=1,oA=2,Lf=3,lA=4,cA=5,hA=6,uA=7,Bh=0,fA=1,dA=2,wu=0,Q0=1,pA=2,mA=3,vA=4,dp=300,pp=301,If=302,ex=303,Df=304,tx=305,mp=306,vp=307,pr=1e3,ni=1001,ra=1002,ii=1003,gp=1004,yp=1005,$n=1006,nx=1007,Uh=1008,xp=1009,gA=1010,yA=1011,Lc=1012,xA=1013,ix=1014,wo=1015,_p=1016,_A=1017,MA=1018,bA=1019,Ic=1020,wA=1021,So=1022,Tr=1023,SA=1024,EA=1025,Ks=1026,Eo=1027,ov=33776,lv=33777,cv=33778,hv=33779,uv=35840,fv=35841,dv=35842,pv=35843,TA=36196,AA=37808,CA=37809,RA=37810,PA=37811,LA=37812,IA=37813,DA=37814,NA=37815,BA=37816,UA=37817,FA=37818,OA=37819,zA=37820,GA=37821,VA=2200,HA=2201,kA=2202,Dc=2300,bc=2301,Su=2302,sa=2400,js=2401,Nc=2402,rx=0,WA=1,XA=2,Bc=3e3,qA=3001,sx=3007,$A=3002,YA=3004,ZA=3005,jA=3006,JA=3200,KA=3201,wt={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){for(var t=[],e=0;e<256;e++)t[e]=(e<16?"0":"")+e.toString(16).toUpperCase();return function(){var i=Math.random()*4294967295|0,r=Math.random()*4294967295|0,s=Math.random()*4294967295|0,a=Math.random()*4294967295|0;return t[i&255]+t[i>>8&255]+t[i>>16&255]+t[i>>24&255]+"-"+t[r&255]+t[r>>8&255]+"-"+t[r>>16&15|64]+t[r>>24&255]+"-"+t[s&63|128]+t[s>>8&255]+"-"+t[s>>16&255]+t[s>>24&255]+t[a&255]+t[a>>8&255]+t[a>>16&255]+t[a>>24&255]}}(),clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)},lerp:function(t,e,n){return(1-n)*t+n*e},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*(3-2*t))},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*t*(t*(t*6-15)+10))},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(t){return t*wt.DEG2RAD},radToDeg:function(t){return t*wt.RAD2DEG},isPowerOfTwo:function(t){return(t&t-1)===0&&t!==0},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}};function qe(t,e){this.x=t||0,this.y=e||0}Object.defineProperties(qe.prototype,{width:{get:function(){return this.x},set:function(t){this.x=t}},height:{get:function(){return this.y},set:function(t){this.y=t}}});Object.assign(qe.prototype,{isVector2:!0,set:function(t,e){return this.x=t,this.y=e,this},setScalar:function(t){return this.x=t,this.y=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return e!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this},sub:function(t,e){return e!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},applyMatrix3:function(t){var e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this},clampScalar:function(){var t=new qe,e=new qe;return function(i,r){return t.set(i,i),e.set(r,r),this.clamp(t,e)}}(),clampLength:function(t,e){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var t=Math.atan2(this.y,this.x);return t<0&&(t+=2*Math.PI),t},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,n=this.y-t.y;return e*e+n*n},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return e===void 0&&(e=0),this.x=t[e],this.y=t[e+1],this},toArray:function(t,e){return t===void 0&&(t=[]),e===void 0&&(e=0),t[e]=this.x,t[e+1]=this.y,t},fromBufferAttribute:function(t,e,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this},rotateAround:function(t,e){var n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,s=this.y-t.y;return this.x=r*n-s*i+t.x,this.y=r*i+s*n+t.y,this}});function xt(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}Object.assign(xt.prototype,{isMatrix4:!0,set:function(t,e,n,i,r,s,a,o,l,c,h,u,f,d,p,g){var v=this.elements;return v[0]=t,v[4]=e,v[8]=n,v[12]=i,v[1]=r,v[5]=s,v[9]=a,v[13]=o,v[2]=l,v[6]=c,v[10]=h,v[14]=u,v[3]=f,v[7]=d,v[11]=p,v[15]=g,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return new xt().fromArray(this.elements)},copy:function(t){var e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this},copyPosition:function(t){var e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this},extractBasis:function(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this},makeBasis:function(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this},extractRotation:function(){var t=new j;return function(n){var i=this.elements,r=n.elements,s=1/t.setFromMatrixColumn(n,0).length(),a=1/t.setFromMatrixColumn(n,1).length(),o=1/t.setFromMatrixColumn(n,2).length();return i[0]=r[0]*s,i[1]=r[1]*s,i[2]=r[2]*s,i[4]=r[4]*a,i[5]=r[5]*a,i[6]=r[6]*a,i[8]=r[8]*o,i[9]=r[9]*o,i[10]=r[10]*o,this}}(),makeRotationFromEuler:function(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e=this.elements,n=t.x,i=t.y,r=t.z,s=Math.cos(n),a=Math.sin(n),o=Math.cos(i),l=Math.sin(i),c=Math.cos(r),h=Math.sin(r);if(t.order==="XYZ"){var u=s*c,f=s*h,d=a*c,p=a*h;e[0]=o*c,e[4]=-o*h,e[8]=l,e[1]=f+d*l,e[5]=u-p*l,e[9]=-a*o,e[2]=p-u*l,e[6]=d+f*l,e[10]=s*o}else if(t.order==="YXZ"){var g=o*c,v=o*h,m=l*c,y=l*h;e[0]=g+y*a,e[4]=m*a-v,e[8]=s*l,e[1]=s*h,e[5]=s*c,e[9]=-a,e[2]=v*a-m,e[6]=y+g*a,e[10]=s*o}else if(t.order==="ZXY"){var g=o*c,v=o*h,m=l*c,y=l*h;e[0]=g-y*a,e[4]=-s*h,e[8]=m+v*a,e[1]=v+m*a,e[5]=s*c,e[9]=y-g*a,e[2]=-s*l,e[6]=a,e[10]=s*o}else if(t.order==="ZYX"){var u=s*c,f=s*h,d=a*c,p=a*h;e[0]=o*c,e[4]=d*l-f,e[8]=u*l+p,e[1]=o*h,e[5]=p*l+u,e[9]=f*l-d,e[2]=-l,e[6]=a*o,e[10]=s*o}else if(t.order==="YZX"){var x=s*o,_=s*l,b=a*o,w=a*l;e[0]=o*c,e[4]=w-x*h,e[8]=b*h+_,e[1]=h,e[5]=s*c,e[9]=-a*c,e[2]=-l*c,e[6]=_*h+b,e[10]=x-w*h}else if(t.order==="XZY"){var x=s*o,_=s*l,b=a*o,w=a*l;e[0]=o*c,e[4]=-h,e[8]=l*c,e[1]=x*h+w,e[5]=s*c,e[9]=_*h-b,e[2]=b*h-_,e[6]=a*c,e[10]=w*h+x}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromQuaternion:function(t){var e=this.elements,n=t._x,i=t._y,r=t._z,s=t._w,a=n+n,o=i+i,l=r+r,c=n*a,h=n*o,u=n*l,f=i*o,d=i*l,p=r*l,g=s*a,v=s*o,m=s*l;return e[0]=1-(f+p),e[4]=h-m,e[8]=u+v,e[1]=h+m,e[5]=1-(c+p),e[9]=d-g,e[2]=u-v,e[6]=d+g,e[10]=1-(c+f),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},lookAt:function(){var t=new j,e=new j,n=new j;return function(r,s,a){var o=this.elements;return n.subVectors(r,s),n.lengthSq()===0&&(n.z=1),n.normalize(),t.crossVectors(a,n),t.lengthSq()===0&&(Math.abs(a.z)===1?n.x+=1e-4:n.z+=1e-4,n.normalize(),t.crossVectors(a,n)),t.normalize(),e.crossVectors(n,t),o[0]=t.x,o[4]=e.x,o[8]=n.x,o[1]=t.y,o[5]=e.y,o[9]=n.y,o[2]=t.z,o[6]=e.z,o[10]=n.z,this}}(),multiply:function(t,e){return e!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var n=t.elements,i=e.elements,r=this.elements,s=n[0],a=n[4],o=n[8],l=n[12],c=n[1],h=n[5],u=n[9],f=n[13],d=n[2],p=n[6],g=n[10],v=n[14],m=n[3],y=n[7],x=n[11],_=n[15],b=i[0],w=i[4],S=i[8],C=i[12],L=i[1],M=i[5],E=i[9],N=i[13],k=i[2],F=i[6],V=i[10],ee=i[14],R=i[3],T=i[7],H=i[11],O=i[15];return r[0]=s*b+a*L+o*k+l*R,r[4]=s*w+a*M+o*F+l*T,r[8]=s*S+a*E+o*V+l*H,r[12]=s*C+a*N+o*ee+l*O,r[1]=c*b+h*L+u*k+f*R,r[5]=c*w+h*M+u*F+f*T,r[9]=c*S+h*E+u*V+f*H,r[13]=c*C+h*N+u*ee+f*O,r[2]=d*b+p*L+g*k+v*R,r[6]=d*w+p*M+g*F+v*T,r[10]=d*S+p*E+g*V+v*H,r[14]=d*C+p*N+g*ee+v*O,r[3]=m*b+y*L+x*k+_*R,r[7]=m*w+y*M+x*F+_*T,r[11]=m*S+y*E+x*V+_*H,r[15]=m*C+y*N+x*ee+_*O,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},applyToBufferAttribute:function(){var t=new j;return function(n){for(var i=0,r=n.count;i<r;i++)t.x=n.getX(i),t.y=n.getY(i),t.z=n.getZ(i),t.applyMatrix4(this),n.setXYZ(i,t.x,t.y,t.z);return n}}(),determinant:function(){var t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],s=t[1],a=t[5],o=t[9],l=t[13],c=t[2],h=t[6],u=t[10],f=t[14],d=t[3],p=t[7],g=t[11],v=t[15];return d*(+r*o*h-i*l*h-r*a*u+n*l*u+i*a*f-n*o*f)+p*(+e*o*f-e*l*u+r*s*u-i*s*f+i*l*c-r*o*c)+g*(+e*l*h-e*a*f-r*s*h+n*s*f+r*a*c-n*l*c)+v*(-i*a*c-e*o*h+e*a*u+i*s*h-n*s*u+n*o*c)},transpose:function(){var t=this.elements,e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},setPosition:function(t){var e=this.elements;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){var n=this.elements,i=t.elements,r=i[0],s=i[1],a=i[2],o=i[3],l=i[4],c=i[5],h=i[6],u=i[7],f=i[8],d=i[9],p=i[10],g=i[11],v=i[12],m=i[13],y=i[14],x=i[15],_=d*y*u-m*p*u+m*h*g-c*y*g-d*h*x+c*p*x,b=v*p*u-f*y*u-v*h*g+l*y*g+f*h*x-l*p*x,w=f*m*u-v*d*u+v*c*g-l*m*g-f*c*x+l*d*x,S=v*d*h-f*m*h-v*c*p+l*m*p+f*c*y-l*d*y,C=r*_+s*b+a*w+o*S;if(C===0){var L="THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";if(e===!0)throw new Error(L);return console.warn(L),this.identity()}var M=1/C;return n[0]=_*M,n[1]=(m*p*o-d*y*o-m*a*g+s*y*g+d*a*x-s*p*x)*M,n[2]=(c*y*o-m*h*o+m*a*u-s*y*u-c*a*x+s*h*x)*M,n[3]=(d*h*o-c*p*o-d*a*u+s*p*u+c*a*g-s*h*g)*M,n[4]=b*M,n[5]=(f*y*o-v*p*o+v*a*g-r*y*g-f*a*x+r*p*x)*M,n[6]=(v*h*o-l*y*o-v*a*u+r*y*u+l*a*x-r*h*x)*M,n[7]=(l*p*o-f*h*o+f*a*u-r*p*u-l*a*g+r*h*g)*M,n[8]=w*M,n[9]=(v*d*o-f*m*o-v*s*g+r*m*g+f*s*x-r*d*x)*M,n[10]=(l*m*o-v*c*o+v*s*u-r*m*u-l*s*x+r*c*x)*M,n[11]=(f*c*o-l*d*o-f*s*u+r*d*u+l*s*g-r*c*g)*M,n[12]=S*M,n[13]=(f*m*a-v*d*a+v*s*p-r*m*p-f*s*y+r*d*y)*M,n[14]=(v*c*a-l*m*a-v*s*h+r*m*h+l*s*y-r*c*y)*M,n[15]=(l*d*a-f*c*a+f*s*h-r*d*h-l*s*p+r*c*p)*M,this},scale:function(t){var e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))},makeTranslation:function(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var n=Math.cos(e),i=Math.sin(e),r=1-n,s=t.x,a=t.y,o=t.z,l=r*s,c=r*a;return this.set(l*s+n,l*a-i*o,l*o+i*a,0,l*a+i*o,c*a+n,c*o-i*s,0,l*o-i*a,c*o+i*s,r*o*o+n,0,0,0,0,1),this},makeScale:function(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this},makeShear:function(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this},compose:function(t,e,n){return this.makeRotationFromQuaternion(e),this.scale(n),this.setPosition(t),this},decompose:function(){var t=new j,e=new xt;return function(i,r,s){var a=this.elements,o=t.set(a[0],a[1],a[2]).length(),l=t.set(a[4],a[5],a[6]).length(),c=t.set(a[8],a[9],a[10]).length(),h=this.determinant();h<0&&(o=-o),i.x=a[12],i.y=a[13],i.z=a[14],e.copy(this);var u=1/o,f=1/l,d=1/c;return e.elements[0]*=u,e.elements[1]*=u,e.elements[2]*=u,e.elements[4]*=f,e.elements[5]*=f,e.elements[6]*=f,e.elements[8]*=d,e.elements[9]*=d,e.elements[10]*=d,r.setFromRotationMatrix(e),s.x=o,s.y=l,s.z=c,this}}(),makePerspective:function(t,e,n,i,r,s){s===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var a=this.elements,o=2*r/(e-t),l=2*r/(n-i),c=(e+t)/(e-t),h=(n+i)/(n-i),u=-(s+r)/(s-r),f=-2*s*r/(s-r);return a[0]=o,a[4]=0,a[8]=c,a[12]=0,a[1]=0,a[5]=l,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=u,a[14]=f,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makeOrthographic:function(t,e,n,i,r,s){var a=this.elements,o=1/(e-t),l=1/(n-i),c=1/(s-r),h=(e+t)*o,u=(n+i)*l,f=(s+r)*c;return a[0]=2*o,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-u,a[2]=0,a[6]=0,a[10]=-2*c,a[14]=-f,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},equals:function(t){for(var e=this.elements,n=t.elements,i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0},fromArray:function(t,e){e===void 0&&(e=0);for(var n=0;n<16;n++)this.elements[n]=t[n+e];return this},toArray:function(t,e){t===void 0&&(t=[]),e===void 0&&(e=0);var n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}});function ln(t,e,n,i){this._x=t||0,this._y=e||0,this._z=n||0,this._w=i!==void 0?i:1}Object.assign(ln,{slerp:function(t,e,n,i){return n.copy(t).slerp(e,i)},slerpFlat:function(t,e,n,i,r,s,a){var o=n[i+0],l=n[i+1],c=n[i+2],h=n[i+3],u=r[s+0],f=r[s+1],d=r[s+2],p=r[s+3];if(h!==p||o!==u||l!==f||c!==d){var g=1-a,v=o*u+l*f+c*d+h*p,m=v>=0?1:-1,y=1-v*v;if(y>Number.EPSILON){var x=Math.sqrt(y),_=Math.atan2(x,v*m);g=Math.sin(g*_)/x,a=Math.sin(a*_)/x}var b=a*m;if(o=o*g+u*b,l=l*g+f*b,c=c*g+d*b,h=h*g+p*b,g===1-a){var w=1/Math.sqrt(o*o+l*l+c*c+h*h);o*=w,l*=w,c*=w,h*=w}}t[e]=o,t[e+1]=l,t[e+2]=c,t[e+3]=h}});Object.defineProperties(ln.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(t){this._w=t,this.onChangeCallback()}}});Object.assign(ln.prototype,{set:function(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this.onChangeCallback(),this},setFromEuler:function(t,e){if(!(t&&t.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var n=t._x,i=t._y,r=t._z,s=t.order,a=Math.cos,o=Math.sin,l=a(n/2),c=a(i/2),h=a(r/2),u=o(n/2),f=o(i/2),d=o(r/2);return s==="XYZ"?(this._x=u*c*h+l*f*d,this._y=l*f*h-u*c*d,this._z=l*c*d+u*f*h,this._w=l*c*h-u*f*d):s==="YXZ"?(this._x=u*c*h+l*f*d,this._y=l*f*h-u*c*d,this._z=l*c*d-u*f*h,this._w=l*c*h+u*f*d):s==="ZXY"?(this._x=u*c*h-l*f*d,this._y=l*f*h+u*c*d,this._z=l*c*d+u*f*h,this._w=l*c*h-u*f*d):s==="ZYX"?(this._x=u*c*h-l*f*d,this._y=l*f*h+u*c*d,this._z=l*c*d-u*f*h,this._w=l*c*h+u*f*d):s==="YZX"?(this._x=u*c*h+l*f*d,this._y=l*f*h+u*c*d,this._z=l*c*d-u*f*h,this._w=l*c*h-u*f*d):s==="XZY"&&(this._x=u*c*h-l*f*d,this._y=l*f*h-u*c*d,this._z=l*c*d+u*f*h,this._w=l*c*h+u*f*d),e!==!1&&this.onChangeCallback(),this},setFromAxisAngle:function(t,e){var n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this.onChangeCallback(),this},setFromRotationMatrix:function(t){var e=t.elements,n=e[0],i=e[4],r=e[8],s=e[1],a=e[5],o=e[9],l=e[2],c=e[6],h=e[10],u=n+a+h,f;return u>0?(f=.5/Math.sqrt(u+1),this._w=.25/f,this._x=(c-o)*f,this._y=(r-l)*f,this._z=(s-i)*f):n>a&&n>h?(f=2*Math.sqrt(1+n-a-h),this._w=(c-o)/f,this._x=.25*f,this._y=(i+s)/f,this._z=(r+l)/f):a>h?(f=2*Math.sqrt(1+a-n-h),this._w=(r-l)/f,this._x=(i+s)/f,this._y=.25*f,this._z=(o+c)/f):(f=2*Math.sqrt(1+h-n-a),this._w=(s-i)/f,this._x=(r+l)/f,this._y=(o+c)/f,this._z=.25*f),this.onChangeCallback(),this},setFromUnitVectors:function(){var t=new j,e,n=1e-6;return function(r,s){return t===void 0&&(t=new j),e=r.dot(s)+1,e<n?(e=0,Math.abs(r.x)>Math.abs(r.z)?t.set(-r.y,r.x,0):t.set(0,-r.z,r.y)):t.crossVectors(r,s),this._x=t.x,this._y=t.y,this._z=t.z,this._w=e,this.normalize()}}(),inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},multiply:function(t,e){return e!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,e){var n=t._x,i=t._y,r=t._z,s=t._w,a=e._x,o=e._y,l=e._z,c=e._w;return this._x=n*c+s*a+i*l-r*o,this._y=i*c+s*o+r*a-n*l,this._z=r*c+s*l+n*o-i*a,this._w=s*c-n*a-i*o-r*l,this.onChangeCallback(),this},slerp:function(t,e){if(e===0)return this;if(e===1)return this.copy(t);var n=this._x,i=this._y,r=this._z,s=this._w,a=s*t._w+n*t._x+i*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=s,this._x=n,this._y=i,this._z=r,this;var o=Math.sqrt(1-a*a);if(Math.abs(o)<.001)return this._w=.5*(s+this._w),this._x=.5*(n+this._x),this._y=.5*(i+this._y),this._z=.5*(r+this._z),this;var l=Math.atan2(o,a),c=Math.sin((1-e)*l)/o,h=Math.sin(e*l)/o;return this._w=s*c+this._w*h,this._x=n*c+this._x*h,this._y=i*c+this._y*h,this._z=r*c+this._z*h,this.onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,e){return e===void 0&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this.onChangeCallback(),this},toArray:function(t,e){return t===void 0&&(t=[]),e===void 0&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}});function j(t,e,n){this.x=t||0,this.y=e||0,this.z=n||0}Object.assign(j.prototype,{isVector3:!0,set:function(t,e,n){return this.x=t,this.y=e,this.z=n,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return e!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return e!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return e!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(){var t=new ln;return function(n){return n&&n.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(t.setFromEuler(n))}}(),applyAxisAngle:function(){var t=new ln;return function(n,i){return this.applyQuaternion(t.setFromAxisAngle(n,i))}}(),applyMatrix3:function(t){var e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this},applyMatrix4:function(t){var e=this.x,n=this.y,i=this.z,r=t.elements,s=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*s,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*s,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*s,this},applyQuaternion:function(t){var e=this.x,n=this.y,i=this.z,r=t.x,s=t.y,a=t.z,o=t.w,l=o*e+s*i-a*n,c=o*n+a*e-r*i,h=o*i+r*n-s*e,u=-r*e-s*n-a*i;return this.x=l*o+u*-r+c*-a-h*-s,this.y=c*o+u*-s+h*-r-l*-a,this.z=h*o+u*-a+l*-s-c*-r,this},project:function(){var t=new xt;return function(n){return t.multiplyMatrices(n.projectionMatrix,t.getInverse(n.matrixWorld)),this.applyMatrix4(t)}}(),unproject:function(){var t=new xt;return function(n){return t.multiplyMatrices(n.matrixWorld,t.getInverse(n.projectionMatrix)),this.applyMatrix4(t)}}(),transformDirection:function(t){var e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this},clampScalar:function(){var t=new j,e=new j;return function(i,r){return t.set(i,i,i),e.set(r,r,r),this.clamp(t,e)}}(),clampLength:function(t,e){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t)},cross:function(t,e){return e!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)},crossVectors:function(t,e){var n=t.x,i=t.y,r=t.z,s=e.x,a=e.y,o=e.z;return this.x=i*o-r*a,this.y=r*s-n*o,this.z=n*a-i*s,this},projectOnVector:function(t){var e=t.dot(this)/t.lengthSq();return this.copy(t).multiplyScalar(e)},projectOnPlane:function(){var t=new j;return function(n){return t.copy(this).projectOnVector(n),this.sub(t)}}(),reflect:function(){var t=new j;return function(n){return this.sub(t.copy(n).multiplyScalar(2*this.dot(n)))}}(),angleTo:function(t){var e=this.dot(t)/Math.sqrt(this.lengthSq()*t.lengthSq());return Math.acos(wt.clamp(e,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)},setFromSpherical:function(t){var e=Math.sin(t.phi)*t.radius;return this.x=e*Math.sin(t.theta),this.y=Math.cos(t.phi)*t.radius,this.z=e*Math.cos(t.theta),this},setFromCylindrical:function(t){return this.x=t.radius*Math.sin(t.theta),this.y=t.y,this.z=t.radius*Math.cos(t.theta),this},setFromMatrixPosition:function(t){var e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this},setFromMatrixScale:function(t){var e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this},setFromMatrixColumn:function(t,e){return this.fromArray(t.elements,e*4)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return e===void 0&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return t===void 0&&(t=[]),e===void 0&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromBufferAttribute:function(t,e,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}});function Yn(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}Object.assign(Yn.prototype,{isMatrix3:!0,set:function(t,e,n,i,r,s,a,o,l){var c=this.elements;return c[0]=t,c[1]=i,c[2]=a,c[3]=e,c[4]=r,c[5]=o,c[6]=n,c[7]=s,c[8]=l,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return new this.constructor().fromArray(this.elements)},copy:function(t){var e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this},setFromMatrix4:function(t){var e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this},applyToBufferAttribute:function(){var t=new j;return function(n){for(var i=0,r=n.count;i<r;i++)t.x=n.getX(i),t.y=n.getY(i),t.z=n.getZ(i),t.applyMatrix3(this),n.setXYZ(i,t.x,t.y,t.z);return n}}(),multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var n=t.elements,i=e.elements,r=this.elements,s=n[0],a=n[3],o=n[6],l=n[1],c=n[4],h=n[7],u=n[2],f=n[5],d=n[8],p=i[0],g=i[3],v=i[6],m=i[1],y=i[4],x=i[7],_=i[2],b=i[5],w=i[8];return r[0]=s*p+a*m+o*_,r[3]=s*g+a*y+o*b,r[6]=s*v+a*x+o*w,r[1]=l*p+c*m+h*_,r[4]=l*g+c*y+h*b,r[7]=l*v+c*x+h*w,r[2]=u*p+f*m+d*_,r[5]=u*g+f*y+d*b,r[8]=u*v+f*x+d*w,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],c=t[8];return e*s*c-e*a*l-n*r*c+n*a*o+i*r*l-i*s*o},getInverse:function(t,e){t&&t.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var n=t.elements,i=this.elements,r=n[0],s=n[1],a=n[2],o=n[3],l=n[4],c=n[5],h=n[6],u=n[7],f=n[8],d=f*l-c*u,p=c*h-f*o,g=u*o-l*h,v=r*d+s*p+a*g;if(v===0){var m="THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";if(e===!0)throw new Error(m);return console.warn(m),this.identity()}var y=1/v;return i[0]=d*y,i[1]=(a*u-f*s)*y,i[2]=(c*s-a*l)*y,i[3]=p*y,i[4]=(f*r-a*h)*y,i[5]=(a*o-c*r)*y,i[6]=g*y,i[7]=(s*h-u*r)*y,i[8]=(l*r-s*o)*y,this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},setUvTransform:function(t,e,n,i,r,s,a){var o=Math.cos(r),l=Math.sin(r);this.set(n*o,n*l,-n*(o*s+l*a)+s+t,-i*l,i*o,-i*(-l*s+o*a)+a+e,0,0,1)},scale:function(t,e){var n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this},rotate:function(t){var e=Math.cos(t),n=Math.sin(t),i=this.elements,r=i[0],s=i[3],a=i[6],o=i[1],l=i[4],c=i[7];return i[0]=e*r+n*o,i[3]=e*s+n*l,i[6]=e*a+n*c,i[1]=-n*r+e*o,i[4]=-n*s+e*l,i[7]=-n*a+e*c,this},translate:function(t,e){var n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this},equals:function(t){for(var e=this.elements,n=t.elements,i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0},fromArray:function(t,e){e===void 0&&(e=0);for(var n=0;n<9;n++)this.elements[n]=t[n+e];return this},toArray:function(t,e){t===void 0&&(t=[]),e===void 0&&(e=0);var n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}});var QA=0;function Ht(t,e,n,i,r,s,a,o,l,c){Object.defineProperty(this,"id",{value:QA++}),this.uuid=wt.generateUUID(),this.name="",this.image=t!==void 0?t:Ht.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=e!==void 0?e:Ht.DEFAULT_MAPPING,this.wrapS=n!==void 0?n:ni,this.wrapT=i!==void 0?i:ni,this.magFilter=r!==void 0?r:$n,this.minFilter=s!==void 0?s:Uh,this.anisotropy=l!==void 0?l:1,this.format=a!==void 0?a:Tr,this.type=o!==void 0?o:xp,this.offset=new qe(0,0),this.repeat=new qe(1,1),this.center=new qe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Yn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c!==void 0?c:Bc,this.version=0,this.onUpdate=null}Ht.DEFAULT_IMAGE=void 0;Ht.DEFAULT_MAPPING=dp;Ht.prototype=Object.assign(Object.create(Ir.prototype),{constructor:Ht,isTexture:!0,clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){var e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];function n(s){var a;if(s instanceof HTMLCanvasElement)a=s;else{a=document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),a.width=s.width,a.height=s.height;var o=a.getContext("2d");s instanceof ImageData?o.putImageData(s,0,0):o.drawImage(s,0,0,s.width,s.height)}return a.width>2048||a.height>2048?a.toDataURL("image/jpeg",.6):a.toDataURL("image/png")}var i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};if(this.image!==void 0){var r=this.image;r.uuid===void 0&&(r.uuid=wt.generateUUID()),!e&&t.images[r.uuid]===void 0&&(t.images[r.uuid]={uuid:r.uuid,url:n(r)}),i.image=r.uuid}return e||(t.textures[this.uuid]=i),i},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(this.mapping===dp){if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case pr:t.x=t.x-Math.floor(t.x);break;case ni:t.x=t.x<0?0:1;break;case ra:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case pr:t.y=t.y-Math.floor(t.y);break;case ni:t.y=t.y<0?0:1;break;case ra:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}this.flipY&&(t.y=1-t.y)}}});Object.defineProperty(Ht.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});function Vt(t,e,n,i){this.x=t||0,this.y=e||0,this.z=n||0,this.w=i!==void 0?i:1}Object.assign(Vt.prototype,{isVector4:!0,set:function(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this.w=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this},add:function(t,e){return e!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},sub:function(t,e){return e!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var e=this.x,n=this.y,i=this.z,r=this.w,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*i+s[12]*r,this.y=s[1]*e+s[5]*n+s[9]*i+s[13]*r,this.z=s[2]*e+s[6]*n+s[10]*i+s[14]*r,this.w=s[3]*e+s[7]*n+s[11]*i+s[15]*r,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e,n,i,r,s=.01,a=.1,o=t.elements,l=o[0],c=o[4],h=o[8],u=o[1],f=o[5],d=o[9],p=o[2],g=o[6],v=o[10];if(Math.abs(c-u)<s&&Math.abs(h-p)<s&&Math.abs(d-g)<s){if(Math.abs(c+u)<a&&Math.abs(h+p)<a&&Math.abs(d+g)<a&&Math.abs(l+f+v-3)<a)return this.set(1,0,0,0),this;e=Math.PI;var m=(l+1)/2,y=(f+1)/2,x=(v+1)/2,_=(c+u)/4,b=(h+p)/4,w=(d+g)/4;return m>y&&m>x?m<s?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(m),i=_/n,r=b/n):y>x?y<s?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(y),n=_/i,r=w/i):x<s?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(x),n=b/r,i=w/r),this.set(n,i,r,e),this}var S=Math.sqrt((g-d)*(g-d)+(h-p)*(h-p)+(u-c)*(u-c));return Math.abs(S)<.001&&(S=1),this.x=(g-d)/S,this.y=(h-p)/S,this.z=(u-c)/S,this.w=Math.acos((l+f+v-1)/2),this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this},clampScalar:function(){var t,e;return function(i,r){return t===void 0&&(t=new Vt,e=new Vt),t.set(i,i,i,i),e.set(r,r,r,r),this.clamp(t,e)}}(),clampLength:function(t,e){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,e){return e===void 0&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this},toArray:function(t,e){return t===void 0&&(t=[]),e===void 0&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t},fromBufferAttribute:function(t,e,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}});function aa(t,e,n){this.uuid=wt.generateUUID(),this.width=t,this.height=e,this.scissor=new Vt(0,0,t,e),this.scissorTest=!1,this.viewport=new Vt(0,0,t,e),n=n||{},n.minFilter===void 0&&(n.minFilter=$n),this.texture=new Ht(void 0,void 0,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!0,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null}aa.prototype=Object.assign(Object.create(Ir.prototype),{constructor:aa,isWebGLRenderTarget:!0,setSize:function(t,e){(this.width!==t||this.height!==e)&&(this.width=t,this.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function To(t,e,n){aa.call(this,t,e,n),this.activeCubeFace=0,this.activeMipMapLevel=0}To.prototype=Object.create(aa.prototype);To.prototype.constructor=To;To.prototype.isWebGLRenderTargetCube=!0;function oa(t,e,n,i,r,s,a,o,l,c,h,u){Ht.call(this,null,s,a,o,l,c,i,r,h,u),this.image={data:t,width:e,height:n},this.magFilter=l!==void 0?l:ii,this.minFilter=c!==void 0?c:ii,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}oa.prototype=Object.create(Ht.prototype);oa.prototype.constructor=oa;oa.prototype.isDataTexture=!0;function us(t,e,n,i,r,s,a,o,l,c){t=t!==void 0?t:[],e=e!==void 0?e:pp,Ht.call(this,t,e,n,i,r,s,a,o,l,c),this.flipY=!1}us.prototype=Object.create(Ht.prototype);us.prototype.constructor=us;us.prototype.isCubeTexture=!0;Object.defineProperty(us.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}});var ax=new Ht,ox=new us;function lx(){this.seq=[],this.map={}}var mv=[],vv=[],gv=new Float32Array(16),yv=new Float32Array(9);function Ca(t,e,n){var i=t[0];if(i<=0||i>0)return t;var r=e*n,s=mv[r];if(s===void 0&&(s=new Float32Array(r),mv[r]=s),e!==0){i.toArray(s,0);for(var a=1,o=0;a!==e;++a)o+=n,t[a].toArray(s,o)}return s}function cx(t,e){var n=vv[e];n===void 0&&(n=new Int32Array(e),vv[e]=n);for(var i=0;i!==e;++i)n[i]=t.allocTextureUnit();return n}function eC(t,e){t.uniform1f(this.addr,e)}function tC(t,e){t.uniform1i(this.addr,e)}function nC(t,e){e.x===void 0?t.uniform2fv(this.addr,e):t.uniform2f(this.addr,e.x,e.y)}function iC(t,e){e.x!==void 0?t.uniform3f(this.addr,e.x,e.y,e.z):e.r!==void 0?t.uniform3f(this.addr,e.r,e.g,e.b):t.uniform3fv(this.addr,e)}function rC(t,e){e.x===void 0?t.uniform4fv(this.addr,e):t.uniform4f(this.addr,e.x,e.y,e.z,e.w)}function sC(t,e){t.uniformMatrix2fv(this.addr,!1,e.elements||e)}function aC(t,e){e.elements===void 0?t.uniformMatrix3fv(this.addr,!1,e):(yv.set(e.elements),t.uniformMatrix3fv(this.addr,!1,yv))}function oC(t,e){e.elements===void 0?t.uniformMatrix4fv(this.addr,!1,e):(gv.set(e.elements),t.uniformMatrix4fv(this.addr,!1,gv))}function lC(t,e,n){var i=n.allocTextureUnit();t.uniform1i(this.addr,i),n.setTexture2D(e||ax,i)}function cC(t,e,n){var i=n.allocTextureUnit();t.uniform1i(this.addr,i),n.setTextureCube(e||ox,i)}function hx(t,e){t.uniform2iv(this.addr,e)}function ux(t,e){t.uniform3iv(this.addr,e)}function fx(t,e){t.uniform4iv(this.addr,e)}function hC(t){switch(t){case 5126:return eC;case 35664:return nC;case 35665:return iC;case 35666:return rC;case 35674:return sC;case 35675:return aC;case 35676:return oC;case 35678:case 36198:return lC;case 35680:return cC;case 5124:case 35670:return tC;case 35667:case 35671:return hx;case 35668:case 35672:return ux;case 35669:case 35673:return fx}}function uC(t,e){t.uniform1fv(this.addr,e)}function fC(t,e){t.uniform1iv(this.addr,e)}function dC(t,e){t.uniform2fv(this.addr,Ca(e,this.size,2))}function pC(t,e){t.uniform3fv(this.addr,Ca(e,this.size,3))}function mC(t,e){t.uniform4fv(this.addr,Ca(e,this.size,4))}function vC(t,e){t.uniformMatrix2fv(this.addr,!1,Ca(e,this.size,4))}function gC(t,e){t.uniformMatrix3fv(this.addr,!1,Ca(e,this.size,9))}function yC(t,e){t.uniformMatrix4fv(this.addr,!1,Ca(e,this.size,16))}function xC(t,e,n){var i=e.length,r=cx(n,i);t.uniform1iv(this.addr,r);for(var s=0;s!==i;++s)n.setTexture2D(e[s]||ax,r[s])}function _C(t,e,n){var i=e.length,r=cx(n,i);t.uniform1iv(this.addr,r);for(var s=0;s!==i;++s)n.setTextureCube(e[s]||ox,r[s])}function MC(t){switch(t){case 5126:return uC;case 35664:return dC;case 35665:return pC;case 35666:return mC;case 35674:return vC;case 35675:return gC;case 35676:return yC;case 35678:return xC;case 35680:return _C;case 5124:case 35670:return fC;case 35667:case 35671:return hx;case 35668:case 35672:return ux;case 35669:case 35673:return fx}}function bC(t,e,n){this.id=t,this.addr=n,this.setValue=hC(e.type)}function wC(t,e,n){this.id=t,this.addr=n,this.size=e.size,this.setValue=MC(e.type)}function dx(t){this.id=t,lx.call(this)}dx.prototype.setValue=function(t,e){for(var n=this.seq,i=0,r=n.length;i!==r;++i){var s=n[i];s.setValue(t,e[s.id])}};var Eu=/([\w\d_]+)(\])?(\[|\.)?/g;function xv(t,e){t.seq.push(e),t.map[e.id]=e}function SC(t,e,n){var i=t.name,r=i.length;for(Eu.lastIndex=0;;){var s=Eu.exec(i),a=Eu.lastIndex,o=s[1],l=s[2]==="]",c=s[3];if(l&&(o=o|0),c===void 0||c==="["&&a+2===r){xv(n,c===void 0?new bC(o,t,e):new wC(o,t,e));break}else{var h=n.map,u=h[o];u===void 0&&(u=new dx(o),xv(n,u)),n=u}}}function Mr(t,e,n){lx.call(this),this.renderer=n;for(var i=t.getProgramParameter(e,t.ACTIVE_UNIFORMS),r=0;r<i;++r){var s=t.getActiveUniform(e,r),a=s.name,o=t.getUniformLocation(e,a);SC(s,o,this)}}Mr.prototype.setValue=function(t,e,n){var i=this.map[e];i!==void 0&&i.setValue(t,n,this.renderer)};Mr.prototype.setOptional=function(t,e,n){var i=e[n];i!==void 0&&this.setValue(t,n,i)};Mr.upload=function(t,e,n,i){for(var r=0,s=e.length;r!==s;++r){var a=e[r],o=n[a.id];o.needsUpdate!==!1&&a.setValue(t,o.value,i)}};Mr.seqWithValue=function(t,e){for(var n=[],i=0,r=t.length;i!==r;++i){var s=t[i];s.id in e&&n.push(s)}return n};var EC={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function dt(t,e,n){return e===void 0&&n===void 0?this.set(t):this.setRGB(t,e,n)}Object.assign(dt.prototype,{isColor:!0,r:1,g:1,b:1,set:function(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this},setScalar:function(t){return this.r=t,this.g=t,this.b=t,this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,this},setRGB:function(t,e,n){return this.r=t,this.g=e,this.b=n,this},setHSL:function(){function t(e,n,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?e+(n-e)*6*i:i<1/2?n:i<2/3?e+(n-e)*6*(2/3-i):e}return function(n,i,r){if(n=wt.euclideanModulo(n,1),i=wt.clamp(i,0,1),r=wt.clamp(r,0,1),i===0)this.r=this.g=this.b=r;else{var s=r<=.5?r*(1+i):r+i-r*i,a=2*r-s;this.r=t(a,s,n+1/3),this.g=t(a,s,n),this.b=t(a,s,n-1/3)}return this}}(),setStyle:function(t){function e(u){u!==void 0&&parseFloat(u)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}var n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){var i,r=n[1],s=n[2];switch(r){case"rgb":case"rgba":if(i=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,e(i[5]),this;if(i=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,e(i[5]),this;break;case"hsl":case"hsla":if(i=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s)){var a=parseFloat(i[1])/360,o=parseInt(i[2],10)/100,l=parseInt(i[3],10)/100;return e(i[5]),this.setHSL(a,o,l)}break}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(t)){var c=n[1],h=c.length;if(h===3)return this.r=parseInt(c.charAt(0)+c.charAt(0),16)/255,this.g=parseInt(c.charAt(1)+c.charAt(1),16)/255,this.b=parseInt(c.charAt(2)+c.charAt(2),16)/255,this;if(h===6)return this.r=parseInt(c.charAt(0)+c.charAt(1),16)/255,this.g=parseInt(c.charAt(2)+c.charAt(3),16)/255,this.b=parseInt(c.charAt(4)+c.charAt(5),16)/255,this}if(t&&t.length>0){var c=EC[t];c!==void 0?this.setHex(c):console.warn("THREE.Color: Unknown color "+t)}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,e){return e===void 0&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},copyLinearToGamma:function(t,e){e===void 0&&(e=2);var n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this},convertGammaToLinear:function(){var t=this.r,e=this.g,n=this.b;return this.r=t*t,this.g=e*e,this.b=n*n,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return this.r*255<<16^this.g*255<<8^this.b*255<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){var e=t||{h:0,s:0,l:0},n=this.r,i=this.g,r=this.b,s=Math.max(n,i,r),a=Math.min(n,i,r),o,l,c=(a+s)/2;if(a===s)o=0,l=0;else{var h=s-a;switch(l=c<=.5?h/(s+a):h/(2-s-a),s){case n:o=(i-r)/h+(i<r?6:0);break;case i:o=(r-n)/h+2;break;case r:o=(n-i)/h+4;break}o/=6}return e.h=o,e.s=l,e.l=c,e},getStyle:function(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"},offsetHSL:function(t,e,n){var i=this.getHSL();return i.h+=t,i.s+=e,i.l+=n,this.setHSL(i.h,i.s,i.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},sub:function(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,e){return e===void 0&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return t===void 0&&(t=[]),e===void 0&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t},toJSON:function(){return this.getHex()}});var ft={common:{diffuse:{value:new dt(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Yn},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new qe(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new dt(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new dt(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},uvTransform:{value:new Yn}}},Wn={merge:function(t){for(var e={},n=0;n<t.length;n++){var i=this.clone(t[n]);for(var r in i)e[r]=i[r]}return e},clone:function(t){var e={};for(var n in t){e[n]={};for(var i in t[n]){var r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}},TC=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif
`,AC=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif
`,CC=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif
`,RC=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( PHYSICAL )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif
`,PC=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,LC=`
vec3 transformed = vec3( position );
`,IC=`
vec3 objectNormal = vec3( normal );
`,DC=`float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	if( decayExponent > 0.0 ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		float maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		return distanceFalloff * maxDistanceCutoffFactor;
#else
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
#endif
	}
	return 1.0;
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE  = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS  = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;
	return specularColor * AB.x + AB.y;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
`,NC=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif
`,BC=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;
	}
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;
		}
		if ( clipped ) discard;
	#endif
#endif
`,UC=`#if NUM_CLIPPING_PLANES > 0
	#if ! defined( PHYSICAL ) && ! defined( PHONG )
		varying vec3 vViewPosition;
	#endif
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif
`,FC=`#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )
	varying vec3 vViewPosition;
#endif
`,OC=`#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )
	vViewPosition = - mvPosition.xyz;
#endif
`,zC=`#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`,GC=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif
`,VC=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,HC=`#ifdef USE_COLOR
	vColor.xyz = color.xyz;
#endif`,kC=`#define PI 3.14159265359
#define PI2 6.28318530718
#define PI_HALF 1.5707963267949
#define RECIPROCAL_PI 0.31830988618
#define RECIPROCAL_PI2 0.15915494
#define LOG2 1.442695
#define EPSILON 1e-6
#define saturate(a) clamp( a, 0.0, 1.0 )
#define whiteCompliment(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
`,WC=`#ifdef ENVMAP_TYPE_CUBE_UV
#define cubeUV_textureSize (1024.0)
int getFaceFromDirection(vec3 direction) {
	vec3 absDirection = abs(direction);
	int face = -1;
	if( absDirection.x > absDirection.z ) {
		if(absDirection.x > absDirection.y )
			face = direction.x > 0.0 ? 0 : 3;
		else
			face = direction.y > 0.0 ? 1 : 4;
	}
	else {
		if(absDirection.z > absDirection.y )
			face = direction.z > 0.0 ? 2 : 5;
		else
			face = direction.y > 0.0 ? 1 : 4;
	}
	return face;
}
#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)
#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))
vec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {
	float scale = exp2(cubeUV_maxLods1 - roughnessLevel);
	float dxRoughness = dFdx(roughness);
	float dyRoughness = dFdy(roughness);
	vec3 dx = dFdx( vec * scale * dxRoughness );
	vec3 dy = dFdy( vec * scale * dyRoughness );
	float d = max( dot( dx, dx ), dot( dy, dy ) );
	d = clamp(d, 1.0, cubeUV_rangeClamp);
	float mipLevel = 0.5 * log2(d);
	return vec2(floor(mipLevel), fract(mipLevel));
}
#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)
#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)
vec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {
	mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;
	float a = 16.0 * cubeUV_rcpTextureSize;
	vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );
	vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;
	float powScale = exp2_packed.x * exp2_packed.y;
	float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;
	float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;
	bool bRes = mipLevel == 0.0;
	scale =  bRes && (scale < a) ? a : scale;
	vec3 r;
	vec2 offset;
	int face = getFaceFromDirection(direction);
	float rcpPowScale = 1.0 / powScale;
	if( face == 0) {
		r = vec3(direction.x, -direction.z, direction.y);
		offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;
	}
	else if( face == 1) {
		r = vec3(direction.y, direction.x, direction.z);
		offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;
	}
	else if( face == 2) {
		r = vec3(direction.z, direction.x, direction.y);
		offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;
	}
	else if( face == 3) {
		r = vec3(direction.x, direction.z, direction.y);
		offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;
	}
	else if( face == 4) {
		r = vec3(direction.y, direction.x, -direction.z);
		offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;
	}
	else {
		r = vec3(direction.z, -direction.x, direction.y);
		offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;
	}
	r = normalize(r);
	float texelOffset = 0.5 * cubeUV_rcpTextureSize;
	vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;
	vec2 base = offset + vec2( texelOffset );
	return base + s * ( scale - 2.0 * texelOffset );
}
#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)
vec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {
	float roughnessVal = roughness* cubeUV_maxLods3;
	float r1 = floor(roughnessVal);
	float r2 = r1 + 1.0;
	float t = fract(roughnessVal);
	vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);
	float s = mipInfo.y;
	float level0 = mipInfo.x;
	float level1 = level0 + 1.0;
	level1 = level1 > 5.0 ? 5.0 : level1;
	level0 += min( floor( s + 0.5 ), 5.0 );
	vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);
	vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));
	vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);
	vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));
	vec4 result = mix(color10, color20, t);
	return vec4(result.rgb, 1.0);
}
#endif
`,XC=`vec3 transformedNormal = normalMatrix * objectNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
`,qC=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif
`,$C=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );
#endif
`,YC=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif
`,ZC=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif
`,jC=`  gl_FragColor = linearToOutputTexel( gl_FragColor );
`,JC=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.xyz * value.w * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.x, max( value.g, value.b ) );
	float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M            = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.x, max( value.g, value.b ) );
	float D      = max( maxRange / maxRGB, 1.0 );
	D            = min( floor( D ) / 255.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value )  {
	vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;
	Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract(Le);
	vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;
	return vec4( max(vRGB, 0.0), 1.0 );
}
`,KC=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToVertex, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_EQUIREC )
		vec2 sampleUV;
		reflectVec = normalize( reflectVec );
		sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
		sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
		vec4 envColor = texture2D( envMap, sampleUV );
	#elif defined( ENVMAP_TYPE_SPHERE )
		reflectVec = normalize( reflectVec );
		vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );
		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	envColor = envMapTexelToLinear( envColor );
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif
`,QC=`#if defined( USE_ENVMAP ) || defined( PHYSICAL )
	uniform float reflectivity;
	uniform float envMapIntensity;
#endif
#ifdef USE_ENVMAP
	#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )
		varying vec3 vWorldPosition;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	uniform float flipEnvMap;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif
`,eR=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif
`,tR=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif
`,nR=`
#ifdef USE_FOG
fogDepth = -mvPosition.z;
#endif`,iR=`#ifdef USE_FOG
  varying float fogDepth;
#endif
`,rR=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif
`,sR=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif
`,aR=`#ifdef TOON
	uniform sampler2D gradientMap;
	vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
		float dotNL = dot( normal, lightDirection );
		vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
		#ifdef USE_GRADIENTMAP
			return texture2D( gradientMap, coord ).rgb;
		#else
			return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
		#endif
	}
#endif
`,oR=`#ifdef USE_LIGHTMAP
	reflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
#endif
`,lR=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,cR=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
#endif
`,hR=`uniform vec3 ambientLightColor;
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
		float shadowCameraNear;
		float shadowCameraFar;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif
#if defined( USE_ENVMAP ) && defined( PHYSICAL )
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			vec4 envMapColor = textureCubeUV( queryVec, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );
		#else
			vec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			vec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));
		#elif defined( ENVMAP_TYPE_EQUIREC )
			vec2 sampleUV;
			sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
			sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_SPHERE )
			vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif
`,uR=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;
`,fR=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3	diffuseColor;
	vec3	specularColor;
	float	specularShininess;
	float	specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	#ifdef TOON
		vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#else
		float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
		vec3 irradiance = dotNL * directLight.color;
	#endif
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)
`,dR=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
material.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );
#ifdef STANDARD
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
	material.clearCoat = saturate( clearCoat );	material.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );
#endif
`,pR=`struct PhysicalMaterial {
	vec3	diffuseColor;
	float	specularRoughness;
	vec3	specularColor;
	#ifndef STANDARD
		float clearCoat;
		float clearCoatRoughness;
	#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearCoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos - halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos + halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos + halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos - halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifndef STANDARD
		float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );
	#else
		float clearCoatDHR = 0.0;
	#endif
	reflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );
	reflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	#ifndef STANDARD
		reflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );
	#endif
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	#ifndef STANDARD
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		float dotNL = dotNV;
		float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );
	#else
		float clearCoatDHR = 0.0;
	#endif
	reflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );
	#ifndef STANDARD
		reflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );
	#endif
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )
#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}
`,mR=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = normalize( vViewPosition );
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
#endif
#if defined( RE_IndirectDiffuse )
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#ifdef USE_LIGHTMAP
		vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
	#endif
	#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )
		irradiance += getLightProbeIndirectIrradiance( geometry, 8 );
	#endif
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	vec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );
	#ifndef STANDARD
		vec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );
	#else
		vec3 clearCoatRadiance = vec3( 0.0 );
	#endif
	RE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );
#endif
`,vR=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,gR=`#ifdef USE_LOGDEPTHBUF
	uniform float logDepthBufFC;
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
	#endif
#endif
`,yR=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
	#endif
	uniform float logDepthBufFC;
#endif`,xR=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
	#else
		gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
		gl_Position.z *= gl_Position.w;
	#endif
#endif
`,_R=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif
`,MR=`#ifdef USE_MAP
	uniform sampler2D map;
#endif
`,bR=`#ifdef USE_MAP
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
`,wR=`#ifdef USE_MAP
	uniform mat3 uvTransform;
	uniform sampler2D map;
#endif
`,SR=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif
`,ER=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,TR=`#ifdef USE_MORPHNORMALS
	objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];
	objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];
	objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];
	objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];
#endif
`,AR=`#ifdef USE_MORPHTARGETS
	#ifndef USE_MORPHNORMALS
	uniform float morphTargetInfluences[ 8 ];
	#else
	uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`,CR=`#ifdef USE_MORPHTARGETS
	transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];
	transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];
	transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];
	transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
	transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];
	transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];
	transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];
	transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];
	#endif
#endif
`,RR=`#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
#endif
#ifdef USE_NORMALMAP
	normal = perturbNormal2Arb( -vViewPosition, normal );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif
`,PR=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 S = normalize( q0 * st1.t - q1 * st0.t );
		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );
		vec3 N = normalize( surf_norm );
		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
		mapN.xy = normalScale * mapN.xy;
		mat3 tsn = mat3( S, T, N );
		return normalize( tsn * mapN );
	}
#endif
`,LR=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}
`,IR=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif
`,DR=`vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );
gl_Position = projectionMatrix * mvPosition;
`,NR=`#if defined( DITHERING )
  gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif
`,BR=`#if defined( DITHERING )
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif
`,UR=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif
`,FR=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,OR=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];
	#endif
	#if NUM_SPOT_LIGHTS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];
	#endif
	#if NUM_POINT_LIGHTS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {
		const vec2 offset = vec2( 0.0, 1.0 );
		vec2 texelSize = vec2( 1.0 ) / size;
		vec2 centroidUV = floor( uv * size + 0.5 ) / size;
		float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );
		float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );
		float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );
		float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );
		vec2 f = fract( uv * size + 0.5 );
		float a = mix( lb, lt, f.y );
		float b = mix( rb, rt, f.y );
		float c = mix( a, b, f.x );
		return c;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			shadow = (
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 9.0 );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif
`,zR=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];
	#endif
	#if NUM_SPOT_LIGHTS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];
	#endif
	#if NUM_POINT_LIGHTS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];
	#endif
#endif
`,GR=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;
	}
	#endif
	#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;
	}
	#endif
	#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;
	}
	#endif
#endif
`,VR=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
	DirectionalLight directionalLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		shadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_SPOT_LIGHTS > 0
	SpotLight spotLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		shadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_POINT_LIGHTS > 0
	PointLight pointLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		shadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#endif
	#endif
	return shadow;
}
`,HR=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,kR=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif
`,WR=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif
`,XR=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
#endif
`,qR=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,$R=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,YR=`#if defined( TONE_MAPPING )
  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif
`,ZR=`#ifndef saturate
	#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
uniform float toneMappingWhitePoint;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )
vec3 Uncharted2ToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
`,jR=`#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	varying vec2 vUv;
#endif`,JR=`#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
`,KR=`#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,QR=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,eP=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
#endif`,tP=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = uv2;
#endif`,nP=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );
#endif
`,iP=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldPosition;
void main() {
	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );
	gl_FragColor.a *= opacity;
}
`,rP=`varying vec3 vWorldPosition;
#include <common>
void main() {
	vWorldPosition = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}
`,sP=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( gl_FragCoord.z );
	#endif
}
`,aP=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
}
`,oP=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}
`,lP=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}
`,cP=`uniform sampler2D tEquirect;
varying vec3 vWorldPosition;
#include <common>
void main() {
	vec3 direction = normalize( vWorldPosition );
	vec2 sampleUV;
	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;
	gl_FragColor = texture2D( tEquirect, sampleUV );
}
`,hP=`varying vec3 vWorldPosition;
#include <common>
void main() {
	vWorldPosition = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}
`,uP=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`,fP=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	vLineDistance = scale * lineDistance;
	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}
`,dP=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		reflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`,pP=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}
`,mP=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_pars_fragment>
#include <bsdfs>
#include <lights_pars>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}
`,vP=`#define LAMBERT
varying vec3 vLightFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`,gP=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_template>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}
`,yP=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`,xP=`#define PHYSICAL
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifndef STANDARD
	uniform float clearCoat;
	uniform float clearCoatRoughness;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <lights_pars>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_template>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}
`,_P=`#define PHYSICAL
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`,MP=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	#include <normal_fragment>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}
`,bP=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}
`,wP=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <packing>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`,SP=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <project_vertex>
	#ifdef USE_SIZEATTENUATION
		gl_PointSize = size * ( scale / - mvPosition.z );
	#else
		gl_PointSize = size;
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`,EP=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <fog_fragment>
}
`,TP=`#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`,Nt={alphamap_fragment:TC,alphamap_pars_fragment:AC,alphatest_fragment:CC,aomap_fragment:RC,aomap_pars_fragment:PC,begin_vertex:LC,beginnormal_vertex:IC,bsdfs:DC,bumpmap_pars_fragment:NC,clipping_planes_fragment:BC,clipping_planes_pars_fragment:UC,clipping_planes_pars_vertex:FC,clipping_planes_vertex:OC,color_fragment:zC,color_pars_fragment:GC,color_pars_vertex:VC,color_vertex:HC,common:kC,cube_uv_reflection_fragment:WC,defaultnormal_vertex:XC,displacementmap_pars_vertex:qC,displacementmap_vertex:$C,emissivemap_fragment:YC,emissivemap_pars_fragment:ZC,encodings_fragment:jC,encodings_pars_fragment:JC,envmap_fragment:KC,envmap_pars_fragment:QC,envmap_pars_vertex:eR,envmap_vertex:tR,fog_vertex:nR,fog_pars_vertex:iR,fog_fragment:rR,fog_pars_fragment:sR,gradientmap_pars_fragment:aR,lightmap_fragment:oR,lightmap_pars_fragment:lR,lights_lambert_vertex:cR,lights_pars:hR,lights_phong_fragment:uR,lights_phong_pars_fragment:fR,lights_physical_fragment:dR,lights_physical_pars_fragment:pR,lights_template:mR,logdepthbuf_fragment:vR,logdepthbuf_pars_fragment:gR,logdepthbuf_pars_vertex:yR,logdepthbuf_vertex:xR,map_fragment:_R,map_pars_fragment:MR,map_particle_fragment:bR,map_particle_pars_fragment:wR,metalnessmap_fragment:SR,metalnessmap_pars_fragment:ER,morphnormal_vertex:TR,morphtarget_pars_vertex:AR,morphtarget_vertex:CR,normal_fragment:RR,normalmap_pars_fragment:PR,packing:LR,premultiplied_alpha_fragment:IR,project_vertex:DR,dithering_fragment:NR,dithering_pars_fragment:BR,roughnessmap_fragment:UR,roughnessmap_pars_fragment:FR,shadowmap_pars_fragment:OR,shadowmap_pars_vertex:zR,shadowmap_vertex:GR,shadowmask_pars_fragment:VR,skinbase_vertex:HR,skinning_pars_vertex:kR,skinning_vertex:WR,skinnormal_vertex:XR,specularmap_fragment:qR,specularmap_pars_fragment:$R,tonemapping_fragment:YR,tonemapping_pars_fragment:ZR,uv_pars_fragment:jR,uv_pars_vertex:JR,uv_vertex:KR,uv2_pars_fragment:QR,uv2_pars_vertex:eP,uv2_vertex:tP,worldpos_vertex:nP,cube_frag:iP,cube_vert:rP,depth_frag:sP,depth_vert:aP,distanceRGBA_frag:oP,distanceRGBA_vert:lP,equirect_frag:cP,equirect_vert:hP,linedashed_frag:uP,linedashed_vert:fP,meshbasic_frag:dP,meshbasic_vert:pP,meshlambert_frag:mP,meshlambert_vert:vP,meshphong_frag:gP,meshphong_vert:yP,meshphysical_frag:xP,meshphysical_vert:_P,normal_frag:MP,normal_vert:bP,points_frag:wP,points_vert:SP,shadow_frag:EP,shadow_vert:TP},Qs={basic:{uniforms:Wn.merge([ft.common,ft.specularmap,ft.envmap,ft.aomap,ft.lightmap,ft.fog]),vertexShader:Nt.meshbasic_vert,fragmentShader:Nt.meshbasic_frag},lambert:{uniforms:Wn.merge([ft.common,ft.specularmap,ft.envmap,ft.aomap,ft.lightmap,ft.emissivemap,ft.fog,ft.lights,{emissive:{value:new dt(0)}}]),vertexShader:Nt.meshlambert_vert,fragmentShader:Nt.meshlambert_frag},phong:{uniforms:Wn.merge([ft.common,ft.specularmap,ft.envmap,ft.aomap,ft.lightmap,ft.emissivemap,ft.bumpmap,ft.normalmap,ft.displacementmap,ft.gradientmap,ft.fog,ft.lights,{emissive:{value:new dt(0)},specular:{value:new dt(1118481)},shininess:{value:30}}]),vertexShader:Nt.meshphong_vert,fragmentShader:Nt.meshphong_frag},standard:{uniforms:Wn.merge([ft.common,ft.envmap,ft.aomap,ft.lightmap,ft.emissivemap,ft.bumpmap,ft.normalmap,ft.displacementmap,ft.roughnessmap,ft.metalnessmap,ft.fog,ft.lights,{emissive:{value:new dt(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:Nt.meshphysical_vert,fragmentShader:Nt.meshphysical_frag},points:{uniforms:Wn.merge([ft.points,ft.fog]),vertexShader:Nt.points_vert,fragmentShader:Nt.points_frag},dashed:{uniforms:Wn.merge([ft.common,ft.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Nt.linedashed_vert,fragmentShader:Nt.linedashed_frag},depth:{uniforms:Wn.merge([ft.common,ft.displacementmap]),vertexShader:Nt.depth_vert,fragmentShader:Nt.depth_frag},normal:{uniforms:Wn.merge([ft.common,ft.bumpmap,ft.normalmap,ft.displacementmap,{opacity:{value:1}}]),vertexShader:Nt.normal_vert,fragmentShader:Nt.normal_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Nt.cube_vert,fragmentShader:Nt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Nt.equirect_vert,fragmentShader:Nt.equirect_frag},distanceRGBA:{uniforms:Wn.merge([ft.common,ft.displacementmap,{referencePosition:{value:new j},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Nt.distanceRGBA_vert,fragmentShader:Nt.distanceRGBA_frag},shadow:{uniforms:Wn.merge([ft.lights,ft.fog,{color:{value:new dt(0)},opacity:{value:1}}]),vertexShader:Nt.shadow_vert,fragmentShader:Nt.shadow_frag}};Qs.physical={uniforms:Wn.merge([Qs.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:Nt.meshphysical_vert,fragmentShader:Nt.meshphysical_frag};function Uc(t,e,n,i,r,s,a,o,l){Ht.call(this,t,e,n,i,r,s,a,o,l),this.needsUpdate=!0}Uc.prototype=Object.create(Ht.prototype);Uc.prototype.constructor=Uc;function AP(t,e,n,i,r){var s,a,o,l,c,h,u=new j,f=new ln,d=new j;function p(){var m=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),y=new Uint16Array([0,1,2,0,2,3]);s=e.createBuffer(),a=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,s),e.bufferData(e.ARRAY_BUFFER,m,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,a),e.bufferData(e.ELEMENT_ARRAY_BUFFER,y,e.STATIC_DRAW),o=g(),l={position:e.getAttribLocation(o,"position"),uv:e.getAttribLocation(o,"uv")},c={uvOffset:e.getUniformLocation(o,"uvOffset"),uvScale:e.getUniformLocation(o,"uvScale"),rotation:e.getUniformLocation(o,"rotation"),center:e.getUniformLocation(o,"center"),scale:e.getUniformLocation(o,"scale"),color:e.getUniformLocation(o,"color"),map:e.getUniformLocation(o,"map"),opacity:e.getUniformLocation(o,"opacity"),modelViewMatrix:e.getUniformLocation(o,"modelViewMatrix"),projectionMatrix:e.getUniformLocation(o,"projectionMatrix"),fogType:e.getUniformLocation(o,"fogType"),fogDensity:e.getUniformLocation(o,"fogDensity"),fogNear:e.getUniformLocation(o,"fogNear"),fogFar:e.getUniformLocation(o,"fogFar"),fogColor:e.getUniformLocation(o,"fogColor"),fogDepth:e.getUniformLocation(o,"fogDepth"),alphaTest:e.getUniformLocation(o,"alphaTest")};var x=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");x.width=8,x.height=8;var _=x.getContext("2d");_.fillStyle="white",_.fillRect(0,0,8,8),h=new Uc(x)}this.render=function(m,y,x){if(m.length!==0){o===void 0&&p(),n.useProgram(o),n.initAttributes(),n.enableAttribute(l.position),n.enableAttribute(l.uv),n.disableUnusedAttributes(),n.disable(e.CULL_FACE),n.enable(e.BLEND),e.bindBuffer(e.ARRAY_BUFFER,s),e.vertexAttribPointer(l.position,2,e.FLOAT,!1,2*8,0),e.vertexAttribPointer(l.uv,2,e.FLOAT,!1,2*8,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,a),e.uniformMatrix4fv(c.projectionMatrix,!1,x.projectionMatrix.elements),n.activeTexture(e.TEXTURE0),e.uniform1i(c.map,0);var _=0,b=0,w=y.fog;w?(e.uniform3f(c.fogColor,w.color.r,w.color.g,w.color.b),w.isFog?(e.uniform1f(c.fogNear,w.near),e.uniform1f(c.fogFar,w.far),e.uniform1i(c.fogType,1),_=1,b=1):w.isFogExp2&&(e.uniform1f(c.fogDensity,w.density),e.uniform1i(c.fogType,2),_=2,b=2)):(e.uniform1i(c.fogType,0),_=0,b=0);for(var S=0,C=m.length;S<C;S++){var L=m[S];L.modelViewMatrix.multiplyMatrices(x.matrixWorldInverse,L.matrixWorld),L.z=-L.modelViewMatrix.elements[14]}m.sort(v);for(var M=[],E=[],S=0,C=m.length;S<C;S++){var L=m[S],N=L.material;if(N.visible!==!1){L.onBeforeRender(t,y,x,void 0,N,void 0),e.uniform1f(c.alphaTest,N.alphaTest),e.uniformMatrix4fv(c.modelViewMatrix,!1,L.modelViewMatrix.elements),L.matrixWorld.decompose(u,f,d),M[0]=d.x,M[1]=d.y,E[0]=L.center.x-.5,E[1]=L.center.y-.5;var k=0;y.fog&&N.fog&&(k=b),_!==k&&(e.uniform1i(c.fogType,k),_=k),N.map!==null?(e.uniform2f(c.uvOffset,N.map.offset.x,N.map.offset.y),e.uniform2f(c.uvScale,N.map.repeat.x,N.map.repeat.y)):(e.uniform2f(c.uvOffset,0,0),e.uniform2f(c.uvScale,1,1)),e.uniform1f(c.opacity,N.opacity),e.uniform3f(c.color,N.color.r,N.color.g,N.color.b),e.uniform1f(c.rotation,N.rotation),e.uniform2fv(c.center,E),e.uniform2fv(c.scale,M),n.setBlending(N.blending,N.blendEquation,N.blendSrc,N.blendDst,N.blendEquationAlpha,N.blendSrcAlpha,N.blendDstAlpha,N.premultipliedAlpha),n.buffers.depth.setTest(N.depthTest),n.buffers.depth.setMask(N.depthWrite),n.buffers.color.setMask(N.colorWrite),i.setTexture2D(N.map||h,0),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),L.onAfterRender(t,y,x,void 0,N,void 0)}}n.enable(e.CULL_FACE),n.reset()}};function g(){var m=e.createProgram(),y=e.createShader(e.VERTEX_SHADER),x=e.createShader(e.FRAGMENT_SHADER);return e.shaderSource(y,["precision "+r.precision+" float;","#define SHADER_NAME SpriteMaterial","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 center;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float fogDepth;","void main() {","	vUV = uvOffset + uv * uvScale;","	vec2 alignedPosition = ( position - center ) * scale;","	vec2 rotatedPosition;","	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","	vec4 mvPosition;","	mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","	mvPosition.xy += rotatedPosition;","	gl_Position = projectionMatrix * mvPosition;","	fogDepth = - mvPosition.z;","}"].join(`
`)),e.shaderSource(x,["precision "+r.precision+" float;","#define SHADER_NAME SpriteMaterial","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","varying float fogDepth;","void main() {","	vec4 texture = texture2D( map, vUV );","	gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","	if ( gl_FragColor.a < alphaTest ) discard;","	if ( fogType > 0 ) {","		float fogFactor = 0.0;","		if ( fogType == 1 ) {","			fogFactor = smoothstep( fogNear, fogFar, fogDepth );","		} else {","			const float LOG2 = 1.442695;","			fogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );","			fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","		}","		gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );","	}","}"].join(`
`)),e.compileShader(y),e.compileShader(x),e.attachShader(m,y),e.attachShader(m,x),e.linkProgram(m),m}function v(m,y){return m.renderOrder!==y.renderOrder?m.renderOrder-y.renderOrder:m.z!==y.z?y.z-m.z:y.id-m.id}}var CP=0;function Rt(){Object.defineProperty(this,"id",{value:CP++}),this.uuid=wt.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.lights=!0,this.blending=Nh,this.side=hp,this.flatShading=!1,this.vertexColors=fp,this.opacity=1,this.transparent=!1,this.blendSrc=J0,this.blendDst=K0,this.blendEquation=j0,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Lf,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.overdraw=0,this.visible=!0,this.userData={},this.needsUpdate=!0}Rt.prototype=Object.assign(Object.create(Ir.prototype),{constructor:Rt,isMaterial:!0,onBeforeCompile:function(){},setValues:function(t){if(t!==void 0)for(var e in t){var n=t[e];if(n===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if(e==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===up;continue}var i=this[e];if(i===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):e==="overdraw"?this[e]=Number(n):this[e]=n}},toJSON:function(t){var e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});var n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearCoat!==void 0&&(n.clearCoat=this.clearCoat),this.clearCoatRoughness!==void 0&&(n.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.size!==void 0&&(n.size=this.size),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Nh&&(n.blending=this.blending),this.flatShading===!0&&(n.flatShading=this.flatShading),this.side!==hp&&(n.side=this.side),this.vertexColors!==fp&&(n.vertexColors=this.vertexColors),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,this.rotation!==0&&(n.rotation=this.rotation),this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.morphTargets===!0&&(n.morphTargets=!0),this.skinning===!0&&(n.skinning=!0),this.visible===!1&&(n.visible=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(a){var o=[];for(var l in a){var c=a[l];delete c.metadata,o.push(c)}return o}if(e){var r=i(t.textures),s=i(t.images);r.length>0&&(n.textures=r),s.length>0&&(n.images=s)}return n},clone:function(){return new this.constructor().copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.lights=t.lights,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.overdraw=t.overdraw,this.visible=t.visible,this.userData=JSON.parse(JSON.stringify(t.userData)),this.clipShadows=t.clipShadows,this.clipIntersection=t.clipIntersection;var e=t.clippingPlanes,n=null;if(e!==null){var i=e.length;n=new Array(i);for(var r=0;r!==i;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.shadowSide=t.shadowSide,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function fs(t){Rt.call(this),this.type="MeshDepthMaterial",this.depthPacking=JA,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(t)}fs.prototype=Object.create(Rt.prototype);fs.prototype.constructor=fs;fs.prototype.isMeshDepthMaterial=!0;fs.prototype.copy=function(t){return Rt.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this};function ds(t){Rt.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new j,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.lights=!1,this.setValues(t)}ds.prototype=Object.create(Rt.prototype);ds.prototype.constructor=ds;ds.prototype.isMeshDistanceMaterial=!0;ds.prototype.copy=function(t){return Rt.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this};function Ar(t,e){this.min=t!==void 0?t:new j(1/0,1/0,1/0),this.max=e!==void 0?e:new j(-1/0,-1/0,-1/0)}Object.assign(Ar.prototype,{isBox3:!0,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromArray:function(t){for(var e=1/0,n=1/0,i=1/0,r=-1/0,s=-1/0,a=-1/0,o=0,l=t.length;o<l;o+=3){var c=t[o],h=t[o+1],u=t[o+2];c<e&&(e=c),h<n&&(n=h),u<i&&(i=u),c>r&&(r=c),h>s&&(s=h),u>a&&(a=u)}return this.min.set(e,n,i),this.max.set(r,s,a),this},setFromBufferAttribute:function(t){for(var e=1/0,n=1/0,i=1/0,r=-1/0,s=-1/0,a=-1/0,o=0,l=t.count;o<l;o++){var c=t.getX(o),h=t.getY(o),u=t.getZ(o);c<e&&(e=c),h<n&&(n=h),u<i&&(i=u),c>r&&(r=c),h>s&&(s=h),u>a&&(a=u)}return this.min.set(e,n,i),this.max.set(r,s,a),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new j;return function(n,i){var r=t.copy(i).multiplyScalar(.5);return this.min.copy(n).sub(r),this.max.copy(n).add(r),this}}(),setFromObject:function(t){return this.makeEmpty(),this.expandByObject(t)},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(t){var e=t||new j;return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){var e=t||new j;return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},expandByObject:function(){var t,e,n,i=new j;function r(s){var a=s.geometry;if(a!==void 0){if(a.isGeometry){var o=a.vertices;for(e=0,n=o.length;e<n;e++)i.copy(o[e]),i.applyMatrix4(s.matrixWorld),t.expandByPoint(i)}else if(a.isBufferGeometry){var l=a.attributes.position;if(l!==void 0)for(e=0,n=l.count;e<n;e++)i.fromBufferAttribute(l,e).applyMatrix4(s.matrixWorld),t.expandByPoint(i)}}}return function(a){return t=this,a.updateMatrixWorld(!0),a.traverse(r),this}}(),containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){var n=e||new j;return n.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:function(){var t=new j;return function(n){return this.clampPoint(n.center,t),t.distanceToSquared(n.center)<=n.radius*n.radius}}(),intersectsPlane:function(t){var e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=t.constant&&n>=t.constant},intersectsTriangle:function(){var t=new j,e=new j,n=new j,i=new j,r=new j,s=new j,a=new j,o=new j,l=new j,c=new j;function h(u){var f,d;for(f=0,d=u.length-3;f<=d;f+=3){a.fromArray(u,f);var p=l.x*Math.abs(a.x)+l.y*Math.abs(a.y)+l.z*Math.abs(a.z),g=t.dot(a),v=e.dot(a),m=n.dot(a);if(Math.max(-Math.max(g,v,m),Math.min(g,v,m))>p)return!1}return!0}return function(f){if(this.isEmpty())return!1;this.getCenter(o),l.subVectors(this.max,o),t.subVectors(f.a,o),e.subVectors(f.b,o),n.subVectors(f.c,o),i.subVectors(e,t),r.subVectors(n,e),s.subVectors(t,n);var d=[0,-i.z,i.y,0,-r.z,r.y,0,-s.z,s.y,i.z,0,-i.x,r.z,0,-r.x,s.z,0,-s.x,-i.y,i.x,0,-r.y,r.x,0,-s.y,s.x,0];return!h(d)||(d=[1,0,0,0,1,0,0,0,1],!h(d))?!1:(c.crossVectors(i,r),d=[c.x,c.y,c.z],h(d))}}(),clampPoint:function(t,e){var n=e||new j;return n.copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new j;return function(n){var i=t.copy(n).clamp(this.min,this.max);return i.sub(n).length()}}(),getBoundingSphere:function(){var t=new j;return function(n){var i=n||new gi;return this.getCenter(i.center),i.radius=this.getSize(t).length()*.5,i}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(){var t=[new j,new j,new j,new j,new j,new j,new j,new j];return function(n){return this.isEmpty()?this:(t[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(n),t[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(n),t[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(n),t[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(n),t[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(n),t[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(n),t[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(n),t[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(n),this.setFromPoints(t),this)}}(),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}});function gi(t,e){this.center=t!==void 0?t:new j,this.radius=e!==void 0?e:0}Object.assign(gi.prototype,{set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(){var t=new Ar;return function(n,i){var r=this.center;i!==void 0?r.copy(i):t.setFromPoints(n).getCenter(r);for(var s=0,a=0,o=n.length;a<o;a++)s=Math.max(s,r.distanceToSquared(n[a]));return this.radius=Math.sqrt(s),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius},clampPoint:function(t,e){var n=this.center.distanceToSquared(t),i=e||new j;return i.copy(t),n>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i},getBoundingBox:function(t){var e=t||new Ar;return e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}});function di(t,e){this.normal=t!==void 0?t:new j(1,0,0),this.constant=e!==void 0?e:0}Object.assign(di.prototype,{set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(){var t=new j,e=new j;return function(i,r,s){var a=t.subVectors(s,r).cross(e.subVectors(i,r)).normalize();return this.setFromNormalAndCoplanarPoint(a,i),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){var n=e||new j;return n.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)},intersectLine:function(){var t=new j;return function(n,i){var r=i||new j,s=n.delta(t),a=this.normal.dot(s);if(a===0)return this.distanceToPoint(n.start)===0?r.copy(n.start):void 0;var o=-(n.start.dot(this.normal)+this.constant)/a;if(!(o<0||o>1))return r.copy(s).multiplyScalar(o).add(n.start)}}(),intersectsLine:function(t){var e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0},intersectsBox:function(t){return t.intersectsPlane(this)},intersectsSphere:function(t){return t.intersectsPlane(this)},coplanarPoint:function(t){var e=t||new j;return e.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var t=new j,e=new Yn;return function(i,r){var s=r||e.getNormalMatrix(i),a=this.coplanarPoint(t).applyMatrix4(i),o=this.normal.applyMatrix3(s).normalize();return this.constant=-a.dot(o),this}}(),translate:function(t){return this.constant-=t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}});function Mp(t,e,n,i,r,s){this.planes=[t!==void 0?t:new di,e!==void 0?e:new di,n!==void 0?n:new di,i!==void 0?i:new di,r!==void 0?r:new di,s!==void 0?s:new di]}Object.assign(Mp.prototype,{set:function(t,e,n,i,r,s){var a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(s),this},clone:function(){return new this.constructor().copy(this)},copy:function(t){for(var e=this.planes,n=0;n<6;n++)e[n].copy(t.planes[n]);return this},setFromMatrix:function(t){var e=this.planes,n=t.elements,i=n[0],r=n[1],s=n[2],a=n[3],o=n[4],l=n[5],c=n[6],h=n[7],u=n[8],f=n[9],d=n[10],p=n[11],g=n[12],v=n[13],m=n[14],y=n[15];return e[0].setComponents(a-i,h-o,p-u,y-g).normalize(),e[1].setComponents(a+i,h+o,p+u,y+g).normalize(),e[2].setComponents(a+r,h+l,p+f,y+v).normalize(),e[3].setComponents(a-r,h-l,p-f,y-v).normalize(),e[4].setComponents(a-s,h-c,p-d,y-m).normalize(),e[5].setComponents(a+s,h+c,p+d,y+m).normalize(),this},intersectsObject:function(){var t=new gi;return function(n){var i=n.geometry;return i.boundingSphere===null&&i.computeBoundingSphere(),t.copy(i.boundingSphere).applyMatrix4(n.matrixWorld),this.intersectsSphere(t)}}(),intersectsSprite:function(){var t=new gi;return function(n){return t.center.set(0,0,0),t.radius=.7071067811865476,t.applyMatrix4(n.matrixWorld),this.intersectsSphere(t)}}(),intersectsSphere:function(t){for(var e=this.planes,n=t.center,i=-t.radius,r=0;r<6;r++){var s=e[r].distanceToPoint(n);if(s<i)return!1}return!0},intersectsBox:function(){var t=new j,e=new j;return function(i){for(var r=this.planes,s=0;s<6;s++){var a=r[s];t.x=a.normal.x>0?i.min.x:i.max.x,e.x=a.normal.x>0?i.max.x:i.min.x,t.y=a.normal.y>0?i.min.y:i.max.y,e.y=a.normal.y>0?i.max.y:i.min.y,t.z=a.normal.z>0?i.min.z:i.max.z,e.z=a.normal.z>0?i.max.z:i.min.z;var o=a.distanceToPoint(t),l=a.distanceToPoint(e);if(o<0&&l<0)return!1}return!0}}(),containsPoint:function(t){for(var e=this.planes,n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}});function px(t,e,n){for(var i=new Mp,r=new xt,s=new qe,a=new qe(n,n),o=new j,l=new j,c=1,h=2,u=(c|h)+1,f=new Array(u),d=new Array(u),p={},g={0:Ta,1:hp,2:ml},v=[new j(1,0,0),new j(-1,0,0),new j(0,0,1),new j(0,0,-1),new j(0,1,0),new j(0,-1,0)],m=[new j(0,1,0),new j(0,1,0),new j(0,1,0),new j(0,1,0),new j(0,0,1),new j(0,0,-1)],y=[new Vt,new Vt,new Vt,new Vt,new Vt,new Vt],x=0;x!==u;++x){var _=(x&c)!==0,b=(x&h)!==0,w=new fs({depthPacking:KA,morphTargets:_,skinning:b});f[x]=w;var S=new ds({morphTargets:_,skinning:b});d[x]=S}var C=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=W0,this.render=function(E,N,k){if(C.enabled!==!1&&!(C.autoUpdate===!1&&C.needsUpdate===!1)&&E.length!==0){var F=t.context,V=t.state;V.disable(F.BLEND),V.buffers.color.setClear(1,1,1,1),V.buffers.depth.setTest(!0),V.setScissorTest(!1);for(var ee,R=0,T=E.length;R<T;R++){var H=E[R],O=H.shadow,B=H&&H.isPointLight;if(O===void 0){console.warn("THREE.WebGLShadowMap:",H,"has no shadow.");continue}var q=O.camera;if(s.copy(O.mapSize),s.min(a),B){var G=s.x,A=s.y;y[0].set(G*2,A,G,A),y[1].set(0,A,G,A),y[2].set(G*3,A,G,A),y[3].set(G,A,G,A),y[4].set(G*3,0,G,A),y[5].set(G,0,G,A),s.x*=4,s.y*=2}if(O.map===null){var U={minFilter:ii,magFilter:ii,format:Tr};O.map=new aa(s.x,s.y,U),O.map.texture.name=H.name+".shadowMap",q.updateProjectionMatrix()}O.isSpotLightShadow&&O.update(H);var J=O.map,$=O.matrix;l.setFromMatrixPosition(H.matrixWorld),q.position.copy(l),B?(ee=6,$.makeTranslation(-l.x,-l.y,-l.z)):(ee=1,o.setFromMatrixPosition(H.target.matrixWorld),q.lookAt(o),q.updateMatrixWorld(),$.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),$.multiply(q.projectionMatrix),$.multiply(q.matrixWorldInverse)),t.setRenderTarget(J),t.clear();for(var ie=0;ie<ee;ie++){if(B){o.copy(q.position),o.add(v[ie]),q.up.copy(m[ie]),q.lookAt(o),q.updateMatrixWorld();var re=y[ie];V.viewport(re)}r.multiplyMatrices(q.projectionMatrix,q.matrixWorldInverse),i.setFromMatrix(r),M(N,k,q,B)}}C.needsUpdate=!1}};function L(E,N,k,F,V,ee){var R=E.geometry,T=null,H=f,O=E.customDepthMaterial;if(k&&(H=d,O=E.customDistanceMaterial),O)T=O;else{var B=!1;N.morphTargets&&(R&&R.isBufferGeometry?B=R.morphAttributes&&R.morphAttributes.position&&R.morphAttributes.position.length>0:R&&R.isGeometry&&(B=R.morphTargets&&R.morphTargets.length>0)),E.isSkinnedMesh&&N.skinning===!1&&console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",E);var q=E.isSkinnedMesh&&N.skinning,G=0;B&&(G|=c),q&&(G|=h),T=H[G]}if(t.localClippingEnabled&&N.clipShadows===!0&&N.clippingPlanes.length!==0){var A=T.uuid,U=N.uuid,J=p[A];J===void 0&&(J={},p[A]=J);var $=J[U];$===void 0&&($=T.clone(),J[U]=$),T=$}return T.visible=N.visible,T.wireframe=N.wireframe,T.side=N.shadowSide!=null?N.shadowSide:g[N.side],T.clipShadows=N.clipShadows,T.clippingPlanes=N.clippingPlanes,T.clipIntersection=N.clipIntersection,T.wireframeLinewidth=N.wireframeLinewidth,T.linewidth=N.linewidth,k&&T.isMeshDistanceMaterial&&(T.referencePosition.copy(F),T.nearDistance=V,T.farDistance=ee),T}function M(E,N,k,F){if(E.visible!==!1){var V=E.layers.test(N.layers);if(V&&(E.isMesh||E.isLine||E.isPoints)&&E.castShadow&&(!E.frustumCulled||i.intersectsObject(E))){E.modelViewMatrix.multiplyMatrices(k.matrixWorldInverse,E.matrixWorld);var ee=e.update(E),R=E.material;if(Array.isArray(R))for(var T=ee.groups,H=0,O=T.length;H<O;H++){var B=T[H],q=R[B.materialIndex];if(q&&q.visible){var G=L(E,q,F,l,k.near,k.far);t.renderBufferDirect(k,null,ee,G,E,B)}}else if(R.visible){var G=L(E,R,F,l,k.near,k.far);t.renderBufferDirect(k,null,ee,G,E,null)}}for(var A=E.children,U=0,J=A.length;U<J;U++)M(A[U],N,k,F)}}}function RP(t){var e={};function n(o,l){var c=o.array,h=o.dynamic?t.DYNAMIC_DRAW:t.STATIC_DRAW,u=t.createBuffer();t.bindBuffer(l,u),t.bufferData(l,c,h),o.onUploadCallback();var f=t.FLOAT;return c instanceof Float32Array?f=t.FLOAT:c instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):c instanceof Uint16Array?f=t.UNSIGNED_SHORT:c instanceof Int16Array?f=t.SHORT:c instanceof Uint32Array?f=t.UNSIGNED_INT:c instanceof Int32Array?f=t.INT:c instanceof Int8Array?f=t.BYTE:c instanceof Uint8Array&&(f=t.UNSIGNED_BYTE),{buffer:u,type:f,bytesPerElement:c.BYTES_PER_ELEMENT,version:o.version}}function i(o,l,c){var h=l.array,u=l.updateRange;t.bindBuffer(c,o),l.dynamic===!1?t.bufferData(c,h,t.STATIC_DRAW):u.count===-1?t.bufferSubData(c,0,h):u.count===0?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(t.bufferSubData(c,u.offset*h.BYTES_PER_ELEMENT,h.subarray(u.offset,u.offset+u.count)),u.count=-1)}function r(o){return o.isInterleavedBufferAttribute&&(o=o.data),e[o.uuid]}function s(o){o.isInterleavedBufferAttribute&&(o=o.data);var l=e[o.uuid];l&&(t.deleteBuffer(l.buffer),delete e[o.uuid])}function a(o,l){o.isInterleavedBufferAttribute&&(o=o.data);var c=e[o.uuid];c===void 0?e[o.uuid]=n(o,l):c.version<o.version&&(i(c.buffer,o,l),c.version=o.version)}return{get:r,remove:s,update:a}}function _s(t,e,n,i){this._x=t||0,this._y=e||0,this._z=n||0,this._order=i||_s.DefaultOrder}_s.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];_s.DefaultOrder="XYZ";Object.defineProperties(_s.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(t){this._order=t,this.onChangeCallback()}}});Object.assign(_s.prototype,{isEuler:!0,set:function(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._order=i||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,e,n){var i=wt.clamp,r=t.elements,s=r[0],a=r[4],o=r[8],l=r[1],c=r[5],h=r[9],u=r[2],f=r[6],d=r[10];return e=e||this._order,e==="XYZ"?(this._y=Math.asin(i(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(f,c),this._z=0)):e==="YXZ"?(this._x=Math.asin(-i(h,-1,1)),Math.abs(h)<.99999?(this._y=Math.atan2(o,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,s),this._z=0)):e==="ZXY"?(this._x=Math.asin(i(f,-1,1)),Math.abs(f)<.99999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(l,s))):e==="ZYX"?(this._y=Math.asin(-i(u,-1,1)),Math.abs(u)<.99999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-a,c))):e==="YZX"?(this._z=Math.asin(i(l,-1,1)),Math.abs(l)<.99999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(o,d))):e==="XZY"?(this._z=Math.asin(-i(a,-1,1)),Math.abs(a)<.99999?(this._x=Math.atan2(f,c),this._y=Math.atan2(o,s)):(this._x=Math.atan2(-h,d),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,n!==!1&&this.onChangeCallback(),this},setFromQuaternion:function(){var t=new xt;return function(n,i,r){return t.makeRotationFromQuaternion(n),this.setFromRotationMatrix(t,i,r)}}(),setFromVector3:function(t,e){return this.set(t.x,t.y,t.z,e||this._order)},reorder:function(){var t=new ln;return function(n){return t.setFromEuler(this),this.setFromQuaternion(t,n)}}(),equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this.onChangeCallback(),this},toArray:function(t,e){return t===void 0&&(t=[]),e===void 0&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new j(this._x,this._y,this._z)},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}});function mx(){this.mask=1}Object.assign(mx.prototype,{set:function(t){this.mask=1<<t|0},enable:function(t){this.mask|=1<<t|0},toggle:function(t){this.mask^=1<<t|0},disable:function(t){this.mask&=~(1<<t|0)},test:function(t){return(this.mask&t.mask)!==0}});var PP=0;function nt(){Object.defineProperty(this,"id",{value:PP++}),this.uuid=wt.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=nt.DefaultUp.clone();var t=new j,e=new _s,n=new ln,i=new j(1,1,1);function r(){n.setFromEuler(e,!1)}function s(){e.setFromQuaternion(n,void 0,!1)}e.onChange(r),n.onChange(s),Object.defineProperties(this,{position:{enumerable:!0,value:t},rotation:{enumerable:!0,value:e},quaternion:{enumerable:!0,value:n},scale:{enumerable:!0,value:i},modelViewMatrix:{value:new xt},normalMatrix:{value:new Yn}}),this.matrix=new xt,this.matrixWorld=new xt,this.matrixAutoUpdate=nt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new mx,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}nt.DefaultUp=new j(0,1,0);nt.DefaultMatrixAutoUpdate=!0;nt.prototype=Object.assign(Object.create(Ir.prototype),{constructor:nt,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(t){this.matrix.multiplyMatrices(t,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(){var t=new ln;return function(n,i){return t.setFromAxisAngle(n,i),this.quaternion.multiply(t),this}}(),rotateOnWorldAxis:function(){var t=new ln;return function(n,i){return t.setFromAxisAngle(n,i),this.quaternion.premultiply(t),this}}(),rotateX:function(){var t=new j(1,0,0);return function(n){return this.rotateOnAxis(t,n)}}(),rotateY:function(){var t=new j(0,1,0);return function(n){return this.rotateOnAxis(t,n)}}(),rotateZ:function(){var t=new j(0,0,1);return function(n){return this.rotateOnAxis(t,n)}}(),translateOnAxis:function(){var t=new j;return function(n,i){return t.copy(n).applyQuaternion(this.quaternion),this.position.add(t.multiplyScalar(i)),this}}(),translateX:function(){var t=new j(1,0,0);return function(n){return this.translateOnAxis(t,n)}}(),translateY:function(){var t=new j(0,1,0);return function(n){return this.translateOnAxis(t,n)}}(),translateZ:function(){var t=new j(0,0,1);return function(n){return this.translateOnAxis(t,n)}}(),localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var t=new xt;return function(n){return n.applyMatrix4(t.getInverse(this.matrixWorld))}}(),lookAt:function(){var t=new xt,e=new j;return function(i,r,s){i.isVector3?e.copy(i):e.set(i,r,s),this.isCamera?t.lookAt(this.position,e,this.up):t.lookAt(e,this.position,this.up),this.quaternion.setFromRotationMatrix(t)}}(),add:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,t.dispatchEvent({type:"added"}),this.children.push(t)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var n=this.children.indexOf(t);return n!==-1&&(t.parent=null,t.dispatchEvent({type:"removed"}),this.children.splice(n,1)),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(var n=0,i=this.children.length;n<i;n++){var r=this.children[n],s=r.getObjectByProperty(t,e);if(s!==void 0)return s}},getWorldPosition:function(t){var e=t||new j;return this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var t=new j,e=new j;return function(i){var r=i||new ln;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,r,e),r}}(),getWorldRotation:function(){var t=new ln;return function(n){var i=n||new _s;return this.getWorldQuaternion(t),i.setFromQuaternion(t,this.rotation.order,!1)}}(),getWorldScale:function(){var t=new j,e=new ln;return function(i){var r=i||new j;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,e,r),r}}(),getWorldDirection:function(){var t=new ln;return function(n){var i=n||new j;return this.getWorldQuaternion(t),i.set(0,0,1).applyQuaternion(t)}}(),raycast:function(){},traverse:function(t){t(this);for(var e=this.children,n=0,i=e.length;n<i;n++)e[n].traverse(t)},traverseVisible:function(t){if(this.visible!==!1){t(this);for(var e=this.children,n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}},traverseAncestors:function(t){var e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=this.children,n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)},toJSON:function(t){var e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.matrix=this.matrix.toArray();function r(v,m){return v[m.uuid]===void 0&&(v[m.uuid]=m.toJSON(t)),m.uuid}if(this.geometry!==void 0){i.geometry=r(t.geometries,this.geometry);var s=this.geometry.parameters;if(s!==void 0&&s.shapes!==void 0){var a=s.shapes;if(Array.isArray(a))for(var o=0,l=a.length;o<l;o++){var c=a[o];r(t.shapes,c)}else r(t.shapes,a)}}if(this.material!==void 0)if(Array.isArray(this.material)){for(var h=[],o=0,l=this.material.length;o<l;o++)h.push(r(t.materials,this.material[o]));i.material=h}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(var o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(t).object)}if(e){var u=g(t.geometries),f=g(t.materials),d=g(t.textures),p=g(t.images),a=g(t.shapes);u.length>0&&(n.geometries=u),f.length>0&&(n.materials=f),d.length>0&&(n.textures=d),p.length>0&&(n.images=p),a.length>0&&(n.shapes=a)}return n.object=i,n;function g(v){var m=[];for(var y in v){var x=v[y];delete x.metadata,m.push(x)}return m}},clone:function(t){return new this.constructor().copy(this,t)},copy:function(t,e){if(e===void 0&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(var n=0;n<t.children.length;n++){var i=t.children[n];this.add(i.clone())}return this}});function er(){nt.call(this),this.type="Camera",this.matrixWorldInverse=new xt,this.projectionMatrix=new xt}er.prototype=Object.assign(Object.create(nt.prototype),{constructor:er,isCamera:!0,copy:function(t,e){return nt.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this},getWorldDirection:function(){var t=new ln;return function(n){var i=n||new j;return this.getWorldQuaternion(t),i.set(0,0,-1).applyQuaternion(t)}}(),updateMatrixWorld:function(t){nt.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return new this.constructor().copy(this)}});function Ao(t,e,n,i,r,s){er.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r!==void 0?r:.1,this.far=s!==void 0?s:2e3,this.updateProjectionMatrix()}Ao.prototype=Object.assign(Object.create(er.prototype),{constructor:Ao,isOrthographicCamera:!0,copy:function(t,e){return er.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this},setViewOffset:function(t,e,n,i,r,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2,r=n-t,s=n+t,a=i+e,o=i-e;if(this.view!==null&&this.view.enabled){var l=this.zoom/(this.view.width/this.view.fullWidth),c=this.zoom/(this.view.height/this.view.fullHeight),h=(this.right-this.left)/this.view.width,u=(this.top-this.bottom)/this.view.height;r+=h*(this.view.offsetX/l),s=r+h*(this.view.width/l),a-=u*(this.view.offsetY/c),o=a-u*(this.view.height/c)}this.projectionMatrix.makeOrthographic(r,s,a,o,this.near,this.far)},toJSON:function(t){var e=nt.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}});function br(t,e,n,i,r,s){this.a=t,this.b=e,this.c=n,this.normal=i&&i.isVector3?i:new j,this.vertexNormals=Array.isArray(i)?i:[],this.color=r&&r.isColor?r:new dt,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=s!==void 0?s:0}Object.assign(br.prototype,{clone:function(){return new this.constructor().copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(var e=0,n=t.vertexNormals.length;e<n;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(var e=0,n=t.vertexColors.length;e<n;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}});var LP=0;function vt(){Object.defineProperty(this,"id",{value:LP+=2}),this.uuid=wt.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}vt.prototype=Object.assign(Object.create(Ir.prototype),{constructor:vt,isGeometry:!0,applyMatrix:function(t){for(var e=new Yn().getNormalMatrix(t),n=0,i=this.vertices.length;n<i;n++){var r=this.vertices[n];r.applyMatrix4(t)}for(var n=0,i=this.faces.length;n<i;n++){var s=this.faces[n];s.normal.applyMatrix3(e).normalize();for(var a=0,o=s.vertexNormals.length;a<o;a++)s.vertexNormals[a].applyMatrix3(e).normalize()}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var t=new xt;return function(n){return t.makeRotationX(n),this.applyMatrix(t),this}}(),rotateY:function(){var t=new xt;return function(n){return t.makeRotationY(n),this.applyMatrix(t),this}}(),rotateZ:function(){var t=new xt;return function(n){return t.makeRotationZ(n),this.applyMatrix(t),this}}(),translate:function(){var t=new xt;return function(n,i,r){return t.makeTranslation(n,i,r),this.applyMatrix(t),this}}(),scale:function(){var t=new xt;return function(n,i,r){return t.makeScale(n,i,r),this.applyMatrix(t),this}}(),lookAt:function(){var t=new nt;return function(n){t.lookAt(n),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),fromBufferGeometry:function(t){var e=this,n=t.index!==null?t.index.array:void 0,i=t.attributes,r=i.position.array,s=i.normal!==void 0?i.normal.array:void 0,a=i.color!==void 0?i.color.array:void 0,o=i.uv!==void 0?i.uv.array:void 0,l=i.uv2!==void 0?i.uv2.array:void 0;l!==void 0&&(this.faceVertexUvs[1]=[]);for(var c=[],h=[],u=[],f=0,d=0;f<r.length;f+=3,d+=2)e.vertices.push(new j(r[f],r[f+1],r[f+2])),s!==void 0&&c.push(new j(s[f],s[f+1],s[f+2])),a!==void 0&&e.colors.push(new dt(a[f],a[f+1],a[f+2])),o!==void 0&&h.push(new qe(o[d],o[d+1])),l!==void 0&&u.push(new qe(l[d],l[d+1]));function p(_,b,w,S){var C=s!==void 0?[c[_].clone(),c[b].clone(),c[w].clone()]:[],L=a!==void 0?[e.colors[_].clone(),e.colors[b].clone(),e.colors[w].clone()]:[],M=new br(_,b,w,C,L,S);e.faces.push(M),o!==void 0&&e.faceVertexUvs[0].push([h[_].clone(),h[b].clone(),h[w].clone()]),l!==void 0&&e.faceVertexUvs[1].push([u[_].clone(),u[b].clone(),u[w].clone()])}var g=t.groups;if(g.length>0)for(var f=0;f<g.length;f++)for(var v=g[f],m=v.start,y=v.count,d=m,x=m+y;d<x;d+=3)n!==void 0?p(n[d],n[d+1],n[d+2],v.materialIndex):p(d,d+1,d+2,v.materialIndex);else if(n!==void 0)for(var f=0;f<n.length;f+=3)p(n[f],n[f+1],n[f+2]);else for(var f=0;f<r.length/3;f+=3)p(f,f+1,f+2);return this.computeFaceNormals(),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var t=this.boundingBox.getCenter().negate();return this.translate(t.x,t.y,t.z),t},normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,e=this.boundingSphere.radius,n=e===0?1:1/e,i=new xt;return i.set(n,0,0,-n*t.x,0,n,0,-n*t.y,0,0,n,-n*t.z,0,0,0,1),this.applyMatrix(i),this},computeFaceNormals:function(){for(var t=new j,e=new j,n=0,i=this.faces.length;n<i;n++){var r=this.faces[n],s=this.vertices[r.a],a=this.vertices[r.b],o=this.vertices[r.c];t.subVectors(o,a),e.subVectors(s,a),t.cross(e),t.normalize(),r.normal.copy(t)}},computeVertexNormals:function(t){t===void 0&&(t=!0);var e,n,i,r,s,a;for(a=new Array(this.vertices.length),e=0,n=this.vertices.length;e<n;e++)a[e]=new j;if(t){var o,l,c,h=new j,u=new j;for(i=0,r=this.faces.length;i<r;i++)s=this.faces[i],o=this.vertices[s.a],l=this.vertices[s.b],c=this.vertices[s.c],h.subVectors(c,l),u.subVectors(o,l),h.cross(u),a[s.a].add(h),a[s.b].add(h),a[s.c].add(h)}else for(this.computeFaceNormals(),i=0,r=this.faces.length;i<r;i++)s=this.faces[i],a[s.a].add(s.normal),a[s.b].add(s.normal),a[s.c].add(s.normal);for(e=0,n=this.vertices.length;e<n;e++)a[e].normalize();for(i=0,r=this.faces.length;i<r;i++){s=this.faces[i];var f=s.vertexNormals;f.length===3?(f[0].copy(a[s.a]),f[1].copy(a[s.b]),f[2].copy(a[s.c])):(f[0]=a[s.a].clone(),f[1]=a[s.b].clone(),f[2]=a[s.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var t,e,n;for(this.computeFaceNormals(),t=0,e=this.faces.length;t<e;t++){n=this.faces[t];var i=n.vertexNormals;i.length===3?(i[0].copy(n.normal),i[1].copy(n.normal),i[2].copy(n.normal)):(i[0]=n.normal.clone(),i[1]=n.normal.clone(),i[2]=n.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var t,e,n,i,r;for(n=0,i=this.faces.length;n<i;n++)for(r=this.faces[n],r.__originalFaceNormal?r.__originalFaceNormal.copy(r.normal):r.__originalFaceNormal=r.normal.clone(),r.__originalVertexNormals||(r.__originalVertexNormals=[]),t=0,e=r.vertexNormals.length;t<e;t++)r.__originalVertexNormals[t]?r.__originalVertexNormals[t].copy(r.vertexNormals[t]):r.__originalVertexNormals[t]=r.vertexNormals[t].clone();var s=new vt;for(s.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];var a=this.morphNormals[t].faceNormals,o=this.morphNormals[t].vertexNormals,c,h;for(n=0,i=this.faces.length;n<i;n++)c=new j,h={a:new j,b:new j,c:new j},a.push(c),o.push(h)}var l=this.morphNormals[t];s.vertices=this.morphTargets[t].vertices,s.computeFaceNormals(),s.computeVertexNormals();var c,h;for(n=0,i=this.faces.length;n<i;n++)r=this.faces[n],c=l.faceNormals[n],h=l.vertexNormals[n],c.copy(r.normal),h.a.copy(r.vertexNormals[0]),h.b.copy(r.vertexNormals[1]),h.c.copy(r.vertexNormals[2])}for(n=0,i=this.faces.length;n<i;n++)r=this.faces[n],r.normal=r.__originalFaceNormal,r.vertexNormals=r.__originalVertexNormals},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new Ar),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new gi),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,n){if(!(t&&t.isGeometry)){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t);return}var i,r=this.vertices.length,s=this.vertices,a=t.vertices,o=this.faces,l=t.faces,c=this.faceVertexUvs[0],h=t.faceVertexUvs[0],u=this.colors,f=t.colors;n===void 0&&(n=0),e!==void 0&&(i=new Yn().getNormalMatrix(e));for(var d=0,p=a.length;d<p;d++){var g=a[d],v=g.clone();e!==void 0&&v.applyMatrix4(e),s.push(v)}for(var d=0,p=f.length;d<p;d++)u.push(f[d].clone());for(d=0,p=l.length;d<p;d++){var m=l[d],y,x,_,b=m.vertexNormals,w=m.vertexColors;y=new br(m.a+r,m.b+r,m.c+r),y.normal.copy(m.normal),i!==void 0&&y.normal.applyMatrix3(i).normalize();for(var S=0,C=b.length;S<C;S++)x=b[S].clone(),i!==void 0&&x.applyMatrix3(i).normalize(),y.vertexNormals.push(x);y.color.copy(m.color);for(var S=0,C=w.length;S<C;S++)_=w[S],y.vertexColors.push(_.clone());y.materialIndex=m.materialIndex+n,o.push(y)}for(d=0,p=h.length;d<p;d++){var L=h[d],M=[];if(L!==void 0){for(var S=0,C=L.length;S<C;S++)M.push(L[S].clone());c.push(M)}}},mergeMesh:function(t){if(!(t&&t.isMesh)){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t);return}t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)},mergeVertices:function(){var t={},e=[],n=[],i,r,s=4,a=Math.pow(10,s),o,l,c,h,u,f;for(o=0,l=this.vertices.length;o<l;o++)i=this.vertices[o],r=Math.round(i.x*a)+"_"+Math.round(i.y*a)+"_"+Math.round(i.z*a),t[r]===void 0?(t[r]=o,e.push(this.vertices[o]),n[o]=e.length-1):n[o]=n[t[r]];var d=[];for(o=0,l=this.faces.length;o<l;o++){c=this.faces[o],c.a=n[c.a],c.b=n[c.b],c.c=n[c.c],h=[c.a,c.b,c.c];for(var p=0;p<3;p++)if(h[p]===h[(p+1)%3]){d.push(o);break}}for(o=d.length-1;o>=0;o--){var g=d[o];for(this.faces.splice(g,1),u=0,f=this.faceVertexUvs.length;u<f;u++)this.faceVertexUvs[u].splice(g,1)}var v=this.vertices.length-e.length;return this.vertices=e,v},setFromPoints:function(t){this.vertices=[];for(var e=0,n=t.length;e<n;e++){var i=t[e];this.vertices.push(new j(i.x,i.y,i.z||0))}return this},sortFacesByMaterialIndex:function(){for(var t=this.faces,e=t.length,n=0;n<e;n++)t[n]._id=n;function i(c,h){return c.materialIndex-h.materialIndex}t.sort(i);var r=this.faceVertexUvs[0],s=this.faceVertexUvs[1],a,o;r&&r.length===e&&(a=[]),s&&s.length===e&&(o=[]);for(var n=0;n<e;n++){var l=t[n]._id;a&&a.push(r[l]),o&&o.push(s[l])}a&&(this.faceVertexUvs[0]=a),o&&(this.faceVertexUvs[1]=o)},toJSON:function(){var t={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),this.parameters!==void 0){var e=this.parameters;for(var n in e)e[n]!==void 0&&(t[n]=e[n]);return t}for(var i=[],r=0;r<this.vertices.length;r++){var s=this.vertices[r];i.push(s.x,s.y,s.z)}for(var a=[],o=[],l={},c=[],h={},u=[],f={},r=0;r<this.faces.length;r++){var d=this.faces[r],p=!0,g=!1,v=this.faceVertexUvs[0][r]!==void 0,m=d.normal.length()>0,y=d.vertexNormals.length>0,x=d.color.r!==1||d.color.g!==1||d.color.b!==1,_=d.vertexColors.length>0,b=0;if(b=L(b,0,0),b=L(b,1,p),b=L(b,2,g),b=L(b,3,v),b=L(b,4,m),b=L(b,5,y),b=L(b,6,x),b=L(b,7,_),a.push(b),a.push(d.a,d.b,d.c),a.push(d.materialIndex),v){var w=this.faceVertexUvs[0][r];a.push(N(w[0]),N(w[1]),N(w[2]))}if(m&&a.push(M(d.normal)),y){var S=d.vertexNormals;a.push(M(S[0]),M(S[1]),M(S[2]))}if(x&&a.push(E(d.color)),_){var C=d.vertexColors;a.push(E(C[0]),E(C[1]),E(C[2]))}}function L(k,F,V){return V?k|1<<F:k&~(1<<F)}function M(k){var F=k.x.toString()+k.y.toString()+k.z.toString();return l[F]!==void 0||(l[F]=o.length/3,o.push(k.x,k.y,k.z)),l[F]}function E(k){var F=k.r.toString()+k.g.toString()+k.b.toString();return h[F]!==void 0||(h[F]=c.length,c.push(k.getHex())),h[F]}function N(k){var F=k.x.toString()+k.y.toString();return f[F]!==void 0||(f[F]=u.length/2,u.push(k.x,k.y)),f[F]}return t.data={},t.data.vertices=i,t.data.normals=o,c.length>0&&(t.data.colors=c),u.length>0&&(t.data.uvs=[u]),t.data.faces=a,t},clone:function(){return new vt().copy(this)},copy:function(t){var e,n,i,r,s,a;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var o=t.vertices;for(e=0,n=o.length;e<n;e++)this.vertices.push(o[e].clone());var l=t.colors;for(e=0,n=l.length;e<n;e++)this.colors.push(l[e].clone());var c=t.faces;for(e=0,n=c.length;e<n;e++)this.faces.push(c[e].clone());for(e=0,n=t.faceVertexUvs.length;e<n;e++){var h=t.faceVertexUvs[e];for(this.faceVertexUvs[e]===void 0&&(this.faceVertexUvs[e]=[]),i=0,r=h.length;i<r;i++){var u=h[i],f=[];for(s=0,a=u.length;s<a;s++){var d=u[s];f.push(d.clone())}this.faceVertexUvs[e].push(f)}}var p=t.morphTargets;for(e=0,n=p.length;e<n;e++){var g={};if(g.name=p[e].name,p[e].vertices!==void 0)for(g.vertices=[],i=0,r=p[e].vertices.length;i<r;i++)g.vertices.push(p[e].vertices[i].clone());if(p[e].normals!==void 0)for(g.normals=[],i=0,r=p[e].normals.length;i<r;i++)g.normals.push(p[e].normals[i].clone());this.morphTargets.push(g)}var v=t.morphNormals;for(e=0,n=v.length;e<n;e++){var m={};if(v[e].vertexNormals!==void 0)for(m.vertexNormals=[],i=0,r=v[e].vertexNormals.length;i<r;i++){var y=v[e].vertexNormals[i],x={};x.a=y.a.clone(),x.b=y.b.clone(),x.c=y.c.clone(),m.vertexNormals.push(x)}if(v[e].faceNormals!==void 0)for(m.faceNormals=[],i=0,r=v[e].faceNormals.length;i<r;i++)m.faceNormals.push(v[e].faceNormals[i].clone());this.morphNormals.push(m)}var _=t.skinWeights;for(e=0,n=_.length;e<n;e++)this.skinWeights.push(_[e].clone());var b=t.skinIndices;for(e=0,n=b.length;e<n;e++)this.skinIndices.push(b[e].clone());var w=t.lineDistances;for(e=0,n=w.length;e<n;e++)this.lineDistances.push(w[e]);var S=t.boundingBox;S!==null&&(this.boundingBox=S.clone());var C=t.boundingSphere;return C!==null&&(this.boundingSphere=C.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function Ct(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.uuid=wt.generateUUID(),this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n===!0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}Object.defineProperty(Ct.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});Object.assign(Ct.prototype,{isBufferAttribute:!0,setArray:function(t){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=t!==void 0?t.length/this.itemSize:0,this.array=t},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.dynamic=t.dynamic,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(var i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){for(var e=this.array,n=0,i=0,r=t.length;i<r;i++){var s=t[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),s=new dt),e[n++]=s.r,e[n++]=s.g,e[n++]=s.b}return this},copyIndicesArray:function(t){for(var e=this.array,n=0,i=0,r=t.length;i<r;i++){var s=t[i];e[n++]=s.a,e[n++]=s.b,e[n++]=s.c}return this},copyVector2sArray:function(t){for(var e=this.array,n=0,i=0,r=t.length;i<r;i++){var s=t[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),s=new qe),e[n++]=s.x,e[n++]=s.y}return this},copyVector3sArray:function(t){for(var e=this.array,n=0,i=0,r=t.length;i<r;i++){var s=t[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),s=new j),e[n++]=s.x,e[n++]=s.y,e[n++]=s.z}return this},copyVector4sArray:function(t){for(var e=this.array,n=0,i=0,r=t.length;i<r;i++){var s=t[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),s=new Vt),e[n++]=s.x,e[n++]=s.y,e[n++]=s.z,e[n++]=s.w}return this},set:function(t,e){return e===void 0&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}});function Nf(t,e,n){Ct.call(this,new Int8Array(t),e,n)}Nf.prototype=Object.create(Ct.prototype);Nf.prototype.constructor=Nf;function Bf(t,e,n){Ct.call(this,new Uint8Array(t),e,n)}Bf.prototype=Object.create(Ct.prototype);Bf.prototype.constructor=Bf;function Uf(t,e,n){Ct.call(this,new Uint8ClampedArray(t),e,n)}Uf.prototype=Object.create(Ct.prototype);Uf.prototype.constructor=Uf;function Ff(t,e,n){Ct.call(this,new Int16Array(t),e,n)}Ff.prototype=Object.create(Ct.prototype);Ff.prototype.constructor=Ff;function Co(t,e,n){Ct.call(this,new Uint16Array(t),e,n)}Co.prototype=Object.create(Ct.prototype);Co.prototype.constructor=Co;function Of(t,e,n){Ct.call(this,new Int32Array(t),e,n)}Of.prototype=Object.create(Ct.prototype);Of.prototype.constructor=Of;function Ro(t,e,n){Ct.call(this,new Uint32Array(t),e,n)}Ro.prototype=Object.create(Ct.prototype);Ro.prototype.constructor=Ro;function Qe(t,e,n){Ct.call(this,new Float32Array(t),e,n)}Qe.prototype=Object.create(Ct.prototype);Qe.prototype.constructor=Qe;function zf(t,e,n){Ct.call(this,new Float64Array(t),e,n)}zf.prototype=Object.create(Ct.prototype);zf.prototype.constructor=zf;function vx(){this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}Object.assign(vx.prototype,{computeGroups:function(t){for(var e,n=[],i=void 0,r=t.faces,s=0;s<r.length;s++){var a=r[s];a.materialIndex!==i&&(i=a.materialIndex,e!==void 0&&(e.count=s*3-e.start,n.push(e)),e={start:s*3,materialIndex:i})}e!==void 0&&(e.count=s*3-e.start,n.push(e)),this.groups=n},fromGeometry:function(t){var e=t.faces,n=t.vertices,i=t.faceVertexUvs,r=i[0]&&i[0].length>0,s=i[1]&&i[1].length>0,a=t.morphTargets,o=a.length,l;if(o>0){l=[];for(var c=0;c<o;c++)l[c]=[];this.morphTargets.position=l}var h=t.morphNormals,u=h.length,f;if(u>0){f=[];for(var c=0;c<u;c++)f[c]=[];this.morphTargets.normal=f}for(var d=t.skinIndices,p=t.skinWeights,g=d.length===n.length,v=p.length===n.length,c=0;c<e.length;c++){var m=e[c];this.vertices.push(n[m.a],n[m.b],n[m.c]);var y=m.vertexNormals;if(y.length===3)this.normals.push(y[0],y[1],y[2]);else{var x=m.normal;this.normals.push(x,x,x)}var _=m.vertexColors;if(_.length===3)this.colors.push(_[0],_[1],_[2]);else{var b=m.color;this.colors.push(b,b,b)}if(r===!0){var w=i[0][c];w!==void 0?this.uvs.push(w[0],w[1],w[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",c),this.uvs.push(new qe,new qe,new qe))}if(s===!0){var w=i[1][c];w!==void 0?this.uvs2.push(w[0],w[1],w[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",c),this.uvs2.push(new qe,new qe,new qe))}for(var S=0;S<o;S++){var C=a[S].vertices;l[S].push(C[m.a],C[m.b],C[m.c])}for(var S=0;S<u;S++){var L=h[S].vertexNormals[c];f[S].push(L.a,L.b,L.c)}g&&this.skinIndices.push(d[m.a],d[m.b],d[m.c]),v&&this.skinWeights.push(p[m.a],p[m.b],p[m.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this}});function Gf(t){if(t.length===0)return-1/0;for(var e=t[0],n=1,i=t.length;n<i;++n)t[n]>e&&(e=t[n]);return e}var IP=1;function ot(){Object.defineProperty(this,"id",{value:IP+=2}),this.uuid=wt.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0}}ot.prototype=Object.assign(Object.create(Ir.prototype),{constructor:ot,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(Gf(t)>65535?Ro:Co)(t,1):this.index=t},addAttribute:function(t,e){if(!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)){console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.addAttribute(t,new Ct(arguments[1],arguments[2]));return}if(t==="index"){console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e);return}return this.attributes[t]=e,this},getAttribute:function(t){return this.attributes[t]},removeAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,n){this.groups.push({start:t,count:e,materialIndex:n!==void 0?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix:function(t){var e=this.attributes.position;e!==void 0&&(t.applyToBufferAttribute(e),e.needsUpdate=!0);var n=this.attributes.normal;if(n!==void 0){var i=new Yn().getNormalMatrix(t);i.applyToBufferAttribute(n),n.needsUpdate=!0}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this},rotateX:function(){var t=new xt;return function(n){return t.makeRotationX(n),this.applyMatrix(t),this}}(),rotateY:function(){var t=new xt;return function(n){return t.makeRotationY(n),this.applyMatrix(t),this}}(),rotateZ:function(){var t=new xt;return function(n){return t.makeRotationZ(n),this.applyMatrix(t),this}}(),translate:function(){var t=new xt;return function(n,i,r){return t.makeTranslation(n,i,r),this.applyMatrix(t),this}}(),scale:function(){var t=new xt;return function(n,i,r){return t.makeScale(n,i,r),this.applyMatrix(t),this}}(),lookAt:function(){var t=new nt;return function(n){t.lookAt(n),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),center:function(){this.computeBoundingBox();var t=this.boundingBox.getCenter().negate();return this.translate(t.x,t.y,t.z),t},setFromObject:function(t){var e=t.geometry;if(t.isPoints||t.isLine){var n=new Qe(e.vertices.length*3,3),i=new Qe(e.colors.length*3,3);if(this.addAttribute("position",n.copyVector3sArray(e.vertices)),this.addAttribute("color",i.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){var r=new Qe(e.lineDistances.length,1);this.addAttribute("lineDistance",r.copyArray(e.lineDistances))}e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){for(var e=[],n=0,i=t.length;n<i;n++){var r=t[n];e.push(r.x,r.y,r.z||0)}return this.addAttribute("position",new Qe(e,3)),this},updateFromObject:function(t){var e=t.geometry;if(t.isMesh){var n=e.__directGeometry;if(e.elementsNeedUpdate===!0&&(n=void 0,e.elementsNeedUpdate=!1),n===void 0)return this.fromGeometry(e);n.verticesNeedUpdate=e.verticesNeedUpdate,n.normalsNeedUpdate=e.normalsNeedUpdate,n.colorsNeedUpdate=e.colorsNeedUpdate,n.uvsNeedUpdate=e.uvsNeedUpdate,n.groupsNeedUpdate=e.groupsNeedUpdate,e.verticesNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.groupsNeedUpdate=!1,e=n}var i;return e.verticesNeedUpdate===!0&&(i=this.attributes.position,i!==void 0&&(i.copyVector3sArray(e.vertices),i.needsUpdate=!0),e.verticesNeedUpdate=!1),e.normalsNeedUpdate===!0&&(i=this.attributes.normal,i!==void 0&&(i.copyVector3sArray(e.normals),i.needsUpdate=!0),e.normalsNeedUpdate=!1),e.colorsNeedUpdate===!0&&(i=this.attributes.color,i!==void 0&&(i.copyColorsArray(e.colors),i.needsUpdate=!0),e.colorsNeedUpdate=!1),e.uvsNeedUpdate&&(i=this.attributes.uv,i!==void 0&&(i.copyVector2sArray(e.uvs),i.needsUpdate=!0),e.uvsNeedUpdate=!1),e.lineDistancesNeedUpdate&&(i=this.attributes.lineDistance,i!==void 0&&(i.copyArray(e.lineDistances),i.needsUpdate=!0),e.lineDistancesNeedUpdate=!1),e.groupsNeedUpdate&&(e.computeGroups(t.geometry),this.groups=e.groups,e.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=new vx().fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){var e=new Float32Array(t.vertices.length*3);if(this.addAttribute("position",new Ct(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){var n=new Float32Array(t.normals.length*3);this.addAttribute("normal",new Ct(n,3).copyVector3sArray(t.normals))}if(t.colors.length>0){var i=new Float32Array(t.colors.length*3);this.addAttribute("color",new Ct(i,3).copyColorsArray(t.colors))}if(t.uvs.length>0){var r=new Float32Array(t.uvs.length*2);this.addAttribute("uv",new Ct(r,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){var s=new Float32Array(t.uvs2.length*2);this.addAttribute("uv2",new Ct(s,2).copyVector2sArray(t.uvs2))}if(t.indices.length>0){var a=Gf(t.indices)>65535?Uint32Array:Uint16Array,o=new a(t.indices.length*3);this.setIndex(new Ct(o,1).copyIndicesArray(t.indices))}this.groups=t.groups;for(var l in t.morphTargets){for(var c=[],h=t.morphTargets[l],u=0,f=h.length;u<f;u++){var d=h[u],p=new Qe(d.length*3,3);c.push(p.copyVector3sArray(d))}this.morphAttributes[l]=c}if(t.skinIndices.length>0){var g=new Qe(t.skinIndices.length*4,4);this.addAttribute("skinIndex",g.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){var v=new Qe(t.skinWeights.length*4,4);this.addAttribute("skinWeight",v.copyVector4sArray(t.skinWeights))}return t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new Ar);var t=this.attributes.position;t!==void 0?this.boundingBox.setFromBufferAttribute(t):this.boundingBox.makeEmpty(),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var t=new Ar,e=new j;return function(){this.boundingSphere===null&&(this.boundingSphere=new gi);var i=this.attributes.position;if(i){var r=this.boundingSphere.center;t.setFromBufferAttribute(i),t.getCenter(r);for(var s=0,a=0,o=i.count;a<o;a++)e.x=i.getX(a),e.y=i.getY(a),e.z=i.getZ(a),s=Math.max(s,r.distanceToSquared(e));this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var t=this.index,e=this.attributes,n=this.groups;if(e.position){var i=e.position.array;if(e.normal===void 0)this.addAttribute("normal",new Ct(new Float32Array(i.length),3));else for(var r=e.normal.array,s=0,a=r.length;s<a;s++)r[s]=0;var o=e.normal.array,l,c,h,u=new j,f=new j,d=new j,p=new j,g=new j;if(t){var v=t.array;n.length===0&&this.addGroup(0,v.length);for(var m=0,y=n.length;m<y;++m)for(var x=n[m],_=x.start,b=x.count,s=_,a=_+b;s<a;s+=3)l=v[s+0]*3,c=v[s+1]*3,h=v[s+2]*3,u.fromArray(i,l),f.fromArray(i,c),d.fromArray(i,h),p.subVectors(d,f),g.subVectors(u,f),p.cross(g),o[l]+=p.x,o[l+1]+=p.y,o[l+2]+=p.z,o[c]+=p.x,o[c+1]+=p.y,o[c+2]+=p.z,o[h]+=p.x,o[h+1]+=p.y,o[h+2]+=p.z}else for(var s=0,a=i.length;s<a;s+=9)u.fromArray(i,s),f.fromArray(i,s+3),d.fromArray(i,s+6),p.subVectors(d,f),g.subVectors(u,f),p.cross(g),o[s]=p.x,o[s+1]=p.y,o[s+2]=p.z,o[s+3]=p.x,o[s+4]=p.y,o[s+5]=p.z,o[s+6]=p.x,o[s+7]=p.y,o[s+8]=p.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},merge:function(t,e){if(!(t&&t.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);return}e===void 0&&(e=0);var n=this.attributes;for(var i in n)if(t.attributes[i]!==void 0)for(var r=n[i],s=r.array,a=t.attributes[i],o=a.array,l=a.itemSize,c=0,h=l*e;c<o.length;c++,h++)s[h]=o[c];return this},normalizeNormals:function(){var t=new j;return function(){for(var n=this.attributes.normal,i=0,r=n.count;i<r;i++)t.x=n.getX(i),t.y=n.getY(i),t.z=n.getZ(i),t.normalize(),n.setXYZ(i,t.x,t.y,t.z)}}(),toNonIndexed:function(){if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var t=new ot,e=this.index.array,n=this.attributes;for(var i in n){for(var r=n[i],s=r.array,a=r.itemSize,o=new s.constructor(e.length*a),l=0,c=0,h=0,u=e.length;h<u;h++){l=e[h]*a;for(var f=0;f<a;f++)o[c++]=s[l++]}t.addAttribute(i,new Ct(o,a))}return t},toJSON:function(){var t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),this.parameters!==void 0){var e=this.parameters;for(var n in e)e[n]!==void 0&&(t[n]=e[n]);return t}t.data={attributes:{}};var i=this.index;if(i!==null){var r=Array.prototype.slice.call(i.array);t.data.index={type:i.array.constructor.name,array:r}}var s=this.attributes;for(var n in s){var a=s[n],r=Array.prototype.slice.call(a.array);t.data.attributes[n]={itemSize:a.itemSize,type:a.array.constructor.name,array:r,normalized:a.normalized}}var o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));var l=this.boundingSphere;return l!==null&&(t.data.boundingSphere={center:l.center.toArray(),radius:l.radius}),t},clone:function(){return new ot().copy(this)},copy:function(t){var e,n,i;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var r=t.index;r!==null&&this.setIndex(r.clone());var s=t.attributes;for(e in s){var a=s[e];this.addAttribute(e,a.clone())}var o=t.morphAttributes;for(e in o){var l=[],c=o[e];for(n=0,i=c.length;n<i;n++)l.push(c[n].clone());this.morphAttributes[e]=l}var h=t.groups;for(n=0,i=h.length;n<i;n++){var u=h[n];this.addGroup(u.start,u.count,u.materialIndex)}var f=t.boundingBox;f!==null&&(this.boundingBox=f.clone());var d=t.boundingSphere;return d!==null&&(this.boundingSphere=d.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function Fc(t,e,n,i,r,s){vt.call(this),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:s},this.fromBufferGeometry(new la(t,e,n,i,r,s)),this.mergeVertices()}Fc.prototype=Object.create(vt.prototype);Fc.prototype.constructor=Fc;function la(t,e,n,i,r,s){ot.call(this),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:s};var a=this;t=t||1,e=e||1,n=n||1,i=Math.floor(i)||1,r=Math.floor(r)||1,s=Math.floor(s)||1;var o=[],l=[],c=[],h=[],u=0,f=0;d("z","y","x",-1,-1,n,e,t,s,r,0),d("z","y","x",1,-1,n,e,-t,s,r,1),d("x","z","y",1,1,t,n,e,i,s,2),d("x","z","y",1,-1,t,n,-e,i,s,3),d("x","y","z",1,-1,t,e,n,i,r,4),d("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(o),this.addAttribute("position",new Qe(l,3)),this.addAttribute("normal",new Qe(c,3)),this.addAttribute("uv",new Qe(h,2));function d(p,g,v,m,y,x,_,b,w,S,C){var L=x/w,M=_/S,E=x/2,N=_/2,k=b/2,F=w+1,V=S+1,ee=0,R=0,T,H,O=new j;for(H=0;H<V;H++){var B=H*M-N;for(T=0;T<F;T++){var q=T*L-E;O[p]=q*m,O[g]=B*y,O[v]=k,l.push(O.x,O.y,O.z),O[p]=0,O[g]=0,O[v]=b>0?1:-1,c.push(O.x,O.y,O.z),h.push(T/w),h.push(1-H/S),ee+=1}}for(H=0;H<S;H++)for(T=0;T<w;T++){var G=u+T+F*H,A=u+T+F*(H+1),U=u+(T+1)+F*(H+1),J=u+(T+1)+F*H;o.push(G,A,J),o.push(A,U,J),R+=6}a.addGroup(f,R,C),f+=R,u+=ee}}la.prototype=Object.create(ot.prototype);la.prototype.constructor=la;function Oc(t,e,n,i){vt.call(this),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i},this.fromBufferGeometry(new ca(t,e,n,i)),this.mergeVertices()}Oc.prototype=Object.create(vt.prototype);Oc.prototype.constructor=Oc;function ca(t,e,n,i){ot.call(this),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i},t=t||1,e=e||1;var r=t/2,s=e/2,a=Math.floor(n)||1,o=Math.floor(i)||1,l=a+1,c=o+1,h=t/a,u=e/o,f,d,p=[],g=[],v=[],m=[];for(d=0;d<c;d++){var y=d*u-s;for(f=0;f<l;f++){var x=f*h-r;g.push(x,-y,0),v.push(0,0,1),m.push(f/a),m.push(1-d/o)}}for(d=0;d<o;d++)for(f=0;f<a;f++){var _=f+l*d,b=f+l*(d+1),w=f+1+l*(d+1),S=f+1+l*d;p.push(_,b,S),p.push(b,w,S)}this.setIndex(p),this.addAttribute("position",new Qe(g,3)),this.addAttribute("normal",new Qe(v,3)),this.addAttribute("uv",new Qe(m,2))}ca.prototype=Object.create(ot.prototype);ca.prototype.constructor=ca;function si(t){Rt.call(this),this.type="MeshBasicMaterial",this.color=new dt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Bh,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(t)}si.prototype=Object.create(Rt.prototype);si.prototype.constructor=si;si.prototype.isMeshBasicMaterial=!0;si.prototype.copy=function(t){return Rt.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this};function yi(t){Rt.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,this.fragmentShader=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,t!==void 0&&(t.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}yi.prototype=Object.create(Rt.prototype);yi.prototype.constructor=yi;yi.prototype.isShaderMaterial=!0;yi.prototype.copy=function(t){return Rt.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Wn.clone(t.uniforms),this.defines=t.defines,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=t.extensions,this};yi.prototype.toJSON=function(t){var e=Rt.prototype.toJSON.call(this,t);return e.uniforms=this.uniforms,e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e};function Ra(t,e){this.origin=t!==void 0?t:new j,this.direction=e!==void 0?e:new j}Object.assign(Ra.prototype,{set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){var n=e||new j;return n.copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(t){return this.direction.copy(t).sub(this.origin).normalize(),this},recast:function(){var t=new j;return function(n){return this.origin.copy(this.at(n,t)),this}}(),closestPointToPoint:function(t,e){var n=e||new j;n.subVectors(t,this.origin);var i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(t){return Math.sqrt(this.distanceSqToPoint(t))},distanceSqToPoint:function(){var t=new j;return function(n){var i=t.subVectors(n,this.origin).dot(this.direction);return i<0?this.origin.distanceToSquared(n):(t.copy(this.direction).multiplyScalar(i).add(this.origin),t.distanceToSquared(n))}}(),distanceSqToSegment:function(){var t=new j,e=new j,n=new j;return function(r,s,a,o){t.copy(r).add(s).multiplyScalar(.5),e.copy(s).sub(r).normalize(),n.copy(this.origin).sub(t);var l=r.distanceTo(s)*.5,c=-this.direction.dot(e),h=n.dot(this.direction),u=-n.dot(e),f=n.lengthSq(),d=Math.abs(1-c*c),p,g,v,m;if(d>0)if(p=c*u-h,g=c*h-u,m=l*d,p>=0)if(g>=-m)if(g<=m){var y=1/d;p*=y,g*=y,v=p*(p+c*g+2*h)+g*(c*p+g+2*u)+f}else g=l,p=Math.max(0,-(c*g+h)),v=-p*p+g*(g+2*u)+f;else g=-l,p=Math.max(0,-(c*g+h)),v=-p*p+g*(g+2*u)+f;else g<=-m?(p=Math.max(0,-(-c*l+h)),g=p>0?-l:Math.min(Math.max(-l,-u),l),v=-p*p+g*(g+2*u)+f):g<=m?(p=0,g=Math.min(Math.max(-l,-u),l),v=g*(g+2*u)+f):(p=Math.max(0,-(c*l+h)),g=p>0?l:Math.min(Math.max(-l,-u),l),v=-p*p+g*(g+2*u)+f);else g=c>0?-l:l,p=Math.max(0,-(c*g+h)),v=-p*p+g*(g+2*u)+f;return a&&a.copy(this.direction).multiplyScalar(p).add(this.origin),o&&o.copy(e).multiplyScalar(g).add(t),v}}(),intersectSphere:function(){var t=new j;return function(n,i){t.subVectors(n.center,this.origin);var r=t.dot(this.direction),s=t.dot(t)-r*r,a=n.radius*n.radius;if(s>a)return null;var o=Math.sqrt(a-s),l=r-o,c=r+o;return l<0&&c<0?null:l<0?this.at(c,i):this.at(l,i)}}(),intersectsSphere:function(t){return this.distanceToPoint(t.center)<=t.radius},distanceToPlane:function(t){var e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;var n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null},intersectPlane:function(t,e){var n=this.distanceToPlane(t);return n===null?null:this.at(n,e)},intersectsPlane:function(t){var e=t.distanceToPoint(this.origin);if(e===0)return!0;var n=t.normal.dot(this.direction);return n*e<0},intersectBox:function(t,e){var n,i,r,s,a,o,l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return l>=0?(n=(t.min.x-u.x)*l,i=(t.max.x-u.x)*l):(n=(t.max.x-u.x)*l,i=(t.min.x-u.x)*l),c>=0?(r=(t.min.y-u.y)*c,s=(t.max.y-u.y)*c):(r=(t.max.y-u.y)*c,s=(t.min.y-u.y)*c),n>s||r>i||((r>n||n!==n)&&(n=r),(s<i||i!==i)&&(i=s),h>=0?(a=(t.min.z-u.z)*h,o=(t.max.z-u.z)*h):(a=(t.max.z-u.z)*h,o=(t.min.z-u.z)*h),n>o||a>i)||((a>n||n!==n)&&(n=a),(o<i||i!==i)&&(i=o),i<0)?null:this.at(n>=0?n:i,e)},intersectsBox:function(){var t=new j;return function(n){return this.intersectBox(n,t)!==null}}(),intersectTriangle:function(){var t=new j,e=new j,n=new j,i=new j;return function(s,a,o,l,c){e.subVectors(a,s),n.subVectors(o,s),i.crossVectors(e,n);var h=this.direction.dot(i),u;if(h>0){if(l)return null;u=1}else if(h<0)u=-1,h=-h;else return null;t.subVectors(this.origin,s);var f=u*this.direction.dot(n.crossVectors(t,n));if(f<0)return null;var d=u*this.direction.dot(e.cross(t));if(d<0||f+d>h)return null;var p=-u*t.dot(i);return p<0?null:this.at(p/h,c)}}(),applyMatrix4:function(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}});function ja(t,e){this.start=t!==void 0?t:new j,this.end=e!==void 0?e:new j}Object.assign(ja.prototype,{set:function(t,e){return this.start.copy(t),this.end.copy(e),this},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},getCenter:function(t){var e=t||new j;return e.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){var e=t||new j;return e.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){var n=e||new j;return this.delta(n).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(){var t=new j,e=new j;return function(i,r){t.subVectors(i,this.start),e.subVectors(this.end,this.start);var s=e.dot(e),a=e.dot(t),o=a/s;return r&&(o=wt.clamp(o,0,1)),o}}(),closestPointToPoint:function(t,e,n){var i=this.closestPointToPointParameter(t,e),r=n||new j;return this.delta(r).multiplyScalar(i).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)}});function mr(t,e,n){this.a=t!==void 0?t:new j,this.b=e!==void 0?e:new j,this.c=n!==void 0?n:new j}Object.assign(mr,{normal:function(){var t=new j;return function(n,i,r,s){var a=s||new j;a.subVectors(r,i),t.subVectors(n,i),a.cross(t);var o=a.lengthSq();return o>0?a.multiplyScalar(1/Math.sqrt(o)):a.set(0,0,0)}}(),barycoordFromPoint:function(){var t=new j,e=new j,n=new j;return function(r,s,a,o,l){t.subVectors(o,s),e.subVectors(a,s),n.subVectors(r,s);var c=t.dot(t),h=t.dot(e),u=t.dot(n),f=e.dot(e),d=e.dot(n),p=c*f-h*h,g=l||new j;if(p===0)return g.set(-2,-1,-1);var v=1/p,m=(f*u-h*d)*v,y=(c*d-h*u)*v;return g.set(1-m-y,y,m)}}(),containsPoint:function(){var t=new j;return function(n,i,r,s){var a=mr.barycoordFromPoint(n,i,r,s,t);return a.x>=0&&a.y>=0&&a.x+a.y<=1}}()});Object.assign(mr.prototype,{set:function(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this},setFromPointsAndIndices:function(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},area:function(){var t=new j,e=new j;return function(){return t.subVectors(this.c,this.b),e.subVectors(this.a,this.b),t.cross(e).length()*.5}}(),midpoint:function(t){var e=t||new j;return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(t){return mr.normal(this.a,this.b,this.c,t)},plane:function(t){var e=t||new di;return e.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(t,e){return mr.barycoordFromPoint(t,this.a,this.b,this.c,e)},containsPoint:function(t){return mr.containsPoint(t,this.a,this.b,this.c)},intersectsBox:function(t){return t.intersectsTriangle(this)},closestPointToPoint:function(){var t=new di,e=[new ja,new ja,new ja],n=new j,i=new j;return function(s,a){var o=a||new j,l=1/0;if(t.setFromCoplanarPoints(this.a,this.b,this.c),t.projectPoint(s,n),this.containsPoint(n)===!0)o.copy(n);else{e[0].set(this.a,this.b),e[1].set(this.b,this.c),e[2].set(this.c,this.a);for(var c=0;c<e.length;c++){e[c].closestPointToPoint(n,!0,i);var h=n.distanceToSquared(i);h<l&&(l=h,o.copy(i))}}return o}}(),equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}});function Fn(t,e){nt.call(this),this.type="Mesh",this.geometry=t!==void 0?t:new ot,this.material=e!==void 0?e:new si({color:Math.random()*16777215}),this.drawMode=rx,this.updateMorphTargets()}Fn.prototype=Object.assign(Object.create(nt.prototype),{constructor:Fn,isMesh:!0,setDrawMode:function(t){this.drawMode=t},copy:function(t){return nt.prototype.copy.call(this,t),this.drawMode=t.drawMode,t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this},updateMorphTargets:function(){var t=this.geometry,e,n,i;if(t.isBufferGeometry){var r=t.morphAttributes,s=Object.keys(r);if(s.length>0){var a=r[s[0]];if(a!==void 0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},e=0,n=a.length;e<n;e++)i=a[e].name||String(e),this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}else{var o=t.morphTargets;if(o!==void 0&&o.length>0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},e=0,n=o.length;e<n;e++)i=o[e].name||String(e),this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}},raycast:function(){var t=new xt,e=new Ra,n=new gi,i=new j,r=new j,s=new j,a=new j,o=new j,l=new j,c=new qe,h=new qe,u=new qe,f=new j,d=new j,p=new j;function g(y,x,_,b,w,S,C){return mr.barycoordFromPoint(y,x,_,b,f),w.multiplyScalar(f.x),S.multiplyScalar(f.y),C.multiplyScalar(f.z),w.add(S).add(C),w.clone()}function v(y,x,_,b,w,S,C,L){var M;if(x.side===Ta?M=b.intersectTriangle(C,S,w,!0,L):M=b.intersectTriangle(w,S,C,x.side!==ml,L),M===null)return null;p.copy(L),p.applyMatrix4(y.matrixWorld);var E=_.ray.origin.distanceTo(p);return E<_.near||E>_.far?null:{distance:E,point:p.clone(),object:y}}function m(y,x,_,b,w,S,C,L){i.fromBufferAttribute(b,S),r.fromBufferAttribute(b,C),s.fromBufferAttribute(b,L);var M=v(y,y.material,x,_,i,r,s,d);return M&&(w&&(c.fromBufferAttribute(w,S),h.fromBufferAttribute(w,C),u.fromBufferAttribute(w,L),M.uv=g(d,i,r,s,c,h,u)),M.face=new br(S,C,L,mr.normal(i,r,s)),M.faceIndex=S),M}return function(x,_){var b=this.geometry,w=this.material,S=this.matrixWorld;if(w!==void 0&&(b.boundingSphere===null&&b.computeBoundingSphere(),n.copy(b.boundingSphere),n.applyMatrix4(S),x.ray.intersectsSphere(n)!==!1&&(t.getInverse(S),e.copy(x.ray).applyMatrix4(t),!(b.boundingBox!==null&&e.intersectsBox(b.boundingBox)===!1)))){var C;if(b.isBufferGeometry){var L,M,E,N=b.index,k=b.attributes.position,F=b.attributes.uv,V,ee;if(N!==null)for(V=0,ee=N.count;V<ee;V+=3)L=N.getX(V),M=N.getX(V+1),E=N.getX(V+2),C=m(this,x,e,k,F,L,M,E),C&&(C.faceIndex=Math.floor(V/3),_.push(C));else if(k!==void 0)for(V=0,ee=k.count;V<ee;V+=3)L=V,M=V+1,E=V+2,C=m(this,x,e,k,F,L,M,E),C&&(C.index=L,_.push(C))}else if(b.isGeometry){var R,T,H,O=Array.isArray(w),B=b.vertices,q=b.faces,G,A=b.faceVertexUvs[0];A.length>0&&(G=A);for(var U=0,J=q.length;U<J;U++){var $=q[U],ie=O?w[$.materialIndex]:w;if(ie!==void 0){if(R=B[$.a],T=B[$.b],H=B[$.c],ie.morphTargets===!0){var re=b.morphTargets,de=this.morphTargetInfluences;i.set(0,0,0),r.set(0,0,0),s.set(0,0,0);for(var me=0,X=re.length;me<X;me++){var pe=de[me];if(pe!==0){var he=re[me].vertices;i.addScaledVector(a.subVectors(he[$.a],R),pe),r.addScaledVector(o.subVectors(he[$.b],T),pe),s.addScaledVector(l.subVectors(he[$.c],H),pe)}}i.add(R),r.add(T),s.add(H),R=i,T=r,H=s}if(C=v(this,ie,x,e,R,T,H,d),C){if(G&&G[U]){var ce=G[U];c.copy(ce[0]),h.copy(ce[1]),u.copy(ce[2]),C.uv=g(d,R,T,H,c,h,u)}C.face=$,C.faceIndex=U,_.push(C)}}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});function DP(t,e,n,i){var r=new dt(0),s=0,a,o,l;function c(u,f,d,p){var g=f.background;g===null?h(r,s):g&&g.isColor&&(h(g,1),p=!0),(t.autoClear||p)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),g&&g.isCubeTexture?(l===void 0&&(l=new Fn(new la(1,1,1),new yi({uniforms:Qs.cube.uniforms,vertexShader:Qs.cube.vertexShader,fragmentShader:Qs.cube.fragmentShader,side:Ta,depthTest:!0,depthWrite:!1,fog:!1})),l.geometry.removeAttribute("normal"),l.geometry.removeAttribute("uv"),l.onBeforeRender=function(v,m,y){this.matrixWorld.copyPosition(y.matrixWorld)},n.update(l.geometry)),l.material.uniforms.tCube.value=g,u.push(l,l.geometry,l.material,0,null)):g&&g.isTexture&&(a===void 0&&(a=new Ao(-1,1,1,-1,0,1),o=new Fn(new ca(2,2),new si({depthTest:!1,depthWrite:!1,fog:!1})),n.update(o.geometry)),o.material.map=g,t.renderBufferDirect(a,null,o.geometry,o.material,o,null))}function h(u,f){e.buffers.color.setClear(u.r,u.g,u.b,f,i)}return{getClearColor:function(){return r},setClearColor:function(u,f){r.set(u),s=f!==void 0?f:1,h(r,s)},getClearAlpha:function(){return s},setClearAlpha:function(u){s=u,h(r,s)},render:c}}function NP(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program&&e.program&&t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function BP(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function UP(){var t=[],e=0,n=[],i=[];function r(){e=0,n.length=0,i.length=0}function s(o,l,c,h,u){var f=t[e];f===void 0?(f={id:o.id,object:o,geometry:l,material:c,program:c.program,renderOrder:o.renderOrder,z:h,group:u},t[e]=f):(f.id=o.id,f.object=o,f.geometry=l,f.material=c,f.program=c.program,f.renderOrder=o.renderOrder,f.z=h,f.group=u),(c.transparent===!0?i:n).push(f),e++}function a(){n.length>1&&n.sort(NP),i.length>1&&i.sort(BP)}return{opaque:n,transparent:i,init:r,push:s,sort:a}}function FP(){var t={};function e(i,r){var s=i.id+","+r.id,a=t[s];return a===void 0&&(a=new UP,t[s]=a),a}function n(){t={}}return{get:e,dispose:n}}function OP(t,e){return Math.abs(e[1])-Math.abs(t[1])}function zP(t){var e={},n=new Float32Array(8);function i(r,s,a,o){var l=r.morphTargetInfluences,c=l.length,h=e[s.id];if(h===void 0){h=[];for(var u=0;u<c;u++)h[u]=[u,0];e[s.id]=h}for(var f=a.morphTargets&&s.morphAttributes.position,d=a.morphNormals&&s.morphAttributes.normal,u=0;u<c;u++){var p=h[u];p[1]!==0&&(f&&s.removeAttribute("morphTarget"+u),d&&s.removeAttribute("morphNormal"+u))}for(var u=0;u<c;u++){var p=h[u];p[0]=u,p[1]=l[u]}h.sort(OP);for(var u=0;u<8;u++){var p=h[u];if(p){var g=p[0],v=p[1];if(v){f&&s.addAttribute("morphTarget"+u,f[g]),d&&s.addAttribute("morphNormal"+u,d[g]),n[u]=v;continue}}n[u]=0}o.getUniforms().setValue(t,"morphTargetInfluences",n)}return{update:i}}function GP(t,e,n){var i;function r(h){i=h}var s,a;function o(h){s=h.type,a=h.bytesPerElement}function l(h,u){t.drawElements(i,u,s,h*a),n.calls++,n.vertices+=u,i===t.TRIANGLES?n.faces+=u/3:i===t.POINTS&&(n.points+=u)}function c(h,u,f){var d=e.get("ANGLE_instanced_arrays");if(d===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d.drawElementsInstancedANGLE(i,f,s,u*a,h.maxInstancedCount),n.calls++,n.vertices+=f*h.maxInstancedCount,i===t.TRIANGLES?n.faces+=h.maxInstancedCount*f/3:i===t.POINTS&&(n.points+=h.maxInstancedCount*f)}this.setMode=r,this.setIndex=o,this.render=l,this.renderInstances=c}function VP(t,e,n){var i;function r(o){i=o}function s(o,l){t.drawArrays(i,o,l),n.calls++,n.vertices+=l,i===t.TRIANGLES?n.faces+=l/3:i===t.POINTS&&(n.points+=l)}function a(o,l,c){var h=e.get("ANGLE_instanced_arrays");if(h===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}var u=o.attributes.position;u.isInterleavedBufferAttribute?(c=u.data.count,h.drawArraysInstancedANGLE(i,0,c,o.maxInstancedCount)):h.drawArraysInstancedANGLE(i,l,c,o.maxInstancedCount),n.calls++,n.vertices+=c*o.maxInstancedCount,i===t.TRIANGLES?n.faces+=o.maxInstancedCount*c/3:i===t.POINTS&&(n.points+=o.maxInstancedCount*c)}this.setMode=r,this.render=s,this.renderInstances=a}function HP(t,e,n){var i={},r={};function s(c){var h=c.target,u=i[h.id];u.index!==null&&e.remove(u.index);for(var f in u.attributes)e.remove(u.attributes[f]);h.removeEventListener("dispose",s),delete i[h.id];var d=r[h.id];d&&(e.remove(d),delete r[h.id]),d=r[u.id],d&&(e.remove(d),delete r[u.id]),n.geometries--}function a(c,h){var u=i[h.id];return u||(h.addEventListener("dispose",s),h.isBufferGeometry?u=h:h.isGeometry&&(h._bufferGeometry===void 0&&(h._bufferGeometry=new ot().setFromObject(c)),u=h._bufferGeometry),i[h.id]=u,n.geometries++,u)}function o(c){var h=c.index,u=c.attributes;h!==null&&e.update(h,t.ELEMENT_ARRAY_BUFFER);for(var f in u)e.update(u[f],t.ARRAY_BUFFER);var d=c.morphAttributes;for(var f in d)for(var p=d[f],g=0,v=p.length;g<v;g++)e.update(p[g],t.ARRAY_BUFFER)}function l(c){var h=r[c.id];if(h)return h;var u=[],f=c.index,d=c.attributes;if(f!==null)for(var p=f.array,g=0,v=p.length;g<v;g+=3){var m=p[g+0],y=p[g+1],x=p[g+2];u.push(m,y,y,x,x,m)}else for(var p=d.position.array,g=0,v=p.length/3-1;g<v;g+=3){var m=g+0,y=g+1,x=g+2;u.push(m,y,y,x,x,m)}return h=new(Gf(u)>65535?Ro:Co)(u,1),e.update(h,t.ELEMENT_ARRAY_BUFFER),r[c.id]=h,h}return{get:a,update:o,getWireframeAttribute:l}}function kP(t,e){var n={};function i(s){var a=e.frame,o=s.geometry,l=t.get(s,o);return n[l.id]!==a&&(o.isGeometry&&l.updateFromObject(s),t.update(l),n[l.id]=a),l}function r(){n={}}return{update:i,dispose:r}}function WP(t){for(var e=t.split(`
`),n=0;n<e.length;n++)e[n]=n+1+": "+e[n];return e.join(`
`)}function _v(t,e,n){var i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),t.getShaderParameter(i,t.COMPILE_STATUS)===!1&&console.error("THREE.WebGLShader: Shader couldn't compile."),t.getShaderInfoLog(i)!==""&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",e===t.VERTEX_SHADER?"vertex":"fragment",t.getShaderInfoLog(i),WP(n)),i}var XP=0;function gx(t){switch(t){case Bc:return["Linear","( value )"];case qA:return["sRGB","( value )"];case $A:return["RGBE","( value )"];case YA:return["RGBM","( value, 7.0 )"];case ZA:return["RGBM","( value, 16.0 )"];case jA:return["RGBD","( value, 256.0 )"];case sx:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw new Error("unsupported encoding: "+t)}}function Tu(t,e){var n=gx(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function qP(t,e){var n=gx(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function $P(t,e){var n;switch(e){case Q0:n="Linear";break;case pA:n="Reinhard";break;case mA:n="Uncharted2";break;case vA:n="OptimizedCineon";break;default:throw new Error("unsupported toneMapping: "+e)}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function YP(t,e,n){t=t||{};var i=[t.derivatives||e.envMapCubeUV||e.bumpMap||e.normalMap||e.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(t.fragDepth||e.logarithmicDepthBuffer)&&n.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",t.drawBuffers&&n.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(t.shaderTextureLOD||e.envMap)&&n.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""];return i.filter(Wa).join(`
`)}function ZP(t){var e=[];for(var n in t){var i=t[n];i!==!1&&e.push("#define "+n+" "+i)}return e.join(`
`)}function jP(t,e){for(var n={},i=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES),r=0;r<i;r++){var s=t.getActiveAttrib(e,r),a=s.name;n[a]=t.getAttribLocation(e,a)}return n}function Wa(t){return t!==""}function Mv(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights)}function bv(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}function Vf(t){var e=/^[ \t]*#include +<([\w\d.]+)>/gm;function n(i,r){var s=Nt[r];if(s===void 0)throw new Error("Can not resolve #include <"+r+">");return Vf(s)}return t.replace(e,n)}function wv(t){var e=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;function n(i,r,s,a){for(var o="",l=parseInt(r);l<parseInt(s);l++)o+=a.replace(/\[ i \]/g,"[ "+l+" ]");return o}return t.replace(e,n)}function JP(t,e,n,i,r,s){var a=t.context,o=i.defines,l=r.vertexShader,c=r.fragmentShader,h="SHADOWMAP_TYPE_BASIC";s.shadowMapType===W0?h="SHADOWMAP_TYPE_PCF":s.shadowMapType===$T&&(h="SHADOWMAP_TYPE_PCF_SOFT");var u="ENVMAP_TYPE_CUBE",f="ENVMAP_MODE_REFLECTION",d="ENVMAP_BLENDING_MULTIPLY";if(s.envMap){switch(i.envMap.mapping){case pp:case If:u="ENVMAP_TYPE_CUBE";break;case mp:case vp:u="ENVMAP_TYPE_CUBE_UV";break;case ex:case Df:u="ENVMAP_TYPE_EQUIREC";break;case tx:u="ENVMAP_TYPE_SPHERE";break}switch(i.envMap.mapping){case If:case Df:f="ENVMAP_MODE_REFRACTION";break}switch(i.combine){case Bh:d="ENVMAP_BLENDING_MULTIPLY";break;case fA:d="ENVMAP_BLENDING_MIX";break;case dA:d="ENVMAP_BLENDING_ADD";break}}var p=t.gammaFactor>0?t.gammaFactor:1,g=YP(i.extensions,s,e),v=ZP(o),m=a.createProgram(),y,x;i.isRawShaderMaterial?(y=[v].filter(Wa).join(`
`),y.length>0&&(y+=`
`),x=[g,v].filter(Wa).join(`
`),x.length>0&&(x+=`
`)):(y=["precision "+s.precision+" float;","precision "+s.precision+" int;","#define SHADER_NAME "+r.name,v,s.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+p,"#define MAX_BONES "+s.maxBones,s.useFog&&s.fog?"#define USE_FOG":"",s.useFog&&s.fogExp?"#define FOG_EXP2":"",s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.envMap?"#define "+f:"",s.lightMap?"#define USE_LIGHTMAP":"",s.aoMap?"#define USE_AOMAP":"",s.emissiveMap?"#define USE_EMISSIVEMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.displacementMap&&s.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.roughnessMap?"#define USE_ROUGHNESSMAP":"",s.metalnessMap?"#define USE_METALNESSMAP":"",s.alphaMap?"#define USE_ALPHAMAP":"",s.vertexColors?"#define USE_COLOR":"",s.flatShading?"#define FLAT_SHADED":"",s.skinning?"#define USE_SKINNING":"",s.useVertexTexture?"#define BONE_TEXTURE":"",s.morphTargets?"#define USE_MORPHTARGETS":"",s.morphNormals&&s.flatShading===!1?"#define USE_MORPHNORMALS":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+h:"",s.sizeAttenuation?"#define USE_SIZEATTENUATION":"",s.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",s.logarithmicDepthBuffer&&e.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Wa).join(`
`),x=[g,"precision "+s.precision+" float;","precision "+s.precision+" int;","#define SHADER_NAME "+r.name,v,s.alphaTest?"#define ALPHATEST "+s.alphaTest:"","#define GAMMA_FACTOR "+p,s.useFog&&s.fog?"#define USE_FOG":"",s.useFog&&s.fogExp?"#define FOG_EXP2":"",s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.envMap?"#define "+u:"",s.envMap?"#define "+f:"",s.envMap?"#define "+d:"",s.lightMap?"#define USE_LIGHTMAP":"",s.aoMap?"#define USE_AOMAP":"",s.emissiveMap?"#define USE_EMISSIVEMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.roughnessMap?"#define USE_ROUGHNESSMAP":"",s.metalnessMap?"#define USE_METALNESSMAP":"",s.alphaMap?"#define USE_ALPHAMAP":"",s.vertexColors?"#define USE_COLOR":"",s.gradientMap?"#define USE_GRADIENTMAP":"",s.flatShading?"#define FLAT_SHADED":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+h:"",s.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",s.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",s.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",s.logarithmicDepthBuffer&&e.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",s.envMap&&e.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",s.toneMapping!==wu?"#define TONE_MAPPING":"",s.toneMapping!==wu?Nt.tonemapping_pars_fragment:"",s.toneMapping!==wu?$P("toneMapping",s.toneMapping):"",s.dithering?"#define DITHERING":"",s.outputEncoding||s.mapEncoding||s.envMapEncoding||s.emissiveMapEncoding?Nt.encodings_pars_fragment:"",s.mapEncoding?Tu("mapTexelToLinear",s.mapEncoding):"",s.envMapEncoding?Tu("envMapTexelToLinear",s.envMapEncoding):"",s.emissiveMapEncoding?Tu("emissiveMapTexelToLinear",s.emissiveMapEncoding):"",s.outputEncoding?qP("linearToOutputTexel",s.outputEncoding):"",s.depthPacking?"#define DEPTH_PACKING "+i.depthPacking:"",`
`].filter(Wa).join(`
`)),l=Vf(l),l=Mv(l,s),l=bv(l,s),c=Vf(c),c=Mv(c,s),c=bv(c,s),l=wv(l),c=wv(c);var _=y+l,b=x+c,w=_v(a,a.VERTEX_SHADER,_),S=_v(a,a.FRAGMENT_SHADER,b);a.attachShader(m,w),a.attachShader(m,S),i.index0AttributeName!==void 0?a.bindAttribLocation(m,0,i.index0AttributeName):s.morphTargets===!0&&a.bindAttribLocation(m,0,"position"),a.linkProgram(m);var C=a.getProgramInfoLog(m).trim(),L=a.getShaderInfoLog(w).trim(),M=a.getShaderInfoLog(S).trim(),E=!0,N=!0;a.getProgramParameter(m,a.LINK_STATUS)===!1?(E=!1,console.error("THREE.WebGLProgram: shader error: ",a.getError(),"gl.VALIDATE_STATUS",a.getProgramParameter(m,a.VALIDATE_STATUS),"gl.getProgramInfoLog",C,L,M)):C!==""?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",C):(L===""||M==="")&&(N=!1),N&&(this.diagnostics={runnable:E,material:i,programLog:C,vertexShader:{log:L,prefix:y},fragmentShader:{log:M,prefix:x}}),a.deleteShader(w),a.deleteShader(S);var k;this.getUniforms=function(){return k===void 0&&(k=new Mr(a,m,t)),k};var F;return this.getAttributes=function(){return F===void 0&&(F=jP(a,m)),F},this.destroy=function(){a.deleteProgram(m),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.id=XP++,this.code=n,this.usedTimes=1,this.program=m,this.vertexShader=w,this.fragmentShader=S,this}function KP(t,e,n){var i=[],r={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow"},s=["precision","supportsVertexTextures","map","mapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering"];function a(l){var c=l.skeleton,h=c.bones;if(n.floatVertexTextures)return 1024;var u=n.maxVertexUniforms,f=Math.floor((u-20)/4),d=Math.min(f,h.length);return d<h.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+h.length+" bones. This GPU supports "+d+"."),0):d}function o(l,c){var h;return l?l.isTexture?h=l.encoding:l.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),h=l.texture.encoding):h=Bc,h===Bc&&c&&(h=sx),h}this.getParameters=function(l,c,h,u,f,d,p){var g=r[l.type],v=p.isSkinnedMesh?a(p):0,m=n.precision;l.precision!==null&&(m=n.getMaxPrecision(l.precision),m!==l.precision&&console.warn("THREE.WebGLProgram.getParameters:",l.precision,"not supported, using",m,"instead."));var y=t.getRenderTarget(),x={shaderID:g,precision:m,supportsVertexTextures:n.vertexTextures,outputEncoding:o(y?y.texture:null,t.gammaOutput),map:!!l.map,mapEncoding:o(l.map,t.gammaInput),envMap:!!l.envMap,envMapMode:l.envMap&&l.envMap.mapping,envMapEncoding:o(l.envMap,t.gammaInput),envMapCubeUV:!!l.envMap&&(l.envMap.mapping===mp||l.envMap.mapping===vp),lightMap:!!l.lightMap,aoMap:!!l.aoMap,emissiveMap:!!l.emissiveMap,emissiveMapEncoding:o(l.emissiveMap,t.gammaInput),bumpMap:!!l.bumpMap,normalMap:!!l.normalMap,displacementMap:!!l.displacementMap,roughnessMap:!!l.roughnessMap,metalnessMap:!!l.metalnessMap,specularMap:!!l.specularMap,alphaMap:!!l.alphaMap,gradientMap:!!l.gradientMap,combine:l.combine,vertexColors:l.vertexColors,fog:!!u,useFog:l.fog,fogExp:u&&u.isFogExp2,flatShading:l.flatShading,sizeAttenuation:l.sizeAttenuation,logarithmicDepthBuffer:n.logarithmicDepthBuffer,skinning:l.skinning&&v>0,maxBones:v,useVertexTexture:n.floatVertexTextures,morphTargets:l.morphTargets,morphNormals:l.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:c.directional.length,numPointLights:c.point.length,numSpotLights:c.spot.length,numRectAreaLights:c.rectArea.length,numHemiLights:c.hemi.length,numClippingPlanes:f,numClipIntersection:d,dithering:l.dithering,shadowMapEnabled:t.shadowMap.enabled&&p.receiveShadow&&h.length>0,shadowMapType:t.shadowMap.type,toneMapping:t.toneMapping,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:l.premultipliedAlpha,alphaTest:l.alphaTest,doubleSided:l.side===ml,flipSided:l.side===Ta,depthPacking:l.depthPacking!==void 0?l.depthPacking:!1};return x},this.getProgramCode=function(l,c){var h=[];if(c.shaderID?h.push(c.shaderID):(h.push(l.fragmentShader),h.push(l.vertexShader)),l.defines!==void 0)for(var u in l.defines)h.push(u),h.push(l.defines[u]);for(var f=0;f<s.length;f++)h.push(c[s[f]]);return h.push(l.onBeforeCompile.toString()),h.push(t.gammaOutput),h.join()},this.acquireProgram=function(l,c,h,u){for(var f,d=0,p=i.length;d<p;d++){var g=i[d];if(g.code===u){f=g,++f.usedTimes;break}}return f===void 0&&(f=new JP(t,e,u,l,c,h),i.push(f)),f},this.releaseProgram=function(l){if(--l.usedTimes===0){var c=i.indexOf(l);i[c]=i[i.length-1],i.pop(),l.destroy()}},this.programs=i}function QP(t,e,n,i,r,s,a,o){var l=typeof WebGL2RenderingContext<"u"&&t instanceof WebGL2RenderingContext,c={},h;function u(R,T){if(R.width>T||R.height>T){var H=T/Math.max(R.width,R.height),O=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");O.width=Math.floor(R.width*H),O.height=Math.floor(R.height*H);var B=O.getContext("2d");return B.drawImage(R,0,0,R.width,R.height,0,0,O.width,O.height),console.warn("THREE.WebGLRenderer: image is too big ("+R.width+"x"+R.height+"). Resized to "+O.width+"x"+O.height,R),O}return R}function f(R){return wt.isPowerOfTwo(R.width)&&wt.isPowerOfTwo(R.height)}function d(R){if(R instanceof HTMLImageElement||R instanceof HTMLCanvasElement||R instanceof ImageBitmap){h===void 0&&(h=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),h.width=wt.floorPowerOfTwo(R.width),h.height=wt.floorPowerOfTwo(R.height);var T=h.getContext("2d");return T.drawImage(R,0,0,h.width,h.height),console.warn("THREE.WebGLRenderer: image is not power of two ("+R.width+"x"+R.height+"). Resized to "+h.width+"x"+h.height,R),h}return R}function p(R){return R.wrapS!==ni||R.wrapT!==ni||R.minFilter!==ii&&R.minFilter!==$n}function g(R,T){return R.generateMipmaps&&T&&R.minFilter!==ii&&R.minFilter!==$n}function v(R){return R===ii||R===gp||R===yp?t.NEAREST:t.LINEAR}function m(R){var T=R.target;T.removeEventListener("dispose",m),x(T),T.isVideoTexture&&delete c[T.id],a.textures--}function y(R){var T=R.target;T.removeEventListener("dispose",y),_(T),a.textures--}function x(R){var T=i.get(R);if(R.image&&T.__image__webglTextureCube)t.deleteTexture(T.__image__webglTextureCube);else{if(T.__webglInit===void 0)return;t.deleteTexture(T.__webglTexture)}i.remove(R)}function _(R){var T=i.get(R),H=i.get(R.texture);if(R){if(H.__webglTexture!==void 0&&t.deleteTexture(H.__webglTexture),R.depthTexture&&R.depthTexture.dispose(),R.isWebGLRenderTargetCube)for(var O=0;O<6;O++)t.deleteFramebuffer(T.__webglFramebuffer[O]),T.__webglDepthbuffer&&t.deleteRenderbuffer(T.__webglDepthbuffer[O]);else t.deleteFramebuffer(T.__webglFramebuffer),T.__webglDepthbuffer&&t.deleteRenderbuffer(T.__webglDepthbuffer);i.remove(R.texture),i.remove(R)}}function b(R,T){var H=i.get(R);if(R.isVideoTexture&&ee(R),R.version>0&&H.__version!==R.version){var O=R.image;if(O===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",R);else if(O.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",R);else{L(H,R,T);return}}n.activeTexture(t.TEXTURE0+T),n.bindTexture(t.TEXTURE_2D,H.__webglTexture)}function w(R,T){var H=i.get(R);if(R.image.length===6)if(R.version>0&&H.__version!==R.version){H.__image__webglTextureCube||(R.addEventListener("dispose",m),H.__image__webglTextureCube=t.createTexture(),a.textures++),n.activeTexture(t.TEXTURE0+T),n.bindTexture(t.TEXTURE_CUBE_MAP,H.__image__webglTextureCube),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,R.flipY);for(var O=R&&R.isCompressedTexture,B=R.image[0]&&R.image[0].isDataTexture,q=[],G=0;G<6;G++)!O&&!B?q[G]=u(R.image[G],r.maxCubemapSize):q[G]=B?R.image[G].image:R.image[G];var A=q[0],U=f(A),J=s.convert(R.format),$=s.convert(R.type);C(t.TEXTURE_CUBE_MAP,R,U);for(var G=0;G<6;G++)if(!O)B?n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+G,0,J,q[G].width,q[G].height,0,J,$,q[G].data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+G,0,J,J,$,q[G]);else for(var ie,re=q[G].mipmaps,de=0,me=re.length;de<me;de++)ie=re[de],R.format!==Tr&&R.format!==So?n.getCompressedTextureFormats().indexOf(J)>-1?n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+G,de,J,ie.width,ie.height,0,ie.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+G,de,J,ie.width,ie.height,0,J,$,ie.data);g(R,U)&&t.generateMipmap(t.TEXTURE_CUBE_MAP),H.__version=R.version,R.onUpdate&&R.onUpdate(R)}else n.activeTexture(t.TEXTURE0+T),n.bindTexture(t.TEXTURE_CUBE_MAP,H.__image__webglTextureCube)}function S(R,T){n.activeTexture(t.TEXTURE0+T),n.bindTexture(t.TEXTURE_CUBE_MAP,i.get(R).__webglTexture)}function C(R,T,H){var O;if(H?(t.texParameteri(R,t.TEXTURE_WRAP_S,s.convert(T.wrapS)),t.texParameteri(R,t.TEXTURE_WRAP_T,s.convert(T.wrapT)),t.texParameteri(R,t.TEXTURE_MAG_FILTER,s.convert(T.magFilter)),t.texParameteri(R,t.TEXTURE_MIN_FILTER,s.convert(T.minFilter))):(t.texParameteri(R,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(R,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),(T.wrapS!==ni||T.wrapT!==ni)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",T),t.texParameteri(R,t.TEXTURE_MAG_FILTER,v(T.magFilter)),t.texParameteri(R,t.TEXTURE_MIN_FILTER,v(T.minFilter)),T.minFilter!==ii&&T.minFilter!==$n&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",T)),O=e.get("EXT_texture_filter_anisotropic"),O){if(T.type===wo&&e.get("OES_texture_float_linear")===null||T.type===_p&&e.get("OES_texture_half_float_linear")===null)return;(T.anisotropy>1||i.get(T).__currentAnisotropy)&&(t.texParameterf(R,O.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(T.anisotropy,r.getMaxAnisotropy())),i.get(T).__currentAnisotropy=T.anisotropy)}}function L(R,T,H){R.__webglInit===void 0&&(R.__webglInit=!0,T.addEventListener("dispose",m),R.__webglTexture=t.createTexture(),a.textures++),n.activeTexture(t.TEXTURE0+H),n.bindTexture(t.TEXTURE_2D,R.__webglTexture),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,T.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,T.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,T.unpackAlignment);var O=u(T.image,r.maxTextureSize);p(T)&&f(O)===!1&&(O=d(O));var B=f(O),q=s.convert(T.format),G=s.convert(T.type);C(t.TEXTURE_2D,T,B);var A,U=T.mipmaps;if(T.isDepthTexture){var J=t.DEPTH_COMPONENT;if(T.type===wo){if(!l)throw new Error("Float Depth Texture only supported in WebGL2.0");J=t.DEPTH_COMPONENT32F}else l&&(J=t.DEPTH_COMPONENT16);T.format===Ks&&J===t.DEPTH_COMPONENT&&T.type!==Lc&&T.type!==ix&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),T.type=Lc,G=s.convert(T.type)),T.format===Eo&&(J=t.DEPTH_STENCIL,T.type!==Ic&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),T.type=Ic,G=s.convert(T.type))),n.texImage2D(t.TEXTURE_2D,0,J,O.width,O.height,0,q,G,null)}else if(T.isDataTexture)if(U.length>0&&B){for(var $=0,ie=U.length;$<ie;$++)A=U[$],n.texImage2D(t.TEXTURE_2D,$,q,A.width,A.height,0,q,G,A.data);T.generateMipmaps=!1}else n.texImage2D(t.TEXTURE_2D,0,q,O.width,O.height,0,q,G,O.data);else if(T.isCompressedTexture)for(var $=0,ie=U.length;$<ie;$++)A=U[$],T.format!==Tr&&T.format!==So?n.getCompressedTextureFormats().indexOf(q)>-1?n.compressedTexImage2D(t.TEXTURE_2D,$,q,A.width,A.height,0,A.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(t.TEXTURE_2D,$,q,A.width,A.height,0,q,G,A.data);else if(U.length>0&&B){for(var $=0,ie=U.length;$<ie;$++)A=U[$],n.texImage2D(t.TEXTURE_2D,$,q,q,G,A);T.generateMipmaps=!1}else n.texImage2D(t.TEXTURE_2D,0,q,q,G,O);g(T,B)&&t.generateMipmap(t.TEXTURE_2D),R.__version=T.version,T.onUpdate&&T.onUpdate(T)}function M(R,T,H,O){var B=s.convert(T.texture.format),q=s.convert(T.texture.type);n.texImage2D(O,0,B,T.width,T.height,0,B,q,null),t.bindFramebuffer(t.FRAMEBUFFER,R),t.framebufferTexture2D(t.FRAMEBUFFER,H,O,i.get(T.texture).__webglTexture,0),t.bindFramebuffer(t.FRAMEBUFFER,null)}function E(R,T){t.bindRenderbuffer(t.RENDERBUFFER,R),T.depthBuffer&&!T.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,T.width,T.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,R)):T.depthBuffer&&T.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,T.width,T.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,R)):t.renderbufferStorage(t.RENDERBUFFER,t.RGBA4,T.width,T.height),t.bindRenderbuffer(t.RENDERBUFFER,null)}function N(R,T){var H=T&&T.isWebGLRenderTargetCube;if(H)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(t.FRAMEBUFFER,R),!(T.depthTexture&&T.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(T.depthTexture).__webglTexture||T.depthTexture.image.width!==T.width||T.depthTexture.image.height!==T.height)&&(T.depthTexture.image.width=T.width,T.depthTexture.image.height=T.height,T.depthTexture.needsUpdate=!0),b(T.depthTexture,0);var O=i.get(T.depthTexture).__webglTexture;if(T.depthTexture.format===Ks)t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,O,0);else if(T.depthTexture.format===Eo)t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,O,0);else throw new Error("Unknown depthTexture format")}function k(R){var T=i.get(R),H=R.isWebGLRenderTargetCube===!0;if(R.depthTexture){if(H)throw new Error("target.depthTexture not supported in Cube render targets");N(T.__webglFramebuffer,R)}else if(H){T.__webglDepthbuffer=[];for(var O=0;O<6;O++)t.bindFramebuffer(t.FRAMEBUFFER,T.__webglFramebuffer[O]),T.__webglDepthbuffer[O]=t.createRenderbuffer(),E(T.__webglDepthbuffer[O],R)}else t.bindFramebuffer(t.FRAMEBUFFER,T.__webglFramebuffer),T.__webglDepthbuffer=t.createRenderbuffer(),E(T.__webglDepthbuffer,R);t.bindFramebuffer(t.FRAMEBUFFER,null)}function F(R){var T=i.get(R),H=i.get(R.texture);R.addEventListener("dispose",y),H.__webglTexture=t.createTexture(),a.textures++;var O=R.isWebGLRenderTargetCube===!0,B=f(R);if(O){T.__webglFramebuffer=[];for(var q=0;q<6;q++)T.__webglFramebuffer[q]=t.createFramebuffer()}else T.__webglFramebuffer=t.createFramebuffer();if(O){n.bindTexture(t.TEXTURE_CUBE_MAP,H.__webglTexture),C(t.TEXTURE_CUBE_MAP,R.texture,B);for(var q=0;q<6;q++)M(T.__webglFramebuffer[q],R,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+q);g(R.texture,B)&&t.generateMipmap(t.TEXTURE_CUBE_MAP),n.bindTexture(t.TEXTURE_CUBE_MAP,null)}else n.bindTexture(t.TEXTURE_2D,H.__webglTexture),C(t.TEXTURE_2D,R.texture,B),M(T.__webglFramebuffer,R,t.COLOR_ATTACHMENT0,t.TEXTURE_2D),g(R.texture,B)&&t.generateMipmap(t.TEXTURE_2D),n.bindTexture(t.TEXTURE_2D,null);R.depthBuffer&&k(R)}function V(R){var T=R.texture,H=f(R);if(g(T,H)){var O=R.isWebGLRenderTargetCube?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,B=i.get(T).__webglTexture;n.bindTexture(O,B),t.generateMipmap(O),n.bindTexture(O,null)}}function ee(R){var T=R.id,H=o.frame;c[T]!==H&&(c[T]=H,R.update())}this.setTexture2D=b,this.setTextureCube=w,this.setTextureCubeDynamic=S,this.setupRenderTarget=F,this.updateRenderTargetMipmap=V}function eL(){var t={};function e(s){var a=s.uuid,o=t[a];return o===void 0&&(o={},t[a]=o),o}function n(s){delete t[s.uuid]}function i(s,a,o){var l=s.uuid,c=t[l];c[a]=o}function r(){t={}}return{get:e,remove:n,update:i,dispose:r}}function tL(t,e,n){function i(){var ne=!1,ye=new Vt,xe=null,Fe=new Vt(0,0,0,0);return{setMask:function(Pe){xe!==Pe&&!ne&&(t.colorMask(Pe,Pe,Pe,Pe),xe=Pe)},setLocked:function(Pe){ne=Pe},setClear:function(Pe,Ee,it,je,Je){Je===!0&&(Pe*=je,Ee*=je,it*=je),ye.set(Pe,Ee,it,je),Fe.equals(ye)===!1&&(t.clearColor(Pe,Ee,it,je),Fe.copy(ye))},reset:function(){ne=!1,xe=null,Fe.set(-1,0,0,0)}}}function r(){var ne=!1,ye=null,xe=null,Fe=null;return{setTest:function(Pe){Pe?$(t.DEPTH_TEST):ie(t.DEPTH_TEST)},setMask:function(Pe){ye!==Pe&&!ne&&(t.depthMask(Pe),ye=Pe)},setFunc:function(Pe){if(xe!==Pe){if(Pe)switch(Pe){case sA:t.depthFunc(t.NEVER);break;case aA:t.depthFunc(t.ALWAYS);break;case oA:t.depthFunc(t.LESS);break;case Lf:t.depthFunc(t.LEQUAL);break;case lA:t.depthFunc(t.EQUAL);break;case cA:t.depthFunc(t.GEQUAL);break;case hA:t.depthFunc(t.GREATER);break;case uA:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}else t.depthFunc(t.LEQUAL);xe=Pe}},setLocked:function(Pe){ne=Pe},setClear:function(Pe){Fe!==Pe&&(t.clearDepth(Pe),Fe=Pe)},reset:function(){ne=!1,ye=null,xe=null,Fe=null}}}function s(){var ne=!1,ye=null,xe=null,Fe=null,Pe=null,Ee=null,it=null,je=null,Je=null;return{setTest:function(Ge){Ge?$(t.STENCIL_TEST):ie(t.STENCIL_TEST)},setMask:function(Ge){ye!==Ge&&!ne&&(t.stencilMask(Ge),ye=Ge)},setFunc:function(Ge,We,at){(xe!==Ge||Fe!==We||Pe!==at)&&(t.stencilFunc(Ge,We,at),xe=Ge,Fe=We,Pe=at)},setOp:function(Ge,We,at){(Ee!==Ge||it!==We||je!==at)&&(t.stencilOp(Ge,We,at),Ee=Ge,it=We,je=at)},setLocked:function(Ge){ne=Ge},setClear:function(Ge){Je!==Ge&&(t.clearStencil(Ge),Je=Ge)},reset:function(){ne=!1,ye=null,xe=null,Fe=null,Pe=null,Ee=null,it=null,je=null,Je=null}}}var a=new i,o=new r,l=new s,c=t.getParameter(t.MAX_VERTEX_ATTRIBS),h=new Uint8Array(c),u=new Uint8Array(c),f=new Uint8Array(c),d={},p=null,g=null,v=null,m=null,y=null,x=null,_=null,b=null,w=null,S=!1,C=null,L=null,M=null,E=null,N=null,k=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS),F=!1,V=0,ee=t.getParameter(t.VERSION);ee.indexOf("WebGL")!==-1?(V=parseFloat(/^WebGL\ ([0-9])/.exec(ee)[1]),F=V>=1):ee.indexOf("OpenGL ES")!==-1&&(V=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(ee)[1]),F=V>=2);var R=null,T={},H=new Vt,O=new Vt;function B(ne,ye,xe){var Fe=new Uint8Array(4),Pe=t.createTexture();t.bindTexture(ne,Pe),t.texParameteri(ne,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(ne,t.TEXTURE_MAG_FILTER,t.NEAREST);for(var Ee=0;Ee<xe;Ee++)t.texImage2D(ye+Ee,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,Fe);return Pe}var q={};q[t.TEXTURE_2D]=B(t.TEXTURE_2D,t.TEXTURE_2D,1),q[t.TEXTURE_CUBE_MAP]=B(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),a.setClear(0,0,0,1),o.setClear(1),l.setClear(0),$(t.DEPTH_TEST),o.setFunc(Lf),pe(!1),he(rv),$(t.CULL_FACE),$(t.BLEND),me(Nh);function G(){for(var ne=0,ye=h.length;ne<ye;ne++)h[ne]=0}function A(ne){if(h[ne]=1,u[ne]===0&&(t.enableVertexAttribArray(ne),u[ne]=1),f[ne]!==0){var ye=e.get("ANGLE_instanced_arrays");ye.vertexAttribDivisorANGLE(ne,0),f[ne]=0}}function U(ne,ye){if(h[ne]=1,u[ne]===0&&(t.enableVertexAttribArray(ne),u[ne]=1),f[ne]!==ye){var xe=e.get("ANGLE_instanced_arrays");xe.vertexAttribDivisorANGLE(ne,ye),f[ne]=ye}}function J(){for(var ne=0,ye=u.length;ne!==ye;++ne)u[ne]!==h[ne]&&(t.disableVertexAttribArray(ne),u[ne]=0)}function $(ne){d[ne]!==!0&&(t.enable(ne),d[ne]=!0)}function ie(ne){d[ne]!==!1&&(t.disable(ne),d[ne]=!1)}function re(){if(p===null&&(p=[],e.get("WEBGL_compressed_texture_pvrtc")||e.get("WEBGL_compressed_texture_s3tc")||e.get("WEBGL_compressed_texture_etc1")||e.get("WEBGL_compressed_texture_astc")))for(var ne=t.getParameter(t.COMPRESSED_TEXTURE_FORMATS),ye=0;ye<ne.length;ye++)p.push(ne[ye]);return p}function de(ne){return g!==ne?(t.useProgram(ne),g=ne,!0):!1}function me(ne,ye,xe,Fe,Pe,Ee,it,je){if(ne!==Pf?$(t.BLEND):ie(t.BLEND),ne!==Z0){if(ne!==v||je!==S)switch(ne){case q0:je?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE,t.ONE,t.ONE)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.SRC_ALPHA,t.ONE));break;case $0:je?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ZERO,t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ONE_MINUS_SRC_ALPHA)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.ONE_MINUS_SRC_COLOR));break;case Y0:je?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.SRC_COLOR));break;default:je?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA)):(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA))}m=null,y=null,x=null,_=null,b=null,w=null}else Pe=Pe||ye,Ee=Ee||xe,it=it||Fe,(ye!==m||Pe!==_)&&(t.blendEquationSeparate(n.convert(ye),n.convert(Pe)),m=ye,_=Pe),(xe!==y||Fe!==x||Ee!==b||it!==w)&&(t.blendFuncSeparate(n.convert(xe),n.convert(Fe),n.convert(Ee),n.convert(it)),y=xe,x=Fe,b=Ee,w=it);v=ne,S=je}function X(ne,ye){ne.side===ml?ie(t.CULL_FACE):$(t.CULL_FACE);var xe=ne.side===Ta;ye&&(xe=!xe),pe(xe),ne.transparent===!0?me(ne.blending,ne.blendEquation,ne.blendSrc,ne.blendDst,ne.blendEquationAlpha,ne.blendSrcAlpha,ne.blendDstAlpha,ne.premultipliedAlpha):me(Pf),o.setFunc(ne.depthFunc),o.setTest(ne.depthTest),o.setMask(ne.depthWrite),a.setMask(ne.colorWrite),oe(ne.polygonOffset,ne.polygonOffsetFactor,ne.polygonOffsetUnits)}function pe(ne){C!==ne&&(ne?t.frontFace(t.CW):t.frontFace(t.CCW),C=ne)}function he(ne){ne!==XT?($(t.CULL_FACE),ne!==L&&(ne===rv?t.cullFace(t.BACK):ne===qT?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):ie(t.CULL_FACE),L=ne}function ce(ne){ne!==M&&(F&&t.lineWidth(ne),M=ne)}function oe(ne,ye,xe){ne?($(t.POLYGON_OFFSET_FILL),(E!==ye||N!==xe)&&(t.polygonOffset(ye,xe),E=ye,N=xe)):ie(t.POLYGON_OFFSET_FILL)}function ze(ne){ne?$(t.SCISSOR_TEST):ie(t.SCISSOR_TEST)}function Te(ne){ne===void 0&&(ne=t.TEXTURE0+k-1),R!==ne&&(t.activeTexture(ne),R=ne)}function z(ne,ye){R===null&&Te();var xe=T[R];xe===void 0&&(xe={type:void 0,texture:void 0},T[R]=xe),(xe.type!==ne||xe.texture!==ye)&&(t.bindTexture(ne,ye||q[ne]),xe.type=ne,xe.texture=ye)}function I(){try{t.compressedTexImage2D.apply(t,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function ue(){try{t.texImage2D.apply(t,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function we(ne){H.equals(ne)===!1&&(t.scissor(ne.x,ne.y,ne.z,ne.w),H.copy(ne))}function ve(ne){O.equals(ne)===!1&&(t.viewport(ne.x,ne.y,ne.z,ne.w),O.copy(ne))}function ge(){for(var ne=0;ne<u.length;ne++)u[ne]===1&&(t.disableVertexAttribArray(ne),u[ne]=0);d={},p=null,R=null,T={},g=null,v=null,C=null,L=null,a.reset(),o.reset(),l.reset()}return{buffers:{color:a,depth:o,stencil:l},initAttributes:G,enableAttribute:A,enableAttributeAndDivisor:U,disableUnusedAttributes:J,enable:$,disable:ie,getCompressedTextureFormats:re,useProgram:de,setBlending:me,setMaterial:X,setFlipSided:pe,setCullFace:he,setLineWidth:ce,setPolygonOffset:oe,setScissorTest:ze,activeTexture:Te,bindTexture:z,compressedTexImage2D:I,texImage2D:ue,scissor:we,viewport:ve,reset:ge}}function nL(t,e,n){var i;function r(){if(i!==void 0)return i;var _=e.get("EXT_texture_filter_anisotropic");return _!==null?i=t.getParameter(_.MAX_TEXTURE_MAX_ANISOTROPY_EXT):i=0,i}function s(_){if(_==="highp"){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";_="mediump"}return _==="mediump"&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}var a=n.precision!==void 0?n.precision:"highp",o=s(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);var l=n.logarithmicDepthBuffer===!0,c=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),h=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),u=t.getParameter(t.MAX_TEXTURE_SIZE),f=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),d=t.getParameter(t.MAX_VERTEX_ATTRIBS),p=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),g=t.getParameter(t.MAX_VARYING_VECTORS),v=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),m=h>0,y=!!e.get("OES_texture_float"),x=m&&y;return{getMaxAnisotropy:r,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:l,maxTextures:c,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:f,maxAttributes:d,maxVertexUniforms:p,maxVaryings:g,maxFragmentUniforms:v,vertexTextures:m,floatFragmentTextures:y,floatVertexTextures:x}}function mn(t,e,n,i){er.call(this),this.type="PerspectiveCamera",this.fov=t!==void 0?t:50,this.zoom=1,this.near=n!==void 0?n:.1,this.far=i!==void 0?i:2e3,this.focus=10,this.aspect=e!==void 0?e:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}mn.prototype=Object.assign(Object.create(er.prototype),{constructor:mn,isPerspectiveCamera:!0,copy:function(t,e){return er.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){var e=.5*this.getFilmHeight()/t;this.fov=wt.RAD2DEG*2*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){var t=Math.tan(wt.DEG2RAD*.5*this.fov);return .5*this.getFilmHeight()/t},getEffectiveFOV:function(){return wt.RAD2DEG*2*Math.atan(Math.tan(wt.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,i,r,s){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=this.near,e=t*Math.tan(wt.DEG2RAD*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i,s=this.view;if(this.view!==null&&this.view.enabled){var a=s.fullWidth,o=s.fullHeight;r+=s.offsetX*i/a,e-=s.offsetY*n/o,i*=s.width/a,n*=s.height/o}var l=this.filmOffset;l!==0&&(r+=t*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far)},toJSON:function(t){var e=nt.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});function Hf(t){mn.call(this),this.cameras=t||[]}Hf.prototype=Object.assign(Object.create(mn.prototype),{constructor:Hf,isArrayCamera:!0});function yx(t){var e=this,n=null,i=null,r=null,s=new xt,a=new xt;typeof window<"u"&&"VRFrameData"in window&&(i=new window.VRFrameData);var o=new xt,l=new mn;l.bounds=new Vt(0,0,.5,1),l.layers.enable(1);var c=new mn;c.bounds=new Vt(.5,0,.5,1),c.layers.enable(2);var h=new Hf([l,c]);h.layers.enable(1),h.layers.enable(2);var u,f;function d(){if(n!==null&&n.isPresenting){var p=n.getEyeParameters("left"),g=p.renderWidth,v=p.renderHeight;f=t.getPixelRatio(),u=t.getSize(),t.setDrawingBufferSize(g*2,v,1)}else e.enabled&&t.setDrawingBufferSize(u.width,u.height,f)}typeof window<"u"&&window.addEventListener("vrdisplaypresentchange",d,!1),this.enabled=!1,this.userHeight=1.6,this.getDevice=function(){return n},this.setDevice=function(p){p!==void 0&&(n=p)},this.setPoseTarget=function(p){p!==void 0&&(r=p)},this.getCamera=function(p){if(n===null)return p;n.depthNear=p.near,n.depthFar=p.far,n.getFrameData(i);var g=i.pose,v=r!==null?r:p;g.position!==null?v.position.fromArray(g.position):v.position.set(0,0,0),g.orientation!==null&&v.quaternion.fromArray(g.orientation);var m=n.stageParameters;if(m?s.fromArray(m.sittingToStandingTransform):s.makeTranslation(0,e.userHeight,0),v.position.applyMatrix4(s),v.updateMatrixWorld(),n.isPresenting===!1)return p;l.near=p.near,c.near=p.near,l.far=p.far,c.far=p.far,h.matrixWorld.copy(p.matrixWorld),h.matrixWorldInverse.copy(p.matrixWorldInverse),l.matrixWorldInverse.fromArray(i.leftViewMatrix),c.matrixWorldInverse.fromArray(i.rightViewMatrix),a.getInverse(s),l.matrixWorldInverse.multiply(a),c.matrixWorldInverse.multiply(a);var y=v.parent;y!==null&&(o.getInverse(y.matrixWorld),l.matrixWorldInverse.multiply(o),c.matrixWorldInverse.multiply(o)),l.matrixWorld.getInverse(l.matrixWorldInverse),c.matrixWorld.getInverse(c.matrixWorldInverse),l.projectionMatrix.fromArray(i.leftProjectionMatrix),c.projectionMatrix.fromArray(i.rightProjectionMatrix),h.projectionMatrix.copy(l.projectionMatrix);var x=n.getLayers();if(x.length){var _=x[0];_.leftBounds!==null&&_.leftBounds.length===4&&l.bounds.fromArray(_.leftBounds),_.rightBounds!==null&&_.rightBounds.length===4&&c.bounds.fromArray(_.rightBounds)}return h},this.getStandingMatrix=function(){return s},this.submitFrame=function(){n&&n.isPresenting&&n.submitFrame()},this.dispose=function(){typeof window<"u"&&window.removeEventListener("vrdisplaypresentchange",d)}}function iL(t){var e={};return{get:function(n){if(e[n]!==void 0)return e[n];var i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case"WEBGL_compressed_texture_etc1":i=t.getExtension("WEBGL_compressed_texture_etc1");break;default:i=t.getExtension(n)}return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),e[n]=i,i}}}function rL(){var t=this,e=null,n=0,i=!1,r=!1,s=new di,a=new Yn,o={value:null,needsUpdate:!1};this.uniform=o,this.numPlanes=0,this.numIntersection=0,this.init=function(h,u,f){var d=h.length!==0||u||n!==0||i;return i=u,e=c(h,f,0),n=h.length,d},this.beginShadows=function(){r=!0,c(null)},this.endShadows=function(){r=!1,l()},this.setState=function(h,u,f,d,p,g){if(!i||h===null||h.length===0||r&&!f)r?c(null):l();else{var v=r?0:n,m=v*4,y=p.clippingState||null;o.value=y,y=c(h,d,m,g);for(var x=0;x!==m;++x)y[x]=e[x];p.clippingState=y,this.numIntersection=u?this.numPlanes:0,this.numPlanes+=v}};function l(){o.value!==e&&(o.value=e,o.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function c(h,u,f,d){var p=h!==null?h.length:0,g=null;if(p!==0){if(g=o.value,d!==!0||g===null){var v=f+p*4,m=u.matrixWorldInverse;a.getNormalMatrix(m),(g===null||g.length<v)&&(g=new Float32Array(v));for(var y=0,x=f;y!==p;++y,x+=4)s.copy(h[y]).applyMatrix4(m,a),s.normal.toArray(g,x),g[x+3]=s.constant}o.value=g,o.needsUpdate=!0}return t.numPlanes=p,g}}function sL(t,e){function n(i){var r;if(i===pr)return t.REPEAT;if(i===ni)return t.CLAMP_TO_EDGE;if(i===ra)return t.MIRRORED_REPEAT;if(i===ii)return t.NEAREST;if(i===gp)return t.NEAREST_MIPMAP_NEAREST;if(i===yp)return t.NEAREST_MIPMAP_LINEAR;if(i===$n)return t.LINEAR;if(i===nx)return t.LINEAR_MIPMAP_NEAREST;if(i===Uh)return t.LINEAR_MIPMAP_LINEAR;if(i===xp)return t.UNSIGNED_BYTE;if(i===_A)return t.UNSIGNED_SHORT_4_4_4_4;if(i===MA)return t.UNSIGNED_SHORT_5_5_5_1;if(i===bA)return t.UNSIGNED_SHORT_5_6_5;if(i===gA)return t.BYTE;if(i===yA)return t.SHORT;if(i===Lc)return t.UNSIGNED_SHORT;if(i===xA)return t.INT;if(i===ix)return t.UNSIGNED_INT;if(i===wo)return t.FLOAT;if(i===_p&&(r=e.get("OES_texture_half_float"),r!==null))return r.HALF_FLOAT_OES;if(i===wA)return t.ALPHA;if(i===So)return t.RGB;if(i===Tr)return t.RGBA;if(i===SA)return t.LUMINANCE;if(i===EA)return t.LUMINANCE_ALPHA;if(i===Ks)return t.DEPTH_COMPONENT;if(i===Eo)return t.DEPTH_STENCIL;if(i===j0)return t.FUNC_ADD;if(i===YT)return t.FUNC_SUBTRACT;if(i===ZT)return t.FUNC_REVERSE_SUBTRACT;if(i===jT)return t.ZERO;if(i===JT)return t.ONE;if(i===KT)return t.SRC_COLOR;if(i===QT)return t.ONE_MINUS_SRC_COLOR;if(i===J0)return t.SRC_ALPHA;if(i===K0)return t.ONE_MINUS_SRC_ALPHA;if(i===eA)return t.DST_ALPHA;if(i===tA)return t.ONE_MINUS_DST_ALPHA;if(i===nA)return t.DST_COLOR;if(i===iA)return t.ONE_MINUS_DST_COLOR;if(i===rA)return t.SRC_ALPHA_SATURATE;if((i===ov||i===lv||i===cv||i===hv)&&(r=e.get("WEBGL_compressed_texture_s3tc"),r!==null)){if(i===ov)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===lv)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===cv)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===hv)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((i===uv||i===fv||i===dv||i===pv)&&(r=e.get("WEBGL_compressed_texture_pvrtc"),r!==null)){if(i===uv)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===fv)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===dv)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===pv)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(i===TA&&(r=e.get("WEBGL_compressed_texture_etc1"),r!==null))return r.COMPRESSED_RGB_ETC1_WEBGL;if((i===AA||i===CA||i===RA||i===PA||i===LA||i===IA||i===DA||i===NA||i===BA||i===UA||i===FA||i===OA||i===zA||i===GA)&&(r=e.get("WEBGL_compressed_texture_astc"),r!==null))return i;if((i===sv||i===av)&&(r=e.get("EXT_blend_minmax"),r!==null)){if(i===sv)return r.MIN_EXT;if(i===av)return r.MAX_EXT}return i===Ic&&(r=e.get("WEBGL_depth_texture"),r!==null)?r.UNSIGNED_INT_24_8_WEBGL:0}return{convert:n}}function aL(){var t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];var n;switch(e.type){case"DirectionalLight":n={direction:new j,color:new dt,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new qe};break;case"SpotLight":n={position:new j,direction:new j,color:new dt,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new qe};break;case"PointLight":n={position:new j,color:new dt,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new qe,shadowCameraNear:1,shadowCameraFar:1e3};break;case"HemisphereLight":n={direction:new j,skyColor:new dt,groundColor:new dt};break;case"RectAreaLight":n={color:new dt,position:new j,halfWidth:new j,halfHeight:new j};break}return t[e.id]=n,n}}}var oL=0;function lL(){var t=new aL,e={id:oL++,hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},n=new j,i=new xt,r=new xt;function s(a,o,l){for(var c=0,h=0,u=0,f=0,d=0,p=0,g=0,v=0,m=l.matrixWorldInverse,y=0,x=a.length;y<x;y++){var _=a[y],b=_.color,w=_.intensity,S=_.distance,C=_.shadow&&_.shadow.map?_.shadow.map.texture:null;if(_.isAmbientLight)c+=b.r*w,h+=b.g*w,u+=b.b*w;else if(_.isDirectionalLight){var L=t.get(_);if(L.color.copy(_.color).multiplyScalar(_.intensity),L.direction.setFromMatrixPosition(_.matrixWorld),n.setFromMatrixPosition(_.target.matrixWorld),L.direction.sub(n),L.direction.transformDirection(m),L.shadow=_.castShadow,_.castShadow){var M=_.shadow;L.shadowBias=M.bias,L.shadowRadius=M.radius,L.shadowMapSize=M.mapSize}e.directionalShadowMap[f]=C,e.directionalShadowMatrix[f]=_.shadow.matrix,e.directional[f]=L,f++}else if(_.isSpotLight){var L=t.get(_);if(L.position.setFromMatrixPosition(_.matrixWorld),L.position.applyMatrix4(m),L.color.copy(b).multiplyScalar(w),L.distance=S,L.direction.setFromMatrixPosition(_.matrixWorld),n.setFromMatrixPosition(_.target.matrixWorld),L.direction.sub(n),L.direction.transformDirection(m),L.coneCos=Math.cos(_.angle),L.penumbraCos=Math.cos(_.angle*(1-_.penumbra)),L.decay=_.distance===0?0:_.decay,L.shadow=_.castShadow,_.castShadow){var M=_.shadow;L.shadowBias=M.bias,L.shadowRadius=M.radius,L.shadowMapSize=M.mapSize}e.spotShadowMap[p]=C,e.spotShadowMatrix[p]=_.shadow.matrix,e.spot[p]=L,p++}else if(_.isRectAreaLight){var L=t.get(_);L.color.copy(b).multiplyScalar(w),L.position.setFromMatrixPosition(_.matrixWorld),L.position.applyMatrix4(m),r.identity(),i.copy(_.matrixWorld),i.premultiply(m),r.extractRotation(i),L.halfWidth.set(_.width*.5,0,0),L.halfHeight.set(0,_.height*.5,0),L.halfWidth.applyMatrix4(r),L.halfHeight.applyMatrix4(r),e.rectArea[g]=L,g++}else if(_.isPointLight){var L=t.get(_);if(L.position.setFromMatrixPosition(_.matrixWorld),L.position.applyMatrix4(m),L.color.copy(_.color).multiplyScalar(_.intensity),L.distance=_.distance,L.decay=_.distance===0?0:_.decay,L.shadow=_.castShadow,_.castShadow){var M=_.shadow;L.shadowBias=M.bias,L.shadowRadius=M.radius,L.shadowMapSize=M.mapSize,L.shadowCameraNear=M.camera.near,L.shadowCameraFar=M.camera.far}e.pointShadowMap[d]=C,e.pointShadowMatrix[d]=_.shadow.matrix,e.point[d]=L,d++}else if(_.isHemisphereLight){var L=t.get(_);L.direction.setFromMatrixPosition(_.matrixWorld),L.direction.transformDirection(m),L.direction.normalize(),L.skyColor.copy(_.color).multiplyScalar(w),L.groundColor.copy(_.groundColor).multiplyScalar(w),e.hemi[v]=L,v++}}e.ambient[0]=c,e.ambient[1]=h,e.ambient[2]=u,e.directional.length=f,e.spot.length=p,e.rectArea.length=g,e.point.length=d,e.hemi.length=v,e.hash=e.id+","+f+","+d+","+p+","+g+","+v+","+o.length}return{setup:s,state:e}}function cL(){var t=new lL,e=[],n=[],i=[];function r(){e.length=0,n.length=0,i.length=0}function s(h){e.push(h)}function a(h){n.push(h)}function o(h){i.push(h)}function l(h){t.setup(e,n,h)}var c={lightsArray:e,shadowsArray:n,spritesArray:i,lights:t};return{init:r,state:c,setupLights:l,pushLight:s,pushShadow:a,pushSprite:o}}function hL(){var t={};function e(i,r){var s=i.id+","+r.id,a=t[s];return a===void 0&&(a=new cL,t[s]=a),a}function n(){t={}}return{get:e,dispose:n}}function xx(t){console.log("THREE.WebGLRenderer",WT),t=t||{};var e=t.canvas!==void 0?t.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),n=t.context!==void 0?t.context:null,i=t.alpha!==void 0?t.alpha:!1,r=t.depth!==void 0?t.depth:!0,s=t.stencil!==void 0?t.stencil:!0,a=t.antialias!==void 0?t.antialias:!1,o=t.premultipliedAlpha!==void 0?t.premultipliedAlpha:!0,l=t.preserveDrawingBuffer!==void 0?t.preserveDrawingBuffer:!1,c=t.powerPreference!==void 0?t.powerPreference:"default",h=null,u=null;this.domElement=e,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=Q0,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var f=this,d=!1,p=null,g=null,v=-1,m="",y=null,x=null,_=new Vt,b=new Vt,w=null,S=0,C=e.width,L=e.height,M=1,E=new Vt(0,0,C,L),N=new Vt(0,0,C,L),k=!1,F=new Mp,V=new rL,ee=!1,R=!1,T=new xt,H=new j,O={geometries:0,textures:0},B={frame:0,calls:0,vertices:0,faces:0,points:0};this.info={render:B,memory:O,programs:null,autoReset:!0,reset:q};function q(){B.frame++,B.calls=0,B.vertices=0,B.faces=0,B.points=0}function G(){return p===null?M:1}var A;try{var U={alpha:i,depth:r,stencil:s,antialias:a,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:c};if(e.addEventListener("webglcontextlost",ye,!1),e.addEventListener("webglcontextrestored",xe,!1),A=n||e.getContext("webgl",U)||e.getContext("experimental-webgl",U),A===null)throw e.getContext("webgl")!==null?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.");A.getShaderPrecisionFormat===void 0&&(A.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(D){console.error("THREE.WebGLRenderer: "+D.message)}var J,$,ie,re,de,me,X,pe,he,ce,oe,ze,Te,z,I,ue,we;function ve(){J=new iL(A),J.get("WEBGL_depth_texture"),J.get("OES_texture_float"),J.get("OES_texture_float_linear"),J.get("OES_texture_half_float"),J.get("OES_texture_half_float_linear"),J.get("OES_standard_derivatives"),J.get("OES_element_index_uint"),J.get("ANGLE_instanced_arrays"),we=new sL(A,J),$=new nL(A,J,t),ie=new tL(A,J,we),ie.scissor(b.copy(N).multiplyScalar(M)),ie.viewport(_.copy(E).multiplyScalar(M)),re=new eL,de=new QP(A,J,ie,re,$,we,O,B),me=new RP(A),X=new HP(A,me,O),pe=new kP(X,B),Te=new zP(A),he=new KP(f,J,$),ce=new FP,oe=new hL,ze=new DP(f,ie,X,o),z=new VP(A,J,B),I=new GP(A,J,B),ue=new AP(f,A,ie,de,$),f.info.programs=he.programs,f.context=A,f.capabilities=$,f.extensions=J,f.properties=re,f.renderLists=ce,f.state=ie}ve();var ge=new yx(f);this.vr=ge;var ne=new px(f,pe,$.maxTextureSize);this.shadowMap=ne,this.getContext=function(){return A},this.getContextAttributes=function(){return A.getContextAttributes()},this.forceContextLoss=function(){var D=J.get("WEBGL_lose_context");D&&D.loseContext()},this.forceContextRestore=function(){var D=J.get("WEBGL_lose_context");D&&D.restoreContext()},this.getPixelRatio=function(){return M},this.setPixelRatio=function(D){D!==void 0&&(M=D,this.setSize(C,L,!1))},this.getSize=function(){return{width:C,height:L}},this.setSize=function(D,W,Y){var fe=ge.getDevice();if(fe&&fe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}C=D,L=W,e.width=D*M,e.height=W*M,Y!==!1&&(e.style.width=D+"px",e.style.height=W+"px"),this.setViewport(0,0,D,W)},this.getDrawingBufferSize=function(){return{width:C*M,height:L*M}},this.setDrawingBufferSize=function(D,W,Y){C=D,L=W,M=Y,e.width=D*Y,e.height=W*Y,this.setViewport(0,0,D,W)},this.getCurrentViewport=function(){return _},this.setViewport=function(D,W,Y,fe){E.set(D,L-W-fe,Y,fe),ie.viewport(_.copy(E).multiplyScalar(M))},this.setScissor=function(D,W,Y,fe){N.set(D,L-W-fe,Y,fe),ie.scissor(b.copy(N).multiplyScalar(M))},this.setScissorTest=function(D){ie.setScissorTest(k=D)},this.getClearColor=function(){return ze.getClearColor()},this.setClearColor=function(){ze.setClearColor.apply(ze,arguments)},this.getClearAlpha=function(){return ze.getClearAlpha()},this.setClearAlpha=function(){ze.setClearAlpha.apply(ze,arguments)},this.clear=function(D,W,Y){var fe=0;(D===void 0||D)&&(fe|=A.COLOR_BUFFER_BIT),(W===void 0||W)&&(fe|=A.DEPTH_BUFFER_BIT),(Y===void 0||Y)&&(fe|=A.STENCIL_BUFFER_BIT),A.clear(fe)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.clearTarget=function(D,W,Y,fe){this.setRenderTarget(D),this.clear(W,Y,fe)},this.dispose=function(){e.removeEventListener("webglcontextlost",ye,!1),e.removeEventListener("webglcontextrestored",xe,!1),ce.dispose(),oe.dispose(),re.dispose(),pe.dispose(),ge.dispose(),at()};function ye(D){D.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),d=!0}function xe(){console.log("THREE.WebGLRenderer: Context Restored."),d=!1,ve()}function Fe(D){var W=D.target;W.removeEventListener("dispose",Fe),Pe(W)}function Pe(D){Ee(D),re.remove(D)}function Ee(D){var W=re.get(D).program;D.program=void 0,W!==void 0&&he.releaseProgram(W)}function it(D,W,Y){D.render(function(fe){f.renderBufferImmediate(fe,W,Y)})}this.renderBufferImmediate=function(D,W,Y){ie.initAttributes();var fe=re.get(D);D.hasPositions&&!fe.position&&(fe.position=A.createBuffer()),D.hasNormals&&!fe.normal&&(fe.normal=A.createBuffer()),D.hasUvs&&!fe.uv&&(fe.uv=A.createBuffer()),D.hasColors&&!fe.color&&(fe.color=A.createBuffer());var P=W.getAttributes();if(D.hasPositions&&(A.bindBuffer(A.ARRAY_BUFFER,fe.position),A.bufferData(A.ARRAY_BUFFER,D.positionArray,A.DYNAMIC_DRAW),ie.enableAttribute(P.position),A.vertexAttribPointer(P.position,3,A.FLOAT,!1,0,0)),D.hasNormals){if(A.bindBuffer(A.ARRAY_BUFFER,fe.normal),!Y.isMeshPhongMaterial&&!Y.isMeshStandardMaterial&&!Y.isMeshNormalMaterial&&Y.flatShading===!0)for(var Q=0,le=D.count*3;Q<le;Q+=9){var Z=D.normalArray,ae=(Z[Q+0]+Z[Q+3]+Z[Q+6])/3,Se=(Z[Q+1]+Z[Q+4]+Z[Q+7])/3,Be=(Z[Q+2]+Z[Q+5]+Z[Q+8])/3;Z[Q+0]=ae,Z[Q+1]=Se,Z[Q+2]=Be,Z[Q+3]=ae,Z[Q+4]=Se,Z[Q+5]=Be,Z[Q+6]=ae,Z[Q+7]=Se,Z[Q+8]=Be}A.bufferData(A.ARRAY_BUFFER,D.normalArray,A.DYNAMIC_DRAW),ie.enableAttribute(P.normal),A.vertexAttribPointer(P.normal,3,A.FLOAT,!1,0,0)}D.hasUvs&&Y.map&&(A.bindBuffer(A.ARRAY_BUFFER,fe.uv),A.bufferData(A.ARRAY_BUFFER,D.uvArray,A.DYNAMIC_DRAW),ie.enableAttribute(P.uv),A.vertexAttribPointer(P.uv,2,A.FLOAT,!1,0,0)),D.hasColors&&Y.vertexColors!==fp&&(A.bindBuffer(A.ARRAY_BUFFER,fe.color),A.bufferData(A.ARRAY_BUFFER,D.colorArray,A.DYNAMIC_DRAW),ie.enableAttribute(P.color),A.vertexAttribPointer(P.color,3,A.FLOAT,!1,0,0)),ie.disableUnusedAttributes(),A.drawArrays(A.TRIANGLES,0,D.count),D.count=0},this.renderBufferDirect=function(D,W,Y,fe,P,Q){var le=P.isMesh&&P.matrixWorld.determinant()<0;ie.setMaterial(fe,le);var Z=Ue(D,W,fe,P),ae=Y.id+"_"+Z.id+"_"+(fe.wireframe===!0),Se=!1;ae!==m&&(m=ae,Se=!0),P.morphTargetInfluences&&(Te.update(P,Y,fe,Z),Se=!0);var Be=Y.index,Le=Y.attributes.position,Ae=1;fe.wireframe===!0&&(Be=X.getWireframeAttribute(Y),Ae=2);var Ie,Xe=z;Be!==null&&(Ie=me.get(Be),Xe=I,Xe.setIndex(Ie)),Se&&(je(fe,Z,Y),Be!==null&&A.bindBuffer(A.ELEMENT_ARRAY_BUFFER,Ie.buffer));var tt=1/0;Be!==null?tt=Be.count:Le!==void 0&&(tt=Le.count);var ut=Y.drawRange.start*Ae,Dt=Y.drawRange.count*Ae,bt=Q!==null?Q.start*Ae:0,yt=Q!==null?Q.count*Ae:1/0,It=Math.max(ut,bt),st=Math.min(tt,ut+Dt,bt+yt)-1,yn=Math.max(0,st-It+1);if(yn!==0){if(P.isMesh)if(fe.wireframe===!0)ie.setLineWidth(fe.wireframeLinewidth*G()),Xe.setMode(A.LINES);else switch(P.drawMode){case rx:Xe.setMode(A.TRIANGLES);break;case WA:Xe.setMode(A.TRIANGLE_STRIP);break;case XA:Xe.setMode(A.TRIANGLE_FAN);break}else if(P.isLine){var Tt=fe.linewidth;Tt===void 0&&(Tt=1),ie.setLineWidth(Tt*G()),P.isLineSegments?Xe.setMode(A.LINES):P.isLineLoop?Xe.setMode(A.LINE_LOOP):Xe.setMode(A.LINE_STRIP)}else P.isPoints&&Xe.setMode(A.POINTS);Y&&Y.isInstancedBufferGeometry?Y.maxInstancedCount>0&&Xe.renderInstances(Y,It,yn):Xe.render(It,yn)}};function je(D,W,Y,fe){if(Y&&Y.isInstancedBufferGeometry&&J.get("ANGLE_instanced_arrays")===null){console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}fe===void 0&&(fe=0),ie.initAttributes();var P=Y.attributes,Q=W.getAttributes(),le=D.defaultAttributeValues;for(var Z in Q){var ae=Q[Z];if(ae>=0){var Se=P[Z];if(Se!==void 0){var Be=Se.normalized,Le=Se.itemSize,Ae=me.get(Se);if(Ae===void 0)continue;var Ie=Ae.buffer,Xe=Ae.type,tt=Ae.bytesPerElement;if(Se.isInterleavedBufferAttribute){var ut=Se.data,Dt=ut.stride,bt=Se.offset;ut&&ut.isInstancedInterleavedBuffer?(ie.enableAttributeAndDivisor(ae,ut.meshPerAttribute),Y.maxInstancedCount===void 0&&(Y.maxInstancedCount=ut.meshPerAttribute*ut.count)):ie.enableAttribute(ae),A.bindBuffer(A.ARRAY_BUFFER,Ie),A.vertexAttribPointer(ae,Le,Xe,Be,Dt*tt,(fe*Dt+bt)*tt)}else Se.isInstancedBufferAttribute?(ie.enableAttributeAndDivisor(ae,Se.meshPerAttribute),Y.maxInstancedCount===void 0&&(Y.maxInstancedCount=Se.meshPerAttribute*Se.count)):ie.enableAttribute(ae),A.bindBuffer(A.ARRAY_BUFFER,Ie),A.vertexAttribPointer(ae,Le,Xe,Be,0,fe*Le*tt)}else if(le!==void 0){var yt=le[Z];if(yt!==void 0)switch(yt.length){case 2:A.vertexAttrib2fv(ae,yt);break;case 3:A.vertexAttrib3fv(ae,yt);break;case 4:A.vertexAttrib4fv(ae,yt);break;default:A.vertexAttrib1fv(ae,yt)}}}}ie.disableUnusedAttributes()}this.compile=function(D,W){u=oe.get(D,W),u.init(),D.traverse(function(Y){Y.isLight&&(u.pushLight(Y),Y.castShadow&&u.pushShadow(Y))}),u.setupLights(W),D.traverse(function(Y){if(Y.material)if(Array.isArray(Y.material))for(var fe=0;fe<Y.material.length;fe++)Ne(Y.material[fe],D.fog,Y);else Ne(Y.material,D.fog,Y)})};var Je=!1,Ge=null;function We(){Je||(se(),Je=!0)}function at(){Je=!1}function se(){var D=ge.getDevice();D&&D.isPresenting?D.requestAnimationFrame(Oe):window.requestAnimationFrame(Oe)}function Oe(D){Je!==!1&&(Ge(D),se())}this.animate=function(D){Ge=D,Ge!==null?We():at()},this.render=function(D,W,Y,fe){if(!(W&&W.isCamera)){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!d){m="",v=-1,y=null,D.autoUpdate===!0&&D.updateMatrixWorld(),W.parent===null&&W.updateMatrixWorld(),ge.enabled&&(W=ge.getCamera(W)),u=oe.get(D,W),u.init(),D.onBeforeRender(f,D,W,Y),T.multiplyMatrices(W.projectionMatrix,W.matrixWorldInverse),F.setFromMatrix(T),R=this.localClippingEnabled,ee=V.init(this.clippingPlanes,R,W),h=ce.get(D,W),h.init(),He(D,W,f.sortObjects),f.sortObjects===!0&&h.sort(),ee&&V.beginShadows();var P=u.state.shadowsArray;ne.render(P,D,W),u.setupLights(W),ee&&V.endShadows(),this.info.autoReset&&this.info.reset(),Y===void 0&&(Y=null),this.setRenderTarget(Y),ze.render(h,D,W,fe);var Q=h.opaque,le=h.transparent;if(D.overrideMaterial){var Z=D.overrideMaterial;Q.length&&et(Q,D,W,Z),le.length&&et(le,D,W,Z)}else Q.length&&et(Q,D,W),le.length&&et(le,D,W);var ae=u.state.spritesArray;ue.render(ae,D,W),Y&&de.updateRenderTargetMipmap(Y),ie.buffers.depth.setTest(!0),ie.buffers.depth.setMask(!0),ie.buffers.color.setMask(!0),ie.setPolygonOffset(!1),D.onAfterRender(f,D,W),ge.enabled&&ge.submitFrame(),h=null,u=null}};function He(D,W,Y){if(D.visible!==!1){var fe=D.layers.test(W.layers);if(fe){if(D.isLight)u.pushLight(D),D.castShadow&&u.pushShadow(D);else if(D.isSprite)(!D.frustumCulled||F.intersectsSprite(D))&&u.pushSprite(D);else if(D.isImmediateRenderObject)Y&&H.setFromMatrixPosition(D.matrixWorld).applyMatrix4(T),h.push(D,null,D.material,H.z,null);else if((D.isMesh||D.isLine||D.isPoints)&&(D.isSkinnedMesh&&D.skeleton.update(),!D.frustumCulled||F.intersectsObject(D))){Y&&H.setFromMatrixPosition(D.matrixWorld).applyMatrix4(T);var P=pe.update(D),Q=D.material;if(Array.isArray(Q))for(var le=P.groups,Z=0,ae=le.length;Z<ae;Z++){var Se=le[Z],Be=Q[Se.materialIndex];Be&&Be.visible&&h.push(D,P,Be,H.z,Se)}else Q.visible&&h.push(D,P,Q,H.z,null)}}for(var Le=D.children,Z=0,ae=Le.length;Z<ae;Z++)He(Le[Z],W,Y)}}function et(D,W,Y,fe){for(var P=0,Q=D.length;P<Q;P++){var le=D[P],Z=le.object,ae=le.geometry,Se=fe===void 0?le.material:fe,Be=le.group;if(Y.isArrayCamera){x=Y;for(var Le=Y.cameras,Ae=0,Ie=Le.length;Ae<Ie;Ae++){var Xe=Le[Ae];if(Z.layers.test(Xe.layers)){var tt=Xe.bounds,ut=tt.x*C,Dt=tt.y*L,bt=tt.z*C,yt=tt.w*L;ie.viewport(_.set(ut,Dt,bt,yt).multiplyScalar(M)),te(Z,W,Xe,ae,Se,Be)}}}else x=null,te(Z,W,Y,ae,Se,Be)}}function te(D,W,Y,fe,P,Q){if(D.onBeforeRender(f,W,Y,fe,P,Q),u=oe.get(W,x||Y),D.modelViewMatrix.multiplyMatrices(Y.matrixWorldInverse,D.matrixWorld),D.normalMatrix.getNormalMatrix(D.modelViewMatrix),D.isImmediateRenderObject){var le=D.isMesh&&D.matrixWorld.determinant()<0;ie.setMaterial(P,le);var Z=Ue(Y,W.fog,P,D);m="",it(D,Z,P)}else f.renderBufferDirect(Y,W.fog,fe,P,D,Q);D.onAfterRender(f,W,Y,fe,P,Q),u=oe.get(W,x||Y)}function Ne(D,W,Y){var fe=re.get(D),P=u.state.lights,Q=u.state.shadowsArray,le=he.getParameters(D,P.state,Q,W,V.numPlanes,V.numIntersection,Y),Z=he.getProgramCode(D,le),ae=fe.program,Se=!0;if(ae===void 0)D.addEventListener("dispose",Fe);else if(ae.code!==Z)Ee(D);else if(fe.lightsHash!==P.state.hash)re.update(D,"lightsHash",P.state.hash),Se=!1;else{if(le.shaderID!==void 0)return;Se=!1}if(Se){if(le.shaderID){var Be=Qs[le.shaderID];fe.shader={name:D.type,uniforms:Wn.clone(Be.uniforms),vertexShader:Be.vertexShader,fragmentShader:Be.fragmentShader}}else fe.shader={name:D.type,uniforms:D.uniforms,vertexShader:D.vertexShader,fragmentShader:D.fragmentShader};D.onBeforeCompile(fe.shader),ae=he.acquireProgram(D,fe.shader,le,Z),fe.program=ae,D.program=ae}var Le=ae.getAttributes();if(D.morphTargets){D.numSupportedMorphTargets=0;for(var Ae=0;Ae<f.maxMorphTargets;Ae++)Le["morphTarget"+Ae]>=0&&D.numSupportedMorphTargets++}if(D.morphNormals){D.numSupportedMorphNormals=0;for(var Ae=0;Ae<f.maxMorphNormals;Ae++)Le["morphNormal"+Ae]>=0&&D.numSupportedMorphNormals++}var Ie=fe.shader.uniforms;(!D.isShaderMaterial&&!D.isRawShaderMaterial||D.clipping===!0)&&(fe.numClippingPlanes=V.numPlanes,fe.numIntersection=V.numIntersection,Ie.clippingPlanes=V.uniform),fe.fog=W,fe.lightsHash=P.state.hash,D.lights&&(Ie.ambientLightColor.value=P.state.ambient,Ie.directionalLights.value=P.state.directional,Ie.spotLights.value=P.state.spot,Ie.rectAreaLights.value=P.state.rectArea,Ie.pointLights.value=P.state.point,Ie.hemisphereLights.value=P.state.hemi,Ie.directionalShadowMap.value=P.state.directionalShadowMap,Ie.directionalShadowMatrix.value=P.state.directionalShadowMatrix,Ie.spotShadowMap.value=P.state.spotShadowMap,Ie.spotShadowMatrix.value=P.state.spotShadowMatrix,Ie.pointShadowMap.value=P.state.pointShadowMap,Ie.pointShadowMatrix.value=P.state.pointShadowMatrix);var Xe=fe.program.getUniforms(),tt=Mr.seqWithValue(Xe.seq,Ie);fe.uniformsList=tt}function Ue(D,W,Y,fe){S=0;var P=re.get(Y),Q=u.state.lights;if(ee&&(R||D!==y)){var le=D===y&&Y.id===v;V.setState(Y.clippingPlanes,Y.clipIntersection,Y.clipShadows,D,P,le)}Y.needsUpdate===!1&&(P.program===void 0||Y.fog&&P.fog!==W||Y.lights&&P.lightsHash!==Q.state.hash||P.numClippingPlanes!==void 0&&(P.numClippingPlanes!==V.numPlanes||P.numIntersection!==V.numIntersection))&&(Y.needsUpdate=!0),Y.needsUpdate&&(Ne(Y,W,fe),Y.needsUpdate=!1);var Z=!1,ae=!1,Se=!1,Be=P.program,Le=Be.getUniforms(),Ae=P.shader.uniforms;if(ie.useProgram(Be.program)&&(Z=!0,ae=!0,Se=!0),Y.id!==v&&(v=Y.id,ae=!0),Z||D!==y){if(Le.setValue(A,"projectionMatrix",D.projectionMatrix),$.logarithmicDepthBuffer&&Le.setValue(A,"logDepthBufFC",2/(Math.log(D.far+1)/Math.LN2)),y!==(x||D)&&(y=x||D,ae=!0,Se=!0),Y.isShaderMaterial||Y.isMeshPhongMaterial||Y.isMeshStandardMaterial||Y.envMap){var Ie=Le.map.cameraPosition;Ie!==void 0&&Ie.setValue(A,H.setFromMatrixPosition(D.matrixWorld))}(Y.isMeshPhongMaterial||Y.isMeshLambertMaterial||Y.isMeshBasicMaterial||Y.isMeshStandardMaterial||Y.isShaderMaterial||Y.skinning)&&Le.setValue(A,"viewMatrix",D.matrixWorldInverse)}if(Y.skinning){Le.setOptional(A,fe,"bindMatrix"),Le.setOptional(A,fe,"bindMatrixInverse");var Xe=fe.skeleton;if(Xe){var tt=Xe.bones;if($.floatVertexTextures){if(Xe.boneTexture===void 0){var ut=Math.sqrt(tt.length*4);ut=wt.ceilPowerOfTwo(ut),ut=Math.max(ut,4);var Dt=new Float32Array(ut*ut*4);Dt.set(Xe.boneMatrices);var bt=new oa(Dt,ut,ut,Tr,wo);bt.needsUpdate=!0,Xe.boneMatrices=Dt,Xe.boneTexture=bt,Xe.boneTextureSize=ut}Le.setValue(A,"boneTexture",Xe.boneTexture),Le.setValue(A,"boneTextureSize",Xe.boneTextureSize)}else Le.setOptional(A,Xe,"boneMatrices")}}return ae&&(Le.setValue(A,"toneMappingExposure",f.toneMappingExposure),Le.setValue(A,"toneMappingWhitePoint",f.toneMappingWhitePoint),Y.lights&&_e(Ae,Se),W&&Y.fog&&gt(Ae,W),Y.isMeshBasicMaterial?Ke(Ae,Y):Y.isMeshLambertMaterial?(Ke(Ae,Y),be(Ae,Y)):Y.isMeshPhongMaterial?(Ke(Ae,Y),Y.isMeshToonMaterial?Ce(Ae,Y):Me(Ae,Y)):Y.isMeshStandardMaterial?(Ke(Ae,Y),Y.isMeshPhysicalMaterial?mt(Ae,Y):Re(Ae,Y)):Y.isMeshDepthMaterial?(Ke(Ae,Y),Ze(Ae,Y)):Y.isMeshDistanceMaterial?(Ke(Ae,Y),Ve(Ae,Y)):Y.isMeshNormalMaterial?(Ke(Ae,Y),$e(Ae,Y)):Y.isLineBasicMaterial?(lt(Ae,Y),Y.isLineDashedMaterial&&Et(Ae,Y)):Y.isPointsMaterial?_t(Ae,Y):Y.isShadowMaterial&&(Ae.color.value=Y.color,Ae.opacity.value=Y.opacity),Ae.ltc_1!==void 0&&(Ae.ltc_1.value=ft.LTC_1),Ae.ltc_2!==void 0&&(Ae.ltc_2.value=ft.LTC_2),Mr.upload(A,P.uniformsList,Ae,f)),Y.isShaderMaterial&&Y.uniformsNeedUpdate===!0&&(Mr.upload(A,P.uniformsList,Ae,f),Y.uniformsNeedUpdate=!1),Le.setValue(A,"modelViewMatrix",fe.modelViewMatrix),Le.setValue(A,"normalMatrix",fe.normalMatrix),Le.setValue(A,"modelMatrix",fe.matrixWorld),Be}function Ke(D,W){D.opacity.value=W.opacity,W.color&&(D.diffuse.value=W.color),W.emissive&&D.emissive.value.copy(W.emissive).multiplyScalar(W.emissiveIntensity),W.map&&(D.map.value=W.map),W.alphaMap&&(D.alphaMap.value=W.alphaMap),W.specularMap&&(D.specularMap.value=W.specularMap),W.envMap&&(D.envMap.value=W.envMap,D.flipEnvMap.value=W.envMap&&W.envMap.isCubeTexture?-1:1,D.reflectivity.value=W.reflectivity,D.refractionRatio.value=W.refractionRatio),W.lightMap&&(D.lightMap.value=W.lightMap,D.lightMapIntensity.value=W.lightMapIntensity),W.aoMap&&(D.aoMap.value=W.aoMap,D.aoMapIntensity.value=W.aoMapIntensity);var Y;if(W.map?Y=W.map:W.specularMap?Y=W.specularMap:W.displacementMap?Y=W.displacementMap:W.normalMap?Y=W.normalMap:W.bumpMap?Y=W.bumpMap:W.roughnessMap?Y=W.roughnessMap:W.metalnessMap?Y=W.metalnessMap:W.alphaMap?Y=W.alphaMap:W.emissiveMap&&(Y=W.emissiveMap),Y!==void 0){if(Y.isWebGLRenderTarget&&(Y=Y.texture),Y.matrixAutoUpdate===!0){var fe=Y.offset,P=Y.repeat,Q=Y.rotation,le=Y.center;Y.matrix.setUvTransform(fe.x,fe.y,P.x,P.y,Q,le.x,le.y)}D.uvTransform.value.copy(Y.matrix)}}function lt(D,W){D.diffuse.value=W.color,D.opacity.value=W.opacity}function Et(D,W){D.dashSize.value=W.dashSize,D.totalSize.value=W.dashSize+W.gapSize,D.scale.value=W.scale}function _t(D,W){if(D.diffuse.value=W.color,D.opacity.value=W.opacity,D.size.value=W.size*M,D.scale.value=L*.5,D.map.value=W.map,W.map!==null){if(W.map.matrixAutoUpdate===!0){var Y=W.map.offset,fe=W.map.repeat,P=W.map.rotation,Q=W.map.center;W.map.matrix.setUvTransform(Y.x,Y.y,fe.x,fe.y,P,Q.x,Q.y)}D.uvTransform.value.copy(W.map.matrix)}}function gt(D,W){D.fogColor.value=W.color,W.isFog?(D.fogNear.value=W.near,D.fogFar.value=W.far):W.isFogExp2&&(D.fogDensity.value=W.density)}function be(D,W){W.emissiveMap&&(D.emissiveMap.value=W.emissiveMap)}function Me(D,W){D.specular.value=W.specular,D.shininess.value=Math.max(W.shininess,1e-4),W.emissiveMap&&(D.emissiveMap.value=W.emissiveMap),W.bumpMap&&(D.bumpMap.value=W.bumpMap,D.bumpScale.value=W.bumpScale),W.normalMap&&(D.normalMap.value=W.normalMap,D.normalScale.value.copy(W.normalScale)),W.displacementMap&&(D.displacementMap.value=W.displacementMap,D.displacementScale.value=W.displacementScale,D.displacementBias.value=W.displacementBias)}function Ce(D,W){Me(D,W),W.gradientMap&&(D.gradientMap.value=W.gradientMap)}function Re(D,W){D.roughness.value=W.roughness,D.metalness.value=W.metalness,W.roughnessMap&&(D.roughnessMap.value=W.roughnessMap),W.metalnessMap&&(D.metalnessMap.value=W.metalnessMap),W.emissiveMap&&(D.emissiveMap.value=W.emissiveMap),W.bumpMap&&(D.bumpMap.value=W.bumpMap,D.bumpScale.value=W.bumpScale),W.normalMap&&(D.normalMap.value=W.normalMap,D.normalScale.value.copy(W.normalScale)),W.displacementMap&&(D.displacementMap.value=W.displacementMap,D.displacementScale.value=W.displacementScale,D.displacementBias.value=W.displacementBias),W.envMap&&(D.envMapIntensity.value=W.envMapIntensity)}function mt(D,W){D.clearCoat.value=W.clearCoat,D.clearCoatRoughness.value=W.clearCoatRoughness,Re(D,W)}function Ze(D,W){W.displacementMap&&(D.displacementMap.value=W.displacementMap,D.displacementScale.value=W.displacementScale,D.displacementBias.value=W.displacementBias)}function Ve(D,W){W.displacementMap&&(D.displacementMap.value=W.displacementMap,D.displacementScale.value=W.displacementScale,D.displacementBias.value=W.displacementBias),D.referencePosition.value.copy(W.referencePosition),D.nearDistance.value=W.nearDistance,D.farDistance.value=W.farDistance}function $e(D,W){W.bumpMap&&(D.bumpMap.value=W.bumpMap,D.bumpScale.value=W.bumpScale),W.normalMap&&(D.normalMap.value=W.normalMap,D.normalScale.value.copy(W.normalScale)),W.displacementMap&&(D.displacementMap.value=W.displacementMap,D.displacementScale.value=W.displacementScale,D.displacementBias.value=W.displacementBias)}function _e(D,W){D.ambientLightColor.needsUpdate=W,D.directionalLights.needsUpdate=W,D.pointLights.needsUpdate=W,D.spotLights.needsUpdate=W,D.rectAreaLights.needsUpdate=W,D.hemisphereLights.needsUpdate=W}function ke(){var D=S;return D>=$.maxTextures&&console.warn("THREE.WebGLRenderer: Trying to use "+D+" texture units while this GPU supports only "+$.maxTextures),S+=1,D}this.allocTextureUnit=ke,this.setTexture2D=function(){var D=!1;return function(Y,fe){Y&&Y.isWebGLRenderTarget&&(D||(console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),D=!0),Y=Y.texture),de.setTexture2D(Y,fe)}}(),this.setTexture=function(){var D=!1;return function(Y,fe){D||(console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),D=!0),de.setTexture2D(Y,fe)}}(),this.setTextureCube=function(){var D=!1;return function(Y,fe){Y&&Y.isWebGLRenderTargetCube&&(D||(console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),D=!0),Y=Y.texture),Y&&Y.isCubeTexture||Array.isArray(Y.image)&&Y.image.length===6?de.setTextureCube(Y,fe):de.setTextureCubeDynamic(Y,fe)}}(),this.getRenderTarget=function(){return p},this.setRenderTarget=function(D){p=D,D&&re.get(D).__webglFramebuffer===void 0&&de.setupRenderTarget(D);var W=null,Y=!1;if(D){var fe=re.get(D).__webglFramebuffer;D.isWebGLRenderTargetCube?(W=fe[D.activeCubeFace],Y=!0):W=fe,_.copy(D.viewport),b.copy(D.scissor),w=D.scissorTest}else _.copy(E).multiplyScalar(M),b.copy(N).multiplyScalar(M),w=k;if(g!==W&&(A.bindFramebuffer(A.FRAMEBUFFER,W),g=W),ie.viewport(_),ie.scissor(b),ie.setScissorTest(w),Y){var P=re.get(D.texture);A.framebufferTexture2D(A.FRAMEBUFFER,A.COLOR_ATTACHMENT0,A.TEXTURE_CUBE_MAP_POSITIVE_X+D.activeCubeFace,P.__webglTexture,D.activeMipMapLevel)}},this.readRenderTargetPixels=function(D,W,Y,fe,P,Q){if(!(D&&D.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}var le=re.get(D).__webglFramebuffer;if(le){var Z=!1;le!==g&&(A.bindFramebuffer(A.FRAMEBUFFER,le),Z=!0);try{var ae=D.texture,Se=ae.format,Be=ae.type;if(Se!==Tr&&we.convert(Se)!==A.getParameter(A.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(Be!==xp&&we.convert(Be)!==A.getParameter(A.IMPLEMENTATION_COLOR_READ_TYPE)&&!(Be===wo&&(J.get("OES_texture_float")||J.get("WEBGL_color_buffer_float")))&&!(Be===_p&&J.get("EXT_color_buffer_half_float"))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}A.checkFramebufferStatus(A.FRAMEBUFFER)===A.FRAMEBUFFER_COMPLETE?W>=0&&W<=D.width-fe&&Y>=0&&Y<=D.height-P&&A.readPixels(W,Y,fe,P,we.convert(Se),we.convert(Be),Q):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{Z&&A.bindFramebuffer(A.FRAMEBUFFER,g)}}},this.copyFramebufferToTexture=function(D,W,Y){var fe=W.image.width,P=W.image.height,Q=we.convert(W.format);this.setTexture2D(W,0),A.copyTexImage2D(A.TEXTURE_2D,Y||0,Q,D.x,D.y,fe,P,0)}}function Po(t,e){this.name="",this.color=new dt(t),this.density=e!==void 0?e:25e-5}Po.prototype.isFogExp2=!0;Po.prototype.clone=function(){return new Po(this.color.getHex(),this.density)};Po.prototype.toJSON=function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}};function Lo(t,e,n){this.name="",this.color=new dt(t),this.near=e!==void 0?e:1,this.far=n!==void 0?n:1e3}Lo.prototype.isFog=!0;Lo.prototype.clone=function(){return new Lo(this.color.getHex(),this.near,this.far)};Lo.prototype.toJSON=function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}};function kf(){nt.call(this),this.type="Scene",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0}kf.prototype=Object.assign(Object.create(nt.prototype),{constructor:kf,copy:function(t,e){return nt.prototype.copy.call(this,t,e),t.background!==null&&(this.background=t.background.clone()),t.fog!==null&&(this.fog=t.fog.clone()),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this},toJSON:function(t){var e=nt.prototype.toJSON.call(this,t);return this.background!==null&&(e.object.background=this.background.toJSON(t)),this.fog!==null&&(e.object.fog=this.fog.toJSON()),e}});function ps(t){Rt.call(this),this.type="SpriteMaterial",this.color=new dt(16777215),this.map=null,this.rotation=0,this.fog=!1,this.lights=!1,this.setValues(t)}ps.prototype=Object.create(Rt.prototype);ps.prototype.constructor=ps;ps.prototype.isSpriteMaterial=!0;ps.prototype.copy=function(t){return Rt.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.rotation=t.rotation,this};function Wf(t){nt.call(this),this.type="Sprite",this.material=t!==void 0?t:new ps,this.center=new qe(.5,.5)}Wf.prototype=Object.assign(Object.create(nt.prototype),{constructor:Wf,isSprite:!0,raycast:function(){var t=new j,e=new j,n=new j;return function(r,s){e.setFromMatrixPosition(this.matrixWorld),r.ray.closestPointToPoint(e,t),n.setFromMatrixScale(this.matrixWorld);var a=n.x*n.y/4;if(!(e.distanceToSquared(t)>a)){var o=r.ray.origin.distanceTo(t);o<r.near||o>r.far||s.push({distance:o,point:t.clone(),face:null,object:this})}}}(),clone:function(){return new this.constructor(this.material).copy(this)},copy:function(t){return nt.prototype.copy.call(this,t),t.center!==void 0&&this.center.copy(t.center),this}});function zc(){nt.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}zc.prototype=Object.assign(Object.create(nt.prototype),{constructor:zc,copy:function(t){nt.prototype.copy.call(this,t,!1);for(var e=t.levels,n=0,i=e.length;n<i;n++){var r=e[n];this.addLevel(r.object.clone(),r.distance)}return this},addLevel:function(t,e){e===void 0&&(e=0),e=Math.abs(e);for(var n=this.levels,i=0;i<n.length&&!(e<n[i].distance);i++);n.splice(i,0,{distance:e,object:t}),this.add(t)},getObjectForDistance:function(t){for(var e=this.levels,n=1,i=e.length;n<i&&!(t<e[n].distance);n++);return e[n-1].object},raycast:function(){var t=new j;return function(n,i){t.setFromMatrixPosition(this.matrixWorld);var r=n.ray.origin.distanceTo(t);this.getObjectForDistance(r).raycast(n,i)}}(),update:function(){var t=new j,e=new j;return function(i){var r=this.levels;if(r.length>1){t.setFromMatrixPosition(i.matrixWorld),e.setFromMatrixPosition(this.matrixWorld);var s=t.distanceTo(e);r[0].object.visible=!0;for(var a=1,o=r.length;a<o&&s>=r[a].distance;a++)r[a-1].object.visible=!1,r[a].object.visible=!0;for(;a<o;a++)r[a].object.visible=!1}}}(),toJSON:function(t){var e=nt.prototype.toJSON.call(this,t);e.object.levels=[];for(var n=this.levels,i=0,r=n.length;i<r;i++){var s=n[i];e.object.levels.push({object:s.object.uuid,distance:s.distance})}return e}});function Gc(t,e){if(t=t||[],this.bones=t.slice(0),this.boneMatrices=new Float32Array(this.bones.length*16),e===void 0)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new xt)}}Object.assign(Gc.prototype,{calculateInverses:function(){this.boneInverses=[];for(var t=0,e=this.bones.length;t<e;t++){var n=new xt;this.bones[t]&&n.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(n)}},pose:function(){var t,e,n;for(e=0,n=this.bones.length;e<n;e++)t=this.bones[e],t&&t.matrixWorld.getInverse(this.boneInverses[e]);for(e=0,n=this.bones.length;e<n;e++)t=this.bones[e],t&&(t.parent&&t.parent.isBone?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))},update:function(){var t=new xt,e=new xt;return function(){for(var i=this.bones,r=this.boneInverses,s=this.boneMatrices,a=this.boneTexture,o=0,l=i.length;o<l;o++){var c=i[o]?i[o].matrixWorld:e;t.multiplyMatrices(c,r[o]),t.toArray(s,o*16)}a!==void 0&&(a.needsUpdate=!0)}}(),clone:function(){return new Gc(this.bones,this.boneInverses)},getBoneByName:function(t){for(var e=0,n=this.bones.length;e<n;e++){var i=this.bones[e];if(i.name===t)return i}}});function Xf(){nt.call(this),this.type="Bone"}Xf.prototype=Object.assign(Object.create(nt.prototype),{constructor:Xf,isBone:!0});function qf(t,e){Fn.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new xt,this.bindMatrixInverse=new xt;var n=this.initBones(),i=new Gc(n);this.bind(i,this.matrixWorld),this.normalizeSkinWeights()}qf.prototype=Object.assign(Object.create(Fn.prototype),{constructor:qf,isSkinnedMesh:!0,initBones:function(){var t=[],e,n,i,r;if(this.geometry&&this.geometry.bones!==void 0){for(i=0,r=this.geometry.bones.length;i<r;i++)n=this.geometry.bones[i],e=new Xf,t.push(e),e.name=n.name,e.position.fromArray(n.pos),e.quaternion.fromArray(n.rotq),n.scl!==void 0&&e.scale.fromArray(n.scl);for(i=0,r=this.geometry.bones.length;i<r;i++)n=this.geometry.bones[i],n.parent!==-1&&n.parent!==null&&t[n.parent]!==void 0?t[n.parent].add(t[i]):this.add(t[i])}return this.updateMatrixWorld(!0),t},bind:function(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){var t,e;if(this.geometry&&this.geometry.isGeometry)for(e=0;e<this.geometry.skinWeights.length;e++){var n=this.geometry.skinWeights[e];t=1/n.manhattanLength(),t!==1/0?n.multiplyScalar(t):n.set(1,0,0,0)}else if(this.geometry&&this.geometry.isBufferGeometry){var i=new Vt,r=this.geometry.attributes.skinWeight;for(e=0;e<r.count;e++)i.x=r.getX(e),i.y=r.getY(e),i.z=r.getZ(e),i.w=r.getW(e),t=1/i.manhattanLength(),t!==1/0?i.multiplyScalar(t):i.set(1,0,0,0),r.setXYZW(e,i.x,i.y,i.z,i.w)}},updateMatrixWorld:function(t){Fn.prototype.updateMatrixWorld.call(this,t),this.bindMode==="attached"?this.bindMatrixInverse.getInverse(this.matrixWorld):this.bindMode==="detached"?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});function Xt(t){Rt.call(this),this.type="LineBasicMaterial",this.color=new dt(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.lights=!1,this.setValues(t)}Xt.prototype=Object.create(Rt.prototype);Xt.prototype.constructor=Xt;Xt.prototype.isLineBasicMaterial=!0;Xt.prototype.copy=function(t){return Rt.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this};function Zn(t,e,n){if(n===1)return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),new Yt(t,e);nt.call(this),this.type="Line",this.geometry=t!==void 0?t:new ot,this.material=e!==void 0?e:new Xt({color:Math.random()*16777215})}Zn.prototype=Object.assign(Object.create(nt.prototype),{constructor:Zn,isLine:!0,computeLineDistances:function(){var t=new j,e=new j;return function(){var i=this.geometry;if(i.isBufferGeometry)if(i.index===null){for(var r=i.attributes.position,s=[0],a=1,o=r.count;a<o;a++)t.fromBufferAttribute(r,a-1),e.fromBufferAttribute(r,a),s[a]=s[a-1],s[a]+=t.distanceTo(e);i.addAttribute("lineDistance",new THREE.Float32BufferAttribute(s,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(i.isGeometry){var l=i.vertices,s=i.lineDistances;s[0]=0;for(var a=1,o=l.length;a<o;a++)s[a]=s[a-1],s[a]+=l[a-1].distanceTo(l[a])}return this}}(),raycast:function(){var t=new xt,e=new Ra,n=new gi;return function(r,s){var a=r.linePrecision,o=a*a,l=this.geometry,c=this.matrixWorld;if(l.boundingSphere===null&&l.computeBoundingSphere(),n.copy(l.boundingSphere),n.applyMatrix4(c),r.ray.intersectsSphere(n)!==!1){t.getInverse(c),e.copy(r.ray).applyMatrix4(t);var h=new j,u=new j,f=new j,d=new j,p=this&&this.isLineSegments?2:1;if(l.isBufferGeometry){var g=l.index,v=l.attributes,m=v.position.array;if(g!==null)for(var y=g.array,x=0,_=y.length-1;x<_;x+=p){var b=y[x],w=y[x+1];h.fromArray(m,b*3),u.fromArray(m,w*3);var S=e.distanceSqToSegment(h,u,d,f);if(!(S>o)){d.applyMatrix4(this.matrixWorld);var C=r.ray.origin.distanceTo(d);C<r.near||C>r.far||s.push({distance:C,point:f.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}else for(var x=0,_=m.length/3-1;x<_;x+=p){h.fromArray(m,3*x),u.fromArray(m,3*x+3);var S=e.distanceSqToSegment(h,u,d,f);if(!(S>o)){d.applyMatrix4(this.matrixWorld);var C=r.ray.origin.distanceTo(d);C<r.near||C>r.far||s.push({distance:C,point:f.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}}else if(l.isGeometry)for(var L=l.vertices,M=L.length,x=0;x<M-1;x+=p){var S=e.distanceSqToSegment(L[x],L[x+1],d,f);if(!(S>o)){d.applyMatrix4(this.matrixWorld);var C=r.ray.origin.distanceTo(d);C<r.near||C>r.far||s.push({distance:C,point:f.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});function Yt(t,e){Zn.call(this,t,e),this.type="LineSegments"}Yt.prototype=Object.assign(Object.create(Zn.prototype),{constructor:Yt,isLineSegments:!0,computeLineDistances:function(){var t=new j,e=new j;return function(){var i=this.geometry;if(i.isBufferGeometry)if(i.index===null){for(var r=i.attributes.position,s=[],a=0,o=r.count;a<o;a+=2)t.fromBufferAttribute(r,a),e.fromBufferAttribute(r,a+1),s[a]=a===0?0:s[a-1],s[a+1]=s[a]+t.distanceTo(e);i.addAttribute("lineDistance",new THREE.Float32BufferAttribute(s,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(i.isGeometry)for(var l=i.vertices,s=i.lineDistances,a=0,o=l.length;a<o;a+=2)t.copy(l[a]),e.copy(l[a+1]),s[a]=a===0?0:s[a-1],s[a+1]=s[a]+t.distanceTo(e);return this}}()});function $f(t,e){Zn.call(this,t,e),this.type="LineLoop"}$f.prototype=Object.assign(Object.create(Zn.prototype),{constructor:$f,isLineLoop:!0});function ms(t){Rt.call(this),this.type="PointsMaterial",this.color=new dt(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.lights=!1,this.setValues(t)}ms.prototype=Object.create(Rt.prototype);ms.prototype.constructor=ms;ms.prototype.isPointsMaterial=!0;ms.prototype.copy=function(t){return Rt.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this};function Yf(t,e){nt.call(this),this.type="Points",this.geometry=t!==void 0?t:new ot,this.material=e!==void 0?e:new ms({color:Math.random()*16777215})}Yf.prototype=Object.assign(Object.create(nt.prototype),{constructor:Yf,isPoints:!0,raycast:function(){var t=new xt,e=new Ra,n=new gi;return function(r,s){var a=this,o=this.geometry,l=this.matrixWorld,c=r.params.Points.threshold;if(o.boundingSphere===null&&o.computeBoundingSphere(),n.copy(o.boundingSphere),n.applyMatrix4(l),n.radius+=c,r.ray.intersectsSphere(n)===!1)return;t.getInverse(l),e.copy(r.ray).applyMatrix4(t);var h=c/((this.scale.x+this.scale.y+this.scale.z)/3),u=h*h,f=new j;function d(S,C){var L=e.distanceSqToPoint(S);if(L<u){var M=e.closestPointToPoint(S);M.applyMatrix4(l);var E=r.ray.origin.distanceTo(M);if(E<r.near||E>r.far)return;s.push({distance:E,distanceToRay:Math.sqrt(L),point:M.clone(),index:C,face:null,object:a})}}if(o.isBufferGeometry){var p=o.index,g=o.attributes,v=g.position.array;if(p!==null)for(var m=p.array,y=0,x=m.length;y<x;y++){var _=m[y];f.fromArray(v,_*3),d(f,_)}else for(var y=0,b=v.length/3;y<b;y++)f.fromArray(v,y*3),d(f,y)}else for(var w=o.vertices,y=0,b=w.length;y<b;y++)d(w[y],y)}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});function Zf(){nt.call(this),this.type="Group"}Zf.prototype=Object.assign(Object.create(nt.prototype),{constructor:Zf,isGroup:!0});function Sv(t,e,n,i,r,s,a,o,l){Ht.call(this,t,e,n,i,r,s,a,o,l),this.generateMipmaps=!1}Sv.prototype=Object.assign(Object.create(Ht.prototype),{constructor:Sv,isVideoTexture:!0,update:function(){var t=this.image;t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});function Io(t,e,n,i,r,s,a,o,l,c,h,u){Ht.call(this,null,s,a,o,l,c,i,r,h,u),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}Io.prototype=Object.create(Ht.prototype);Io.prototype.constructor=Io;Io.prototype.isCompressedTexture=!0;function Vc(t,e,n,i,r,s,a,o,l,c){if(c=c!==void 0?c:Ks,c!==Ks&&c!==Eo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&c===Ks&&(n=Lc),n===void 0&&c===Eo&&(n=Ic),Ht.call(this,null,i,r,s,a,o,c,n,l),this.image={width:t,height:e},this.magFilter=a!==void 0?a:ii,this.minFilter=o!==void 0?o:ii,this.flipY=!1,this.generateMipmaps=!1}Vc.prototype=Object.create(Ht.prototype);Vc.prototype.constructor=Vc;Vc.prototype.isDepthTexture=!0;function Hc(t){ot.call(this),this.type="WireframeGeometry";var e=[],n,i,r,s,a,o=[0,0],l={},c,h,u,f,d=["a","b","c"],p;if(t&&t.isGeometry){var g=t.faces;for(n=0,r=g.length;n<r;n++){var v=g[n];for(i=0;i<3;i++)h=v[d[i]],u=v[d[(i+1)%3]],o[0]=Math.min(h,u),o[1]=Math.max(h,u),f=o[0]+","+o[1],l[f]===void 0&&(l[f]={index1:o[0],index2:o[1]})}for(f in l)c=l[f],p=t.vertices[c.index1],e.push(p.x,p.y,p.z),p=t.vertices[c.index2],e.push(p.x,p.y,p.z)}else if(t&&t.isBufferGeometry){var m,y,x,_,b,w,S,C;if(p=new j,t.index!==null){for(m=t.attributes.position,y=t.index,x=t.groups,x.length===0&&(x=[{start:0,count:y.count,materialIndex:0}]),s=0,a=x.length;s<a;++s)for(_=x[s],b=_.start,w=_.count,n=b,r=b+w;n<r;n+=3)for(i=0;i<3;i++)h=y.getX(n+i),u=y.getX(n+(i+1)%3),o[0]=Math.min(h,u),o[1]=Math.max(h,u),f=o[0]+","+o[1],l[f]===void 0&&(l[f]={index1:o[0],index2:o[1]});for(f in l)c=l[f],p.fromBufferAttribute(m,c.index1),e.push(p.x,p.y,p.z),p.fromBufferAttribute(m,c.index2),e.push(p.x,p.y,p.z)}else for(m=t.attributes.position,n=0,r=m.count/3;n<r;n++)for(i=0;i<3;i++)S=3*n+i,p.fromBufferAttribute(m,S),e.push(p.x,p.y,p.z),C=3*n+(i+1)%3,p.fromBufferAttribute(m,C),e.push(p.x,p.y,p.z)}this.addAttribute("position",new Qe(e,3))}Hc.prototype=Object.create(ot.prototype);Hc.prototype.constructor=Hc;function kc(t,e,n){vt.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n},this.fromBufferGeometry(new Do(t,e,n)),this.mergeVertices()}kc.prototype=Object.create(vt.prototype);kc.prototype.constructor=kc;function Do(t,e,n){ot.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:n};var i=[],r=[],s=[],a=[],o=1e-5,l=new j,c=new j,h=new j,u=new j,f=new j,d,p,g=e+1;for(d=0;d<=n;d++){var v=d/n;for(p=0;p<=e;p++){var m=p/e;c=t(m,v,c),r.push(c.x,c.y,c.z),m-o>=0?(h=t(m-o,v,h),u.subVectors(c,h)):(h=t(m+o,v,h),u.subVectors(h,c)),v-o>=0?(h=t(m,v-o,h),f.subVectors(c,h)):(h=t(m,v+o,h),f.subVectors(h,c)),l.crossVectors(u,f).normalize(),s.push(l.x,l.y,l.z),a.push(m,v)}}for(d=0;d<n;d++)for(p=0;p<e;p++){var y=d*g+p,x=d*g+p+1,_=(d+1)*g+p+1,b=(d+1)*g+p;i.push(y,x,b),i.push(x,_,b)}this.setIndex(i),this.addAttribute("position",new Qe(r,3)),this.addAttribute("normal",new Qe(s,3)),this.addAttribute("uv",new Qe(a,2))}Do.prototype=Object.create(ot.prototype);Do.prototype.constructor=Do;function Wc(t,e,n,i){vt.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i},this.fromBufferGeometry(new jn(t,e,n,i)),this.mergeVertices()}Wc.prototype=Object.create(vt.prototype);Wc.prototype.constructor=Wc;function jn(t,e,n,i){ot.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i},n=n||1,i=i||0;var r=[],s=[];a(i),l(n),c(),this.addAttribute("position",new Qe(r,3)),this.addAttribute("normal",new Qe(r.slice(),3)),this.addAttribute("uv",new Qe(s,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function a(m){for(var y=new j,x=new j,_=new j,b=0;b<e.length;b+=3)f(e[b+0],y),f(e[b+1],x),f(e[b+2],_),o(y,x,_,m)}function o(m,y,x,_){var b=Math.pow(2,_),w=[],S,C;for(S=0;S<=b;S++){w[S]=[];var L=m.clone().lerp(x,S/b),M=y.clone().lerp(x,S/b),E=b-S;for(C=0;C<=E;C++)C===0&&S===b?w[S][C]=L:w[S][C]=L.clone().lerp(M,C/E)}for(S=0;S<b;S++)for(C=0;C<2*(b-S)-1;C++){var N=Math.floor(C/2);C%2===0?(u(w[S][N+1]),u(w[S+1][N]),u(w[S][N])):(u(w[S][N+1]),u(w[S+1][N+1]),u(w[S+1][N]))}}function l(m){for(var y=new j,x=0;x<r.length;x+=3)y.x=r[x+0],y.y=r[x+1],y.z=r[x+2],y.normalize().multiplyScalar(m),r[x+0]=y.x,r[x+1]=y.y,r[x+2]=y.z}function c(){for(var m=new j,y=0;y<r.length;y+=3){m.x=r[y+0],m.y=r[y+1],m.z=r[y+2];var x=g(m)/2/Math.PI+.5,_=v(m)/Math.PI+.5;s.push(x,1-_)}d(),h()}function h(){for(var m=0;m<s.length;m+=6){var y=s[m+0],x=s[m+2],_=s[m+4],b=Math.max(y,x,_),w=Math.min(y,x,_);b>.9&&w<.1&&(y<.2&&(s[m+0]+=1),x<.2&&(s[m+2]+=1),_<.2&&(s[m+4]+=1))}}function u(m){r.push(m.x,m.y,m.z)}function f(m,y){var x=m*3;y.x=t[x+0],y.y=t[x+1],y.z=t[x+2]}function d(){for(var m=new j,y=new j,x=new j,_=new j,b=new qe,w=new qe,S=new qe,C=0,L=0;C<r.length;C+=9,L+=6){m.set(r[C+0],r[C+1],r[C+2]),y.set(r[C+3],r[C+4],r[C+5]),x.set(r[C+6],r[C+7],r[C+8]),b.set(s[L+0],s[L+1]),w.set(s[L+2],s[L+3]),S.set(s[L+4],s[L+5]),_.copy(m).add(y).add(x).divideScalar(3);var M=g(_);p(b,L+0,m,M),p(w,L+2,y,M),p(S,L+4,x,M)}}function p(m,y,x,_){_<0&&m.x===1&&(s[y]=m.x-1),x.x===0&&x.z===0&&(s[y]=_/2/Math.PI+.5)}function g(m){return Math.atan2(m.z,-m.x)}function v(m){return Math.atan2(-m.y,Math.sqrt(m.x*m.x+m.z*m.z))}}jn.prototype=Object.create(ot.prototype);jn.prototype.constructor=jn;function Xc(t,e){vt.call(this),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new No(t,e)),this.mergeVertices()}Xc.prototype=Object.create(vt.prototype);Xc.prototype.constructor=Xc;function No(t,e){var n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];jn.call(this,n,i,t,e),this.type="TetrahedronBufferGeometry",this.parameters={radius:t,detail:e}}No.prototype=Object.create(jn.prototype);No.prototype.constructor=No;function qc(t,e){vt.call(this),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new ha(t,e)),this.mergeVertices()}qc.prototype=Object.create(vt.prototype);qc.prototype.constructor=qc;function ha(t,e){var n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];jn.call(this,n,i,t,e),this.type="OctahedronBufferGeometry",this.parameters={radius:t,detail:e}}ha.prototype=Object.create(jn.prototype);ha.prototype.constructor=ha;function $c(t,e){vt.call(this),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Bo(t,e)),this.mergeVertices()}$c.prototype=Object.create(vt.prototype);$c.prototype.constructor=$c;function Bo(t,e){var n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];jn.call(this,i,r,t,e),this.type="IcosahedronBufferGeometry",this.parameters={radius:t,detail:e}}Bo.prototype=Object.create(jn.prototype);Bo.prototype.constructor=Bo;function Yc(t,e){vt.call(this),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Uo(t,e)),this.mergeVertices()}Yc.prototype=Object.create(vt.prototype);Yc.prototype.constructor=Yc;function Uo(t,e){var n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],s=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];jn.call(this,r,s,t,e),this.type="DodecahedronBufferGeometry",this.parameters={radius:t,detail:e}}Uo.prototype=Object.create(jn.prototype);Uo.prototype.constructor=Uo;function Zc(t,e,n,i,r,s){vt.call(this),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:r},s!==void 0&&console.warn("THREE.TubeGeometry: taper has been removed.");var a=new Fo(t,e,n,i,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals,this.fromBufferGeometry(a),this.mergeVertices()}Zc.prototype=Object.create(vt.prototype);Zc.prototype.constructor=Zc;function Fo(t,e,n,i,r){ot.call(this),this.type="TubeBufferGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:r},e=e||64,n=n||1,i=i||8,r=r||!1;var s=t.computeFrenetFrames(e,r);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;var a=new j,o=new j,l=new qe,c=new j,h,u,f=[],d=[],p=[],g=[];v(),this.setIndex(g),this.addAttribute("position",new Qe(f,3)),this.addAttribute("normal",new Qe(d,3)),this.addAttribute("uv",new Qe(p,2));function v(){for(h=0;h<e;h++)m(h);m(r===!1?e:0),x(),y()}function m(_){c=t.getPointAt(_/e,c);var b=s.normals[_],w=s.binormals[_];for(u=0;u<=i;u++){var S=u/i*Math.PI*2,C=Math.sin(S),L=-Math.cos(S);o.x=L*b.x+C*w.x,o.y=L*b.y+C*w.y,o.z=L*b.z+C*w.z,o.normalize(),d.push(o.x,o.y,o.z),a.x=c.x+n*o.x,a.y=c.y+n*o.y,a.z=c.z+n*o.z,f.push(a.x,a.y,a.z)}}function y(){for(u=1;u<=e;u++)for(h=1;h<=i;h++){var _=(i+1)*(u-1)+(h-1),b=(i+1)*u+(h-1),w=(i+1)*u+h,S=(i+1)*(u-1)+h;g.push(_,b,S),g.push(b,w,S)}}function x(){for(h=0;h<=e;h++)for(u=0;u<=i;u++)l.x=h/e,l.y=u/i,p.push(l.x,l.y)}}Fo.prototype=Object.create(ot.prototype);Fo.prototype.constructor=Fo;function jc(t,e,n,i,r,s,a){vt.call(this),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:r,q:s},a!==void 0&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new Oo(t,e,n,i,r,s)),this.mergeVertices()}jc.prototype=Object.create(vt.prototype);jc.prototype.constructor=jc;function Oo(t,e,n,i,r,s){ot.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:r,q:s},t=t||1,e=e||.4,n=Math.floor(n)||64,i=Math.floor(i)||8,r=r||2,s=s||3;var a=[],o=[],l=[],c=[],h,u,f=new j,d=new j,p=new j,g=new j,v=new j,m=new j,y=new j;for(h=0;h<=n;++h){var x=h/n*r*Math.PI*2;for(E(x,r,s,t,p),E(x+.01,r,s,t,g),m.subVectors(g,p),y.addVectors(g,p),v.crossVectors(m,y),y.crossVectors(v,m),v.normalize(),y.normalize(),u=0;u<=i;++u){var _=u/i*Math.PI*2,b=-e*Math.cos(_),w=e*Math.sin(_);f.x=p.x+(b*y.x+w*v.x),f.y=p.y+(b*y.y+w*v.y),f.z=p.z+(b*y.z+w*v.z),o.push(f.x,f.y,f.z),d.subVectors(f,p).normalize(),l.push(d.x,d.y,d.z),c.push(h/n),c.push(u/i)}}for(u=1;u<=n;u++)for(h=1;h<=i;h++){var S=(i+1)*(u-1)+(h-1),C=(i+1)*u+(h-1),L=(i+1)*u+h,M=(i+1)*(u-1)+h;a.push(S,C,M),a.push(C,L,M)}this.setIndex(a),this.addAttribute("position",new Qe(o,3)),this.addAttribute("normal",new Qe(l,3)),this.addAttribute("uv",new Qe(c,2));function E(N,k,F,V,ee){var R=Math.cos(N),T=Math.sin(N),H=F/k*N,O=Math.cos(H);ee.x=V*(2+O)*.5*R,ee.y=V*(2+O)*T*.5,ee.z=V*Math.sin(H)*.5}}Oo.prototype=Object.create(ot.prototype);Oo.prototype.constructor=Oo;function Jc(t,e,n,i,r){vt.call(this),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:r},this.fromBufferGeometry(new zo(t,e,n,i,r)),this.mergeVertices()}Jc.prototype=Object.create(vt.prototype);Jc.prototype.constructor=Jc;function zo(t,e,n,i,r){ot.call(this),this.type="TorusBufferGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:r},t=t||1,e=e||.4,n=Math.floor(n)||8,i=Math.floor(i)||6,r=r||Math.PI*2;var s=[],a=[],o=[],l=[],c=new j,h=new j,u=new j,f,d;for(f=0;f<=n;f++)for(d=0;d<=i;d++){var p=d/i*r,g=f/n*Math.PI*2;h.x=(t+e*Math.cos(g))*Math.cos(p),h.y=(t+e*Math.cos(g))*Math.sin(p),h.z=e*Math.sin(g),a.push(h.x,h.y,h.z),c.x=t*Math.cos(p),c.y=t*Math.sin(p),u.subVectors(h,c).normalize(),o.push(u.x,u.y,u.z),l.push(d/i),l.push(f/n)}for(f=1;f<=n;f++)for(d=1;d<=i;d++){var v=(i+1)*f+d-1,m=(i+1)*(f-1)+d-1,y=(i+1)*(f-1)+d,x=(i+1)*f+d;s.push(v,m,x),s.push(m,y,x)}this.setIndex(s),this.addAttribute("position",new Qe(a,3)),this.addAttribute("normal",new Qe(o,3)),this.addAttribute("uv",new Qe(l,2))}zo.prototype=Object.create(ot.prototype);zo.prototype.constructor=zo;var uL={triangulate:function(t,e,n){n=n||2;var i=e&&e.length,r=i?e[0]*n:t.length,s=_x(t,0,r,n,!0),a=[];if(!s)return a;var o,l,c,h,u,f,d;if(i&&(s=vL(t,e,s,n)),t.length>80*n){o=c=t[0],l=h=t[1];for(var p=n;p<r;p+=n)u=t[p],f=t[p+1],u<o&&(o=u),f<l&&(l=f),u>c&&(c=u),f>h&&(h=f);d=Math.max(c-o,h-l),d=d!==0?1/d:0}return Vo(s,a,n,o,l,d),a}};function _x(t,e,n,i,r){var s,a;if(r===TL(t,e,n,i)>0)for(s=e;s<n;s+=i)a=Ev(s,t[s],t[s+1],a);else for(s=n-i;s>=e;s-=i)a=Ev(s,t[s],t[s+1],a);return a&&ns(a,a.next)&&(ko(a),a=a.next),a}function Go(t,e){if(!t)return t;e||(e=t);var n=t,i;do if(i=!1,!n.steiner&&(ns(n,n.next)||Rn(n.prev,n,n.next)===0)){if(ko(n),n=e=n.prev,n===n.next)break;i=!0}else n=n.next;while(i||n!==e);return e}function Vo(t,e,n,i,r,s,a){if(t){!a&&s&&_L(t,i,r,s);for(var o=t,l,c;t.prev!==t.next;){if(l=t.prev,c=t.next,s?dL(t,i,r,s):fL(t)){e.push(l.i/n),e.push(t.i/n),e.push(c.i/n),ko(t),t=c.next,o=c.next;continue}if(t=c,t===o){a?a===1?(t=pL(t,e,n),Vo(t,e,n,i,r,s,2)):a===2&&mL(t,e,n,i,r,s):Vo(Go(t),e,n,i,r,s,1);break}}}}function fL(t){var e=t.prev,n=t,i=t.next;if(Rn(e,n,i)>=0)return!1;for(var r=t.next.next;r!==t.prev;){if(Kc(e.x,e.y,n.x,n.y,i.x,i.y,r.x,r.y)&&Rn(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function dL(t,e,n,i){var r=t.prev,s=t,a=t.next;if(Rn(r,s,a)>=0)return!1;for(var o=r.x<s.x?r.x<a.x?r.x:a.x:s.x<a.x?s.x:a.x,l=r.y<s.y?r.y<a.y?r.y:a.y:s.y<a.y?s.y:a.y,c=r.x>s.x?r.x>a.x?r.x:a.x:s.x>a.x?s.x:a.x,h=r.y>s.y?r.y>a.y?r.y:a.y:s.y>a.y?s.y:a.y,u=jf(o,l,e,n,i),f=jf(c,h,e,n,i),d=t.nextZ;d&&d.z<=f;){if(d!==t.prev&&d!==t.next&&Kc(r.x,r.y,s.x,s.y,a.x,a.y,d.x,d.y)&&Rn(d.prev,d,d.next)>=0)return!1;d=d.nextZ}for(d=t.prevZ;d&&d.z>=u;){if(d!==t.prev&&d!==t.next&&Kc(r.x,r.y,s.x,s.y,a.x,a.y,d.x,d.y)&&Rn(d.prev,d,d.next)>=0)return!1;d=d.prevZ}return!0}function pL(t,e,n){var i=t;do{var r=i.prev,s=i.next.next;!ns(r,s)&&Mx(r,i,i.next,s)&&Ho(r,s)&&Ho(s,r)&&(e.push(r.i/n),e.push(i.i/n),e.push(s.i/n),ko(i),ko(i.next),i=t=s),i=i.next}while(i!==t);return i}function mL(t,e,n,i,r,s){var a=t;do{for(var o=a.next.next;o!==a.prev;){if(a.i!==o.i&&wL(a,o)){var l=bx(a,o);a=Go(a,a.next),l=Go(l,l.next),Vo(a,e,n,i,r,s),Vo(l,e,n,i,r,s);return}o=o.next}a=a.next}while(a!==t)}function vL(t,e,n,i){var r=[],s,a,o,l,c;for(s=0,a=e.length;s<a;s++)o=e[s]*i,l=s<a-1?e[s+1]*i:t.length,c=_x(t,o,l,i,!1),c===c.next&&(c.steiner=!0),r.push(bL(c));for(r.sort(gL),s=0;s<r.length;s++)yL(r[s],n),n=Go(n,n.next);return n}function gL(t,e){return t.x-e.x}function yL(t,e){if(e=xL(t,e),e){var n=bx(e,t);Go(n,n.next)}}function xL(t,e){var n=e,i=t.x,r=t.y,s=-1/0,a;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){var o=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(o<=i&&o>s){if(s=o,o===i){if(r===n.y)return n;if(r===n.next.y)return n.next}a=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!a)return null;if(i===s)return a.prev;var l=a,c=a.x,h=a.y,u=1/0,f;for(n=a.next;n!==l;)i>=n.x&&n.x>=c&&i!==n.x&&Kc(r<h?i:s,r,c,h,r<h?s:i,r,n.x,n.y)&&(f=Math.abs(r-n.y)/(i-n.x),(f<u||f===u&&n.x>a.x)&&Ho(n,t)&&(a=n,u=f)),n=n.next;return a}function _L(t,e,n,i){var r=t;do r.z===null&&(r.z=jf(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,ML(r)}function ML(t){var e,n,i,r,s,a,o,l,c=1;do{for(n=t,t=null,s=null,a=0;n;){for(a++,i=n,o=0,e=0;e<c&&(o++,i=i.nextZ,!!i);e++);for(l=c;o>0||l>0&&i;)o!==0&&(l===0||!i||n.z<=i.z)?(r=n,n=n.nextZ,o--):(r=i,i=i.nextZ,l--),s?s.nextZ=r:t=r,r.prevZ=s,s=r;n=i}s.nextZ=null,c*=2}while(a>1);return t}function jf(t,e,n,i,r){return t=32767*(t-n)*r,e=32767*(e-i)*r,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t|e<<1}function bL(t){var e=t,n=t;do e.x<n.x&&(n=e),e=e.next;while(e!==t);return n}function Kc(t,e,n,i,r,s,a,o){return(r-a)*(e-o)-(t-a)*(s-o)>=0&&(t-a)*(i-o)-(n-a)*(e-o)>=0&&(n-a)*(s-o)-(r-a)*(i-o)>=0}function wL(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!SL(t,e)&&Ho(t,e)&&Ho(e,t)&&EL(t,e)}function Rn(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function ns(t,e){return t.x===e.x&&t.y===e.y}function Mx(t,e,n,i){return ns(t,e)&&ns(n,i)||ns(t,i)&&ns(n,e)?!0:Rn(t,e,n)>0!=Rn(t,e,i)>0&&Rn(n,i,t)>0!=Rn(n,i,e)>0}function SL(t,e){var n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Mx(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}function Ho(t,e){return Rn(t.prev,t,t.next)<0?Rn(t,e,t.next)>=0&&Rn(t,t.prev,e)>=0:Rn(t,e,t.prev)<0||Rn(t,t.next,e)<0}function EL(t,e){var n=t,i=!1,r=(t.x+e.x)/2,s=(t.y+e.y)/2;do n.y>s!=n.next.y>s&&n.next.y!==n.y&&r<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next;while(n!==t);return i}function bx(t,e){var n=new Jf(t.i,t.x,t.y),i=new Jf(e.i,e.x,e.y),r=t.next,s=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,s.next=i,i.prev=s,i}function Ev(t,e,n,i){var r=new Jf(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function ko(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Jf(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function TL(t,e,n,i){for(var r=0,s=e,a=n-i;s<n;s+=i)r+=(t[a]-t[s])*(t[s+1]+t[a+1]),a=s;return r}var wr={area:function(t){for(var e=t.length,n=0,i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return n*.5},isClockWise:function(t){return wr.area(t)<0},triangulateShape:function(t,e){var n=[],i=[],r=[];Tv(t),Av(n,t);var s=t.length;e.forEach(Tv);for(var a=0;a<e.length;a++)i.push(s),s+=e[a].length,Av(n,e[a]);for(var o=uL.triangulate(n,i),a=0;a<o.length;a+=3)r.push(o.slice(a,a+3));return r}};function Tv(t){var e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function Av(t,e){for(var n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}function vs(t,e){vt.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},this.fromBufferGeometry(new Ri(t,e)),this.mergeVertices()}vs.prototype=Object.create(vt.prototype);vs.prototype.constructor=vs;function Ri(t,e){typeof t>"u"||(ot.call(this),this.type="ExtrudeBufferGeometry",t=Array.isArray(t)?t:[t],this.addShapeList(t,e),this.computeVertexNormals())}Ri.prototype=Object.create(ot.prototype);Ri.prototype.constructor=Ri;Ri.prototype.getArrays=function(){var t=this.getAttribute("position"),e=t?Array.prototype.slice.call(t.array):[],n=this.getAttribute("uv"),i=n?Array.prototype.slice.call(n.array):[],r=this.index,s=r?Array.prototype.slice.call(r.array):[];return{position:e,uv:i,index:s}};Ri.prototype.addShapeList=function(t,e){var n=t.length;e.arrays=this.getArrays();for(var i=0;i<n;i++){var r=t[i];this.addShape(r,e)}this.setIndex(e.arrays.index),this.addAttribute("position",new Qe(e.arrays.position,3)),this.addAttribute("uv",new Qe(e.arrays.uv,2))};Ri.prototype.addShape=function(t,e){var n=e.arrays?e.arrays:this.getArrays(),i=n.position,r=n.index,s=n.uv,a=[],o=e.amount!==void 0?e.amount:100,l=e.bevelThickness!==void 0?e.bevelThickness:6,c=e.bevelSize!==void 0?e.bevelSize:l-2,h=e.bevelSegments!==void 0?e.bevelSegments:3,u=e.bevelEnabled!==void 0?e.bevelEnabled:!0,f=e.curveSegments!==void 0?e.curveSegments:12,d=e.steps!==void 0?e.steps:1,p=e.extrudePath,g,v=!1,m=e.UVGenerator!==void 0?e.UVGenerator:vs.WorldUVGenerator,y,x,_,b;p&&(g=p.getSpacedPoints(d),v=!0,u=!1,y=e.frames!==void 0?e.frames:p.computeFrenetFrames(d,!1),x=new j,_=new j,b=new j),u||(h=0,l=0,c=0);var w,S,C,L=this,M=t.extractPoints(f),E=M.shape,N=M.holes,k=!wr.isClockWise(E);if(k)for(E=E.reverse(),S=0,C=N.length;S<C;S++)w=N[S],wr.isClockWise(w)&&(N[S]=w.reverse());var F=wr.triangulateShape(E,N),V=E;for(S=0,C=N.length;S<C;S++)w=N[S],E=E.concat(w);function ee(ve,ge,ne){return ge||console.error("THREE.ExtrudeGeometry: vec does not exist"),ge.clone().multiplyScalar(ne).add(ve)}var R,T,H,O,B,q=E.length,G,A=F.length;function U(ve,ge,ne){var ye,xe,Fe,Pe=ve.x-ge.x,Ee=ve.y-ge.y,it=ne.x-ve.x,je=ne.y-ve.y,Je=Pe*Pe+Ee*Ee,Ge=Pe*je-Ee*it;if(Math.abs(Ge)>Number.EPSILON){var We=Math.sqrt(Je),at=Math.sqrt(it*it+je*je),se=ge.x-Ee/We,Oe=ge.y+Pe/We,He=ne.x-je/at,et=ne.y+it/at,te=((He-se)*je-(et-Oe)*it)/(Pe*je-Ee*it);ye=se+Pe*te-ve.x,xe=Oe+Ee*te-ve.y;var Ne=ye*ye+xe*xe;if(Ne<=2)return new qe(ye,xe);Fe=Math.sqrt(Ne/2)}else{var Ue=!1;Pe>Number.EPSILON?it>Number.EPSILON&&(Ue=!0):Pe<-Number.EPSILON?it<-Number.EPSILON&&(Ue=!0):Math.sign(Ee)===Math.sign(je)&&(Ue=!0),Ue?(ye=-Ee,xe=Pe,Fe=Math.sqrt(Je)):(ye=Pe,xe=Ee,Fe=Math.sqrt(Je/2))}return new qe(ye/Fe,xe/Fe)}for(var J=[],$=0,ie=V.length,re=ie-1,de=$+1;$<ie;$++,re++,de++)re===ie&&(re=0),de===ie&&(de=0),J[$]=U(V[$],V[re],V[de]);var me=[],X,pe=J.concat();for(S=0,C=N.length;S<C;S++){for(w=N[S],X=[],$=0,ie=w.length,re=ie-1,de=$+1;$<ie;$++,re++,de++)re===ie&&(re=0),de===ie&&(de=0),X[$]=U(w[$],w[re],w[de]);me.push(X),pe=pe.concat(X)}for(R=0;R<h;R++){for(H=R/h,O=l*Math.cos(H*Math.PI/2),T=c*Math.sin(H*Math.PI/2),$=0,ie=V.length;$<ie;$++)B=ee(V[$],J[$],T),Te(B.x,B.y,-O);for(S=0,C=N.length;S<C;S++)for(w=N[S],X=me[S],$=0,ie=w.length;$<ie;$++)B=ee(w[$],X[$],T),Te(B.x,B.y,-O)}for(T=c,$=0;$<q;$++)B=u?ee(E[$],pe[$],T):E[$],v?(_.copy(y.normals[0]).multiplyScalar(B.x),x.copy(y.binormals[0]).multiplyScalar(B.y),b.copy(g[0]).add(_).add(x),Te(b.x,b.y,b.z)):Te(B.x,B.y,0);var he;for(he=1;he<=d;he++)for($=0;$<q;$++)B=u?ee(E[$],pe[$],T):E[$],v?(_.copy(y.normals[he]).multiplyScalar(B.x),x.copy(y.binormals[he]).multiplyScalar(B.y),b.copy(g[he]).add(_).add(x),Te(b.x,b.y,b.z)):Te(B.x,B.y,o/d*he);for(R=h-1;R>=0;R--){for(H=R/h,O=l*Math.cos(H*Math.PI/2),T=c*Math.sin(H*Math.PI/2),$=0,ie=V.length;$<ie;$++)B=ee(V[$],J[$],T),Te(B.x,B.y,o+O);for(S=0,C=N.length;S<C;S++)for(w=N[S],X=me[S],$=0,ie=w.length;$<ie;$++)B=ee(w[$],X[$],T),v?Te(B.x,B.y+g[d-1].y,g[d-1].x+O):Te(B.x,B.y,o+O)}ce(),oe();function ce(){var ve=i.length/3;if(u){var ge=0,ne=q*ge;for($=0;$<A;$++)G=F[$],z(G[2]+ne,G[1]+ne,G[0]+ne);for(ge=d+h*2,ne=q*ge,$=0;$<A;$++)G=F[$],z(G[0]+ne,G[1]+ne,G[2]+ne)}else{for($=0;$<A;$++)G=F[$],z(G[2],G[1],G[0]);for($=0;$<A;$++)G=F[$],z(G[0]+q*d,G[1]+q*d,G[2]+q*d)}L.addGroup(ve,i.length/3-ve,e.material!==void 0?e.material:0)}function oe(){var ve=i.length/3,ge=0;for(ze(V,ge),ge+=V.length,S=0,C=N.length;S<C;S++)w=N[S],ze(w,ge),ge+=w.length;L.addGroup(ve,i.length/3-ve,e.extrudeMaterial!==void 0?e.extrudeMaterial:1)}function ze(ve,ge){var ne,ye;for($=ve.length;--$>=0;){ne=$,ye=$-1,ye<0&&(ye=ve.length-1);var xe=0,Fe=d+h*2;for(xe=0;xe<Fe;xe++){var Pe=q*xe,Ee=q*(xe+1),it=ge+ne+Pe,je=ge+ye+Pe,Je=ge+ye+Ee,Ge=ge+ne+Ee;I(it,je,Je,Ge)}}}function Te(ve,ge,ne){a.push(ve),a.push(ge),a.push(ne)}function z(ve,ge,ne){ue(ve),ue(ge),ue(ne);var ye=i.length/3,xe=m.generateTopUV(L,i,ye-3,ye-2,ye-1);we(xe[0]),we(xe[1]),we(xe[2])}function I(ve,ge,ne,ye){ue(ve),ue(ge),ue(ye),ue(ge),ue(ne),ue(ye);var xe=i.length/3,Fe=m.generateSideWallUV(L,i,xe-6,xe-3,xe-2,xe-1);we(Fe[0]),we(Fe[1]),we(Fe[3]),we(Fe[1]),we(Fe[2]),we(Fe[3])}function ue(ve){r.push(i.length/3),i.push(a[ve*3+0]),i.push(a[ve*3+1]),i.push(a[ve*3+2])}function we(ve){s.push(ve.x),s.push(ve.y)}e.arrays||(this.setIndex(r),this.addAttribute("position",new Qe(i,3)),this.addAttribute("uv",new Qe(s,2)))};vs.WorldUVGenerator={generateTopUV:function(t,e,n,i,r){var s=e[n*3],a=e[n*3+1],o=e[i*3],l=e[i*3+1],c=e[r*3],h=e[r*3+1];return[new qe(s,a),new qe(o,l),new qe(c,h)]},generateSideWallUV:function(t,e,n,i,r,s){var a=e[n*3],o=e[n*3+1],l=e[n*3+2],c=e[i*3],h=e[i*3+1],u=e[i*3+2],f=e[r*3],d=e[r*3+1],p=e[r*3+2],g=e[s*3],v=e[s*3+1],m=e[s*3+2];return Math.abs(o-h)<.01?[new qe(a,1-l),new qe(c,1-u),new qe(f,1-p),new qe(g,1-m)]:[new qe(o,1-l),new qe(h,1-u),new qe(d,1-p),new qe(v,1-m)]}};function Qc(t,e){vt.call(this),this.type="TextGeometry",this.parameters={text:t,parameters:e},this.fromBufferGeometry(new Wo(t,e)),this.mergeVertices()}Qc.prototype=Object.create(vt.prototype);Qc.prototype.constructor=Qc;function Wo(t,e){e=e||{};var n=e.font;if(!(n&&n.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new vt;var i=n.generateShapes(t,e.size,e.curveSegments);e.amount=e.height!==void 0?e.height:50,e.bevelThickness===void 0&&(e.bevelThickness=10),e.bevelSize===void 0&&(e.bevelSize=8),e.bevelEnabled===void 0&&(e.bevelEnabled=!1),Ri.call(this,i,e),this.type="TextBufferGeometry"}Wo.prototype=Object.create(Ri.prototype);Wo.prototype.constructor=Wo;function eh(t,e,n,i,r,s,a){vt.call(this),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:r,thetaStart:s,thetaLength:a},this.fromBufferGeometry(new ua(t,e,n,i,r,s,a)),this.mergeVertices()}eh.prototype=Object.create(vt.prototype);eh.prototype.constructor=eh;function ua(t,e,n,i,r,s,a){ot.call(this),this.type="SphereBufferGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:r,thetaStart:s,thetaLength:a},t=t||1,e=Math.max(3,Math.floor(e)||8),n=Math.max(2,Math.floor(n)||6),i=i!==void 0?i:0,r=r!==void 0?r:Math.PI*2,s=s!==void 0?s:0,a=a!==void 0?a:Math.PI;var o=s+a,l,c,h=0,u=[],f=new j,d=new j,p=[],g=[],v=[],m=[];for(c=0;c<=n;c++){var y=[],x=c/n;for(l=0;l<=e;l++){var _=l/e;f.x=-t*Math.cos(i+_*r)*Math.sin(s+x*a),f.y=t*Math.cos(s+x*a),f.z=t*Math.sin(i+_*r)*Math.sin(s+x*a),g.push(f.x,f.y,f.z),d.set(f.x,f.y,f.z).normalize(),v.push(d.x,d.y,d.z),m.push(_,1-x),y.push(h++)}u.push(y)}for(c=0;c<n;c++)for(l=0;l<e;l++){var b=u[c][l+1],w=u[c][l],S=u[c+1][l],C=u[c+1][l+1];(c!==0||s>0)&&p.push(b,w,C),(c!==n-1||o<Math.PI)&&p.push(w,S,C)}this.setIndex(p),this.addAttribute("position",new Qe(g,3)),this.addAttribute("normal",new Qe(v,3)),this.addAttribute("uv",new Qe(m,2))}ua.prototype=Object.create(ot.prototype);ua.prototype.constructor=ua;function th(t,e,n,i,r,s){vt.call(this),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:s},this.fromBufferGeometry(new Xo(t,e,n,i,r,s)),this.mergeVertices()}th.prototype=Object.create(vt.prototype);th.prototype.constructor=th;function Xo(t,e,n,i,r,s){ot.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:s},t=t||.5,e=e||1,r=r!==void 0?r:0,s=s!==void 0?s:Math.PI*2,n=n!==void 0?Math.max(3,n):8,i=i!==void 0?Math.max(1,i):1;var a=[],o=[],l=[],c=[],h,u=t,f=(e-t)/i,d=new j,p=new qe,g,v;for(g=0;g<=i;g++){for(v=0;v<=n;v++)h=r+v/n*s,d.x=u*Math.cos(h),d.y=u*Math.sin(h),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/e+1)/2,p.y=(d.y/e+1)/2,c.push(p.x,p.y);u+=f}for(g=0;g<i;g++){var m=g*(n+1);for(v=0;v<n;v++){h=v+m;var y=h,x=h+n+1,_=h+n+2,b=h+1;a.push(y,x,b),a.push(x,_,b)}}this.setIndex(a),this.addAttribute("position",new Qe(o,3)),this.addAttribute("normal",new Qe(l,3)),this.addAttribute("uv",new Qe(c,2))}Xo.prototype=Object.create(ot.prototype);Xo.prototype.constructor=Xo;function nh(t,e,n,i){vt.call(this),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},this.fromBufferGeometry(new qo(t,e,n,i)),this.mergeVertices()}nh.prototype=Object.create(vt.prototype);nh.prototype.constructor=nh;function qo(t,e,n,i){ot.call(this),this.type="LatheBufferGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e)||12,n=n||0,i=i||Math.PI*2,i=wt.clamp(i,0,Math.PI*2);var r=[],s=[],a=[],o,l=1/e,c=new j,h=new qe,u,f;for(u=0;u<=e;u++){var d=n+u*l*i,p=Math.sin(d),g=Math.cos(d);for(f=0;f<=t.length-1;f++)c.x=t[f].x*p,c.y=t[f].y,c.z=t[f].x*g,s.push(c.x,c.y,c.z),h.x=u/e,h.y=f/(t.length-1),a.push(h.x,h.y)}for(u=0;u<e;u++)for(f=0;f<t.length-1;f++){o=f+u*t.length;var v=o,m=o+t.length,y=o+t.length+1,x=o+1;r.push(v,m,x),r.push(m,y,x)}if(this.setIndex(r),this.addAttribute("position",new Qe(s,3)),this.addAttribute("uv",new Qe(a,2)),this.computeVertexNormals(),i===Math.PI*2){var _=this.attributes.normal.array,b=new j,w=new j,S=new j;for(o=e*t.length*3,u=0,f=0;u<t.length;u++,f+=3)b.x=_[f+0],b.y=_[f+1],b.z=_[f+2],w.x=_[o+f+0],w.y=_[o+f+1],w.z=_[o+f+2],S.addVectors(b,w).normalize(),_[f+0]=_[o+f+0]=S.x,_[f+1]=_[o+f+1]=S.y,_[f+2]=_[o+f+2]=S.z}}qo.prototype=Object.create(ot.prototype);qo.prototype.constructor=qo;function fa(t,e){vt.call(this),this.type="ShapeGeometry",typeof e=="object"&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),e=e.curveSegments),this.parameters={shapes:t,curveSegments:e},this.fromBufferGeometry(new da(t,e)),this.mergeVertices()}fa.prototype=Object.create(vt.prototype);fa.prototype.constructor=fa;fa.prototype.toJSON=function(){var t=vt.prototype.toJSON.call(this),e=this.parameters.shapes;return wx(e,t)};function da(t,e){ot.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:t,curveSegments:e},e=e||12;var n=[],i=[],r=[],s=[],a=0,o=0;if(Array.isArray(t)===!1)c(t);else for(var l=0;l<t.length;l++)c(t[l]),this.addGroup(a,o,l),a+=o,o=0;this.setIndex(n),this.addAttribute("position",new Qe(i,3)),this.addAttribute("normal",new Qe(r,3)),this.addAttribute("uv",new Qe(s,2));function c(h){var u,f,d,p=i.length/3,g=h.extractPoints(e),v=g.shape,m=g.holes;if(wr.isClockWise(v)===!1)for(v=v.reverse(),u=0,f=m.length;u<f;u++)d=m[u],wr.isClockWise(d)===!0&&(m[u]=d.reverse());var y=wr.triangulateShape(v,m);for(u=0,f=m.length;u<f;u++)d=m[u],v=v.concat(d);for(u=0,f=v.length;u<f;u++){var x=v[u];i.push(x.x,x.y,0),r.push(0,0,1),s.push(x.x,x.y)}for(u=0,f=y.length;u<f;u++){var _=y[u],b=_[0]+p,w=_[1]+p,S=_[2]+p;n.push(b,w,S),o+=3}}}da.prototype=Object.create(ot.prototype);da.prototype.constructor=da;da.prototype.toJSON=function(){var t=ot.prototype.toJSON.call(this),e=this.parameters.shapes;return wx(e,t)};function wx(t,e){if(e.shapes=[],Array.isArray(t))for(var n=0,i=t.length;n<i;n++){var r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}function ih(t,e){ot.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=e!==void 0?e:1;var n=[],i=Math.cos(wt.DEG2RAD*e),r=[0,0],s={},a,o,l,c=["a","b","c"],h;t.isBufferGeometry?(h=new vt,h.fromBufferGeometry(t)):h=t.clone(),h.mergeVertices(),h.computeFaceNormals();for(var u=h.vertices,f=h.faces,d=0,p=f.length;d<p;d++)for(var g=f[d],v=0;v<3;v++)a=g[c[v]],o=g[c[(v+1)%3]],r[0]=Math.min(a,o),r[1]=Math.max(a,o),l=r[0]+","+r[1],s[l]===void 0?s[l]={index1:r[0],index2:r[1],face1:d,face2:void 0}:s[l].face2=d;for(l in s){var m=s[l];if(m.face2===void 0||f[m.face1].normal.dot(f[m.face2].normal)<=i){var y=u[m.index1];n.push(y.x,y.y,y.z),y=u[m.index2],n.push(y.x,y.y,y.z)}}this.addAttribute("position",new Qe(n,3))}ih.prototype=Object.create(ot.prototype);ih.prototype.constructor=ih;function pa(t,e,n,i,r,s,a,o){vt.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:a,thetaLength:o},this.fromBufferGeometry(new Cr(t,e,n,i,r,s,a,o)),this.mergeVertices()}pa.prototype=Object.create(vt.prototype);pa.prototype.constructor=pa;function Cr(t,e,n,i,r,s,a,o){ot.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:a,thetaLength:o};var l=this;t=t!==void 0?t:1,e=e!==void 0?e:1,n=n||1,i=Math.floor(i)||8,r=Math.floor(r)||1,s=s!==void 0?s:!1,a=a!==void 0?a:0,o=o!==void 0?o:Math.PI*2;var c=[],h=[],u=[],f=[],d=0,p=[],g=n/2,v=0;m(),s===!1&&(t>0&&y(!0),e>0&&y(!1)),this.setIndex(c),this.addAttribute("position",new Qe(h,3)),this.addAttribute("normal",new Qe(u,3)),this.addAttribute("uv",new Qe(f,2));function m(){var x,_,b=new j,w=new j,S=0,C=(e-t)/n;for(_=0;_<=r;_++){var L=[],M=_/r,E=M*(e-t)+t;for(x=0;x<=i;x++){var N=x/i,k=N*o+a,F=Math.sin(k),V=Math.cos(k);w.x=E*F,w.y=-M*n+g,w.z=E*V,h.push(w.x,w.y,w.z),b.set(F,C,V).normalize(),u.push(b.x,b.y,b.z),f.push(N,1-M),L.push(d++)}p.push(L)}for(x=0;x<i;x++)for(_=0;_<r;_++){var ee=p[_][x],R=p[_+1][x],T=p[_+1][x+1],H=p[_][x+1];c.push(ee,R,H),c.push(R,T,H),S+=6}l.addGroup(v,S,0),v+=S}function y(x){var _,b,w,S=new qe,C=new j,L=0,M=x===!0?t:e,E=x===!0?1:-1;for(b=d,_=1;_<=i;_++)h.push(0,g*E,0),u.push(0,E,0),f.push(.5,.5),d++;for(w=d,_=0;_<=i;_++){var N=_/i,k=N*o+a,F=Math.cos(k),V=Math.sin(k);C.x=M*V,C.y=g*E,C.z=M*F,h.push(C.x,C.y,C.z),u.push(0,E,0),S.x=F*.5+.5,S.y=V*.5*E+.5,f.push(S.x,S.y),d++}for(_=0;_<i;_++){var ee=b+_,R=w+_;x===!0?c.push(R,R+1,ee):c.push(R+1,R,ee),L+=3}l.addGroup(v,L,x===!0?1:2),v+=L}}Cr.prototype=Object.create(ot.prototype);Cr.prototype.constructor=Cr;function rh(t,e,n,i,r,s,a){pa.call(this,0,t,e,n,i,r,s,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:s,thetaLength:a}}rh.prototype=Object.create(pa.prototype);rh.prototype.constructor=rh;function sh(t,e,n,i,r,s,a){Cr.call(this,0,t,e,n,i,r,s,a),this.type="ConeBufferGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:s,thetaLength:a}}sh.prototype=Object.create(Cr.prototype);sh.prototype.constructor=sh;function ah(t,e,n,i){vt.call(this),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},this.fromBufferGeometry(new $o(t,e,n,i)),this.mergeVertices()}ah.prototype=Object.create(vt.prototype);ah.prototype.constructor=ah;function $o(t,e,n,i){ot.call(this),this.type="CircleBufferGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},t=t||1,e=e!==void 0?Math.max(3,e):8,n=n!==void 0?n:0,i=i!==void 0?i:Math.PI*2;var r=[],s=[],a=[],o=[],l,c,h=new j,u=new qe;for(s.push(0,0,0),a.push(0,0,1),o.push(.5,.5),c=0,l=3;c<=e;c++,l+=3){var f=n+c/e*i;h.x=t*Math.cos(f),h.y=t*Math.sin(f),s.push(h.x,h.y,h.z),a.push(0,0,1),u.x=(s[l]/t+1)/2,u.y=(s[l+1]/t+1)/2,o.push(u.x,u.y)}for(l=1;l<=e;l++)r.push(l,l+1,0);this.setIndex(r),this.addAttribute("position",new Qe(s,3)),this.addAttribute("normal",new Qe(a,3)),this.addAttribute("uv",new Qe(o,2))}$o.prototype=Object.create(ot.prototype);$o.prototype.constructor=$o;var Hn=Object.freeze({WireframeGeometry:Hc,ParametricGeometry:kc,ParametricBufferGeometry:Do,TetrahedronGeometry:Xc,TetrahedronBufferGeometry:No,OctahedronGeometry:qc,OctahedronBufferGeometry:ha,IcosahedronGeometry:$c,IcosahedronBufferGeometry:Bo,DodecahedronGeometry:Yc,DodecahedronBufferGeometry:Uo,PolyhedronGeometry:Wc,PolyhedronBufferGeometry:jn,TubeGeometry:Zc,TubeBufferGeometry:Fo,TorusKnotGeometry:jc,TorusKnotBufferGeometry:Oo,TorusGeometry:Jc,TorusBufferGeometry:zo,TextGeometry:Qc,TextBufferGeometry:Wo,SphereGeometry:eh,SphereBufferGeometry:ua,RingGeometry:th,RingBufferGeometry:Xo,PlaneGeometry:Oc,PlaneBufferGeometry:ca,LatheGeometry:nh,LatheBufferGeometry:qo,ShapeGeometry:fa,ShapeBufferGeometry:da,ExtrudeGeometry:vs,ExtrudeBufferGeometry:Ri,EdgesGeometry:ih,ConeGeometry:rh,ConeBufferGeometry:sh,CylinderGeometry:pa,CylinderBufferGeometry:Cr,CircleGeometry:ah,CircleBufferGeometry:$o,BoxGeometry:Fc,BoxBufferGeometry:la});function Yo(t){Rt.call(this),this.type="ShadowMaterial",this.color=new dt(0),this.opacity=1,this.lights=!0,this.transparent=!0,this.setValues(t)}Yo.prototype=Object.create(Rt.prototype);Yo.prototype.constructor=Yo;Yo.prototype.isShadowMaterial=!0;function Zo(t){yi.call(this,t),this.type="RawShaderMaterial"}Zo.prototype=Object.create(yi.prototype);Zo.prototype.constructor=Zo;Zo.prototype.isRawShaderMaterial=!0;function tr(t){Rt.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new dt(16777215),this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new dt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new qe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}tr.prototype=Object.create(Rt.prototype);tr.prototype.constructor=tr;tr.prototype.isMeshStandardMaterial=!0;tr.prototype.copy=function(t){return Rt.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function ma(t){tr.call(this),this.defines={PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,this.clearCoat=0,this.clearCoatRoughness=0,this.setValues(t)}ma.prototype=Object.create(tr.prototype);ma.prototype.constructor=ma;ma.prototype.isMeshPhysicalMaterial=!0;ma.prototype.copy=function(t){return tr.prototype.copy.call(this,t),this.defines={PHYSICAL:""},this.reflectivity=t.reflectivity,this.clearCoat=t.clearCoat,this.clearCoatRoughness=t.clearCoatRoughness,this};function xi(t){Rt.call(this),this.type="MeshPhongMaterial",this.color=new dt(16777215),this.specular=new dt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new dt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new qe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Bh,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}xi.prototype=Object.create(Rt.prototype);xi.prototype.constructor=xi;xi.prototype.isMeshPhongMaterial=!0;xi.prototype.copy=function(t){return Rt.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function va(t){xi.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.gradientMap=null,this.setValues(t)}va.prototype=Object.create(xi.prototype);va.prototype.constructor=va;va.prototype.isMeshToonMaterial=!0;va.prototype.copy=function(t){return xi.prototype.copy.call(this,t),this.gradientMap=t.gradientMap,this};function ga(t){Rt.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new qe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}ga.prototype=Object.create(Rt.prototype);ga.prototype.constructor=ga;ga.prototype.isMeshNormalMaterial=!0;ga.prototype.copy=function(t){return Rt.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function ya(t){Rt.call(this),this.type="MeshLambertMaterial",this.color=new dt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new dt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Bh,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}ya.prototype=Object.create(Rt.prototype);ya.prototype.constructor=ya;ya.prototype.isMeshLambertMaterial=!0;ya.prototype.copy=function(t){return Rt.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function xa(t){Xt.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}xa.prototype=Object.create(Xt.prototype);xa.prototype.constructor=xa;xa.prototype.isLineDashedMaterial=!0;xa.prototype.copy=function(t){return Xt.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var AL=Object.freeze({ShadowMaterial:Yo,SpriteMaterial:ps,RawShaderMaterial:Zo,ShaderMaterial:yi,PointsMaterial:ms,MeshPhysicalMaterial:ma,MeshStandardMaterial:tr,MeshPhongMaterial:xi,MeshToonMaterial:va,MeshNormalMaterial:ga,MeshLambertMaterial:ya,MeshDepthMaterial:fs,MeshDistanceMaterial:ds,MeshBasicMaterial:si,LineDashedMaterial:xa,LineBasicMaterial:Xt,Material:Rt}),_a={enabled:!1,files:{},add:function(t,e){this.enabled!==!1&&(this.files[t]=e)},get:function(t){if(this.enabled!==!1)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};function Sx(t,e,n){var i=this,r=!1,s=0,a=0,o=void 0;this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(l){a++,r===!1&&i.onStart!==void 0&&i.onStart(l,s,a),r=!0},this.itemEnd=function(l){s++,i.onProgress!==void 0&&i.onProgress(l,s,a),s===a&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(l){i.onError!==void 0&&i.onError(l)},this.resolveURL=function(l){return o?o(l):l},this.setURLModifier=function(l){return o=l,this}}var Qn=new Sx,Hi={};function rr(t){this.manager=t!==void 0?t:Qn}Object.assign(rr.prototype,{load:function(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);var r=this,s=_a.get(t);if(s!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(s),r.manager.itemEnd(t)},0),s;if(Hi[t]!==void 0){Hi[t].push({onLoad:e,onProgress:n,onError:i});return}var a=/^data:(.*?)(;base64)?,(.*)$/,o=t.match(a);if(o){var l=o[1],c=!!o[2],h=o[3];h=window.decodeURIComponent(h),c&&(h=window.atob(h));try{var u,f=(this.responseType||"").toLowerCase();switch(f){case"arraybuffer":case"blob":for(var d=new Uint8Array(h.length),p=0;p<h.length;p++)d[p]=h.charCodeAt(p);f==="blob"?u=new Blob([d.buffer],{type:l}):u=d.buffer;break;case"document":var g=new DOMParser;u=g.parseFromString(h,l);break;case"json":u=JSON.parse(h);break;default:u=h;break}window.setTimeout(function(){e&&e(u),r.manager.itemEnd(t)},0)}catch(y){window.setTimeout(function(){i&&i(y),r.manager.itemEnd(t),r.manager.itemError(t)},0)}}else{Hi[t]=[],Hi[t].push({onLoad:e,onProgress:n,onError:i});var v=new XMLHttpRequest;v.open("GET",t,!0),v.addEventListener("load",function(y){var x=this.response;_a.add(t,x);var _=Hi[t];if(delete Hi[t],this.status===200){for(var b=0,w=_.length;b<w;b++){var S=_[b];S.onLoad&&S.onLoad(x)}r.manager.itemEnd(t)}else if(this.status===0){console.warn("THREE.FileLoader: HTTP Status 0 received.");for(var b=0,w=_.length;b<w;b++){var S=_[b];S.onLoad&&S.onLoad(x)}r.manager.itemEnd(t)}else{for(var b=0,w=_.length;b<w;b++){var S=_[b];S.onError&&S.onError(y)}r.manager.itemEnd(t),r.manager.itemError(t)}},!1),v.addEventListener("progress",function(y){for(var x=Hi[t],_=0,b=x.length;_<b;_++){var w=x[_];w.onProgress&&w.onProgress(y)}},!1),v.addEventListener("error",function(y){var x=Hi[t];delete Hi[t];for(var _=0,b=x.length;_<b;_++){var w=x[_];w.onError&&w.onError(y)}r.manager.itemEnd(t),r.manager.itemError(t)},!1),this.responseType!==void 0&&(v.responseType=this.responseType),this.withCredentials!==void 0&&(v.withCredentials=this.withCredentials),v.overrideMimeType&&v.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain");for(var m in this.requestHeader)v.setRequestHeader(m,this.requestHeader[m]);v.send(null)}return r.manager.itemStart(t),v},setPath:function(t){return this.path=t,this},setResponseType:function(t){return this.responseType=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setMimeType:function(t){return this.mimeType=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}});function CL(t){this.manager=t!==void 0?t:Qn,this._parser=null}Object.assign(CL.prototype,{load:function(t,e,n,i){var r=this,s=[],a=new Io;a.image=s;var o=new rr(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer");function l(f){o.load(t[f],function(d){var p=r._parser(d,!0);s[f]={width:p.width,height:p.height,format:p.format,mipmaps:p.mipmaps},c+=1,c===6&&(p.mipmapCount===1&&(a.minFilter=$n),a.format=p.format,a.needsUpdate=!0,e&&e(a))},n,i)}if(Array.isArray(t))for(var c=0,h=0,u=t.length;h<u;++h)l(h);else o.load(t,function(f){var d=r._parser(f,!0);if(d.isCubemap)for(var p=d.mipmaps.length/d.mipmapCount,g=0;g<p;g++){s[g]={mipmaps:[]};for(var v=0;v<d.mipmapCount;v++)s[g].mipmaps.push(d.mipmaps[g*d.mipmapCount+v]),s[g].format=d.format,s[g].width=d.width,s[g].height=d.height}else a.image.width=d.width,a.image.height=d.height,a.mipmaps=d.mipmaps;d.mipmapCount===1&&(a.minFilter=$n),a.format=d.format,a.needsUpdate=!0,e&&e(a)},n,i);return a},setPath:function(t){return this.path=t,this}});function RL(t){this.manager=t!==void 0?t:Qn,this._parser=null}Object.assign(RL.prototype,{load:function(t,e,n,i){var r=this,s=new oa,a=new rr(this.manager);return a.setResponseType("arraybuffer"),a.load(t,function(o){var l=r._parser(o);l&&(l.image!==void 0?s.image=l.image:l.data!==void 0&&(s.image.width=l.width,s.image.height=l.height,s.image.data=l.data),s.wrapS=l.wrapS!==void 0?l.wrapS:ni,s.wrapT=l.wrapT!==void 0?l.wrapT:ni,s.magFilter=l.magFilter!==void 0?l.magFilter:$n,s.minFilter=l.minFilter!==void 0?l.minFilter:Uh,s.anisotropy=l.anisotropy!==void 0?l.anisotropy:1,l.format!==void 0&&(s.format=l.format),l.type!==void 0&&(s.type=l.type),l.mipmaps!==void 0&&(s.mipmaps=l.mipmaps),l.mipmapCount===1&&(s.minFilter=$n),s.needsUpdate=!0,e&&e(s,l))},n,i),s}});function Fh(t){this.manager=t!==void 0?t:Qn}Object.assign(Fh.prototype,{crossOrigin:"Anonymous",load:function(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);var r=this,s=_a.get(t);if(s!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(s),r.manager.itemEnd(t)},0),s;var a=document.createElementNS("http://www.w3.org/1999/xhtml","img");return a.addEventListener("load",function(){_a.add(t,this),e&&e(this),r.manager.itemEnd(t)},!1),a.addEventListener("error",function(o){i&&i(o),r.manager.itemEnd(t),r.manager.itemError(t)},!1),t.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(t),a.src=t,a},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}});function PL(t){this.manager=t!==void 0?t:Qn}Object.assign(PL.prototype,{crossOrigin:"Anonymous",load:function(t,e,n,i){var r=new us,s=new Fh(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);var a=0;function o(c){s.load(t[c],function(h){r.images[c]=h,a++,a===6&&(r.needsUpdate=!0,e&&e(r))},void 0,i)}for(var l=0;l<t.length;++l)o(l);return r},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}});function Ex(t){this.manager=t!==void 0?t:Qn}Object.assign(Ex.prototype,{crossOrigin:"Anonymous",load:function(t,e,n,i){var r=new Ht,s=new Fh(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(t,function(a){r.image=a;var o=t.search(/\.(jpg|jpeg)$/)>0||t.search(/^data\:image\/jpeg/)===0;r.format=o?So:Tr,r.needsUpdate=!0,e!==void 0&&e(r)},n,i),r},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}});function pt(){this.type="Curve",this.arcLengthDivisions=200}Object.assign(pt.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){var n=this.getUtoTmapping(t);return this.getPoint(n,e)},getPoints:function(t){t===void 0&&(t=5);for(var e=[],n=0;n<=t;n++)e.push(this.getPoint(n/t));return e},getSpacedPoints:function(t){t===void 0&&(t=5);for(var e=[],n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e},getLength:function(){var t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(t===void 0&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e=[],n,i=this.getPoint(0),r,s=0;for(e.push(0),r=1;r<=t;r++)n=this.getPoint(r/t),s+=n.distanceTo(i),e.push(s),i=n;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){var n=this.getLengths(),i=0,r=n.length,s;e?s=e:s=t*n[r-1];for(var a=0,o=r-1,l;a<=o;)if(i=Math.floor(a+(o-a)/2),l=n[i]-s,l<0)a=i+1;else if(l>0)o=i-1;else{o=i;break}if(i=o,n[i]===s)return i/(r-1);var c=n[i],h=n[i+1],u=h-c,f=(s-c)/u,d=(i+f)/(r-1);return d},getTangent:function(t){var e=1e-4,n=t-e,i=t+e;n<0&&(n=0),i>1&&(i=1);var r=this.getPoint(n),s=this.getPoint(i),a=s.clone().sub(r);return a.normalize()},getTangentAt:function(t){var e=this.getUtoTmapping(t);return this.getTangent(e)},computeFrenetFrames:function(t,e){var n=new j,i=[],r=[],s=[],a=new j,o=new xt,l,c,h;for(l=0;l<=t;l++)c=l/t,i[l]=this.getTangentAt(c),i[l].normalize();r[0]=new j,s[0]=new j;var u=Number.MAX_VALUE,f=Math.abs(i[0].x),d=Math.abs(i[0].y),p=Math.abs(i[0].z);for(f<=u&&(u=f,n.set(1,0,0)),d<=u&&(u=d,n.set(0,1,0)),p<=u&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],a),s[0].crossVectors(i[0],r[0]),l=1;l<=t;l++)r[l]=r[l-1].clone(),s[l]=s[l-1].clone(),a.crossVectors(i[l-1],i[l]),a.length()>Number.EPSILON&&(a.normalize(),h=Math.acos(wt.clamp(i[l-1].dot(i[l]),-1,1)),r[l].applyMatrix4(o.makeRotationAxis(a,h))),s[l].crossVectors(i[l],r[l]);if(e===!0)for(h=Math.acos(wt.clamp(r[0].dot(r[t]),-1,1)),h/=t,i[0].dot(a.crossVectors(r[0],r[t]))>0&&(h=-h),l=1;l<=t;l++)r[l].applyMatrix4(o.makeRotationAxis(i[l],h*l)),s[l].crossVectors(i[l],r[l]);return{tangents:i,normals:r,binormals:s}},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){var t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}});function ai(t,e,n,i,r,s,a,o){pt.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=n||1,this.yRadius=i||1,this.aStartAngle=r||0,this.aEndAngle=s||2*Math.PI,this.aClockwise=a||!1,this.aRotation=o||0}ai.prototype=Object.create(pt.prototype);ai.prototype.constructor=ai;ai.prototype.isEllipseCurve=!0;ai.prototype.getPoint=function(t,e){for(var n=e||new qe,i=Math.PI*2,r=this.aEndAngle-this.aStartAngle,s=Math.abs(r)<Number.EPSILON;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(s?r=0:r=i),this.aClockwise===!0&&!s&&(r===i?r=-i:r=r-i);var a=this.aStartAngle+t*r,o=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){var c=Math.cos(this.aRotation),h=Math.sin(this.aRotation),u=o-this.aX,f=l-this.aY;o=u*c-f*h+this.aX,l=u*h+f*c+this.aY}return n.set(o,l)};ai.prototype.copy=function(t){return pt.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this};ai.prototype.toJSON=function(){var t=pt.prototype.toJSON.call(this);return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t};ai.prototype.fromJSON=function(t){return pt.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this};function jo(t,e,n,i,r,s){ai.call(this,t,e,n,n,i,r,s),this.type="ArcCurve"}jo.prototype=Object.create(ai.prototype);jo.prototype.constructor=jo;jo.prototype.isArcCurve=!0;function bp(){var t=0,e=0,n=0,i=0;function r(s,a,o,l){t=s,e=o,n=-3*s+3*a-2*o-l,i=2*s-2*a+o+l}return{initCatmullRom:function(s,a,o,l,c){r(a,o,c*(o-s),c*(l-a))},initNonuniformCatmullRom:function(s,a,o,l,c,h,u){var f=(a-s)/c-(o-s)/(c+h)+(o-a)/h,d=(o-a)/h-(l-a)/(h+u)+(l-o)/u;f*=h,d*=h,r(a,o,f,d)},calc:function(s){var a=s*s,o=a*s;return t+e*s+n*a+i*o}}}var hc=new j,Au=new bp,Cu=new bp,Ru=new bp;function Jn(t,e,n,i){pt.call(this),this.type="CatmullRomCurve3",this.points=t||[],this.closed=e||!1,this.curveType=n||"centripetal",this.tension=i||.5}Jn.prototype=Object.create(pt.prototype);Jn.prototype.constructor=Jn;Jn.prototype.isCatmullRomCurve3=!0;Jn.prototype.getPoint=function(t,e){var n=e||new j,i=this.points,r=i.length,s=(r-(this.closed?0:1))*t,a=Math.floor(s),o=s-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/i.length)+1)*i.length:o===0&&a===r-1&&(a=r-2,o=1);var l,c,h,u;if(this.closed||a>0?l=i[(a-1)%r]:(hc.subVectors(i[0],i[1]).add(i[0]),l=hc),c=i[a%r],h=i[(a+1)%r],this.closed||a+2<r?u=i[(a+2)%r]:(hc.subVectors(i[r-1],i[r-2]).add(i[r-1]),u=hc),this.curveType==="centripetal"||this.curveType==="chordal"){var f=this.curveType==="chordal"?.5:.25,d=Math.pow(l.distanceToSquared(c),f),p=Math.pow(c.distanceToSquared(h),f),g=Math.pow(h.distanceToSquared(u),f);p<1e-4&&(p=1),d<1e-4&&(d=p),g<1e-4&&(g=p),Au.initNonuniformCatmullRom(l.x,c.x,h.x,u.x,d,p,g),Cu.initNonuniformCatmullRom(l.y,c.y,h.y,u.y,d,p,g),Ru.initNonuniformCatmullRom(l.z,c.z,h.z,u.z,d,p,g)}else this.curveType==="catmullrom"&&(Au.initCatmullRom(l.x,c.x,h.x,u.x,this.tension),Cu.initCatmullRom(l.y,c.y,h.y,u.y,this.tension),Ru.initCatmullRom(l.z,c.z,h.z,u.z,this.tension));return n.set(Au.calc(o),Cu.calc(o),Ru.calc(o)),n};Jn.prototype.copy=function(t){pt.prototype.copy.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this};Jn.prototype.toJSON=function(){var t=pt.prototype.toJSON.call(this);t.points=[];for(var e=0,n=this.points.length;e<n;e++){var i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t};Jn.prototype.fromJSON=function(t){pt.prototype.fromJSON.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var i=t.points[e];this.points.push(new j().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this};function Cv(t,e,n,i,r){var s=(i-e)*.5,a=(r-n)*.5,o=t*t,l=t*o;return(2*n-2*i+s+a)*l+(-3*n+3*i-2*s-a)*o+s*t+n}function LL(t,e){var n=1-t;return n*n*e}function IL(t,e){return 2*(1-t)*t*e}function DL(t,e){return t*t*e}function Ja(t,e,n,i){return LL(t,e)+IL(t,n)+DL(t,i)}function NL(t,e){var n=1-t;return n*n*n*e}function BL(t,e){var n=1-t;return 3*n*n*t*e}function UL(t,e){return 3*(1-t)*t*t*e}function FL(t,e){return t*t*t*e}function Ka(t,e,n,i,r){return NL(t,e)+BL(t,n)+UL(t,i)+FL(t,r)}function Pi(t,e,n,i){pt.call(this),this.type="CubicBezierCurve",this.v0=t||new qe,this.v1=e||new qe,this.v2=n||new qe,this.v3=i||new qe}Pi.prototype=Object.create(pt.prototype);Pi.prototype.constructor=Pi;Pi.prototype.isCubicBezierCurve=!0;Pi.prototype.getPoint=function(t,e){var n=e||new qe,i=this.v0,r=this.v1,s=this.v2,a=this.v3;return n.set(Ka(t,i.x,r.x,s.x,a.x),Ka(t,i.y,r.y,s.y,a.y)),n};Pi.prototype.copy=function(t){return pt.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this};Pi.prototype.toJSON=function(){var t=pt.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t};Pi.prototype.fromJSON=function(t){return pt.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this};function nr(t,e,n,i){pt.call(this),this.type="CubicBezierCurve3",this.v0=t||new j,this.v1=e||new j,this.v2=n||new j,this.v3=i||new j}nr.prototype=Object.create(pt.prototype);nr.prototype.constructor=nr;nr.prototype.isCubicBezierCurve3=!0;nr.prototype.getPoint=function(t,e){var n=e||new j,i=this.v0,r=this.v1,s=this.v2,a=this.v3;return n.set(Ka(t,i.x,r.x,s.x,a.x),Ka(t,i.y,r.y,s.y,a.y),Ka(t,i.z,r.z,s.z,a.z)),n};nr.prototype.copy=function(t){return pt.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this};nr.prototype.toJSON=function(){var t=pt.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t};nr.prototype.fromJSON=function(t){return pt.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this};function Kn(t,e){pt.call(this),this.type="LineCurve",this.v1=t||new qe,this.v2=e||new qe}Kn.prototype=Object.create(pt.prototype);Kn.prototype.constructor=Kn;Kn.prototype.isLineCurve=!0;Kn.prototype.getPoint=function(t,e){var n=e||new qe;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n};Kn.prototype.getPointAt=function(t,e){return this.getPoint(t,e)};Kn.prototype.getTangent=function(){var t=this.v2.clone().sub(this.v1);return t.normalize()};Kn.prototype.copy=function(t){return pt.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this};Kn.prototype.toJSON=function(){var t=pt.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};Kn.prototype.fromJSON=function(t){return pt.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function Li(t,e){pt.call(this),this.type="LineCurve3",this.v1=t||new j,this.v2=e||new j}Li.prototype=Object.create(pt.prototype);Li.prototype.constructor=Li;Li.prototype.isLineCurve3=!0;Li.prototype.getPoint=function(t,e){var n=e||new j;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n};Li.prototype.getPointAt=function(t,e){return this.getPoint(t,e)};Li.prototype.copy=function(t){return pt.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this};Li.prototype.toJSON=function(){var t=pt.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};Li.prototype.fromJSON=function(t){return pt.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function Ii(t,e,n){pt.call(this),this.type="QuadraticBezierCurve",this.v0=t||new qe,this.v1=e||new qe,this.v2=n||new qe}Ii.prototype=Object.create(pt.prototype);Ii.prototype.constructor=Ii;Ii.prototype.isQuadraticBezierCurve=!0;Ii.prototype.getPoint=function(t,e){var n=e||new qe,i=this.v0,r=this.v1,s=this.v2;return n.set(Ja(t,i.x,r.x,s.x),Ja(t,i.y,r.y,s.y)),n};Ii.prototype.copy=function(t){return pt.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this};Ii.prototype.toJSON=function(){var t=pt.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};Ii.prototype.fromJSON=function(t){return pt.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function ir(t,e,n){pt.call(this),this.type="QuadraticBezierCurve3",this.v0=t||new j,this.v1=e||new j,this.v2=n||new j}ir.prototype=Object.create(pt.prototype);ir.prototype.constructor=ir;ir.prototype.isQuadraticBezierCurve3=!0;ir.prototype.getPoint=function(t,e){var n=e||new j,i=this.v0,r=this.v1,s=this.v2;return n.set(Ja(t,i.x,r.x,s.x),Ja(t,i.y,r.y,s.y),Ja(t,i.z,r.z,s.z)),n};ir.prototype.copy=function(t){return pt.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this};ir.prototype.toJSON=function(){var t=pt.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};ir.prototype.fromJSON=function(t){return pt.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function Di(t){pt.call(this),this.type="SplineCurve",this.points=t||[]}Di.prototype=Object.create(pt.prototype);Di.prototype.constructor=Di;Di.prototype.isSplineCurve=!0;Di.prototype.getPoint=function(t,e){var n=e||new qe,i=this.points,r=(i.length-1)*t,s=Math.floor(r),a=r-s,o=i[s===0?s:s-1],l=i[s],c=i[s>i.length-2?i.length-1:s+1],h=i[s>i.length-3?i.length-1:s+2];return n.set(Cv(a,o.x,l.x,c.x,h.x),Cv(a,o.y,l.y,c.y,h.y)),n};Di.prototype.copy=function(t){pt.prototype.copy.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var i=t.points[e];this.points.push(i.clone())}return this};Di.prototype.toJSON=function(){var t=pt.prototype.toJSON.call(this);t.points=[];for(var e=0,n=this.points.length;e<n;e++){var i=this.points[e];t.points.push(i.toArray())}return t};Di.prototype.fromJSON=function(t){pt.prototype.fromJSON.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var i=t.points[e];this.points.push(new qe().fromArray(i))}return this};var OL=Object.freeze({ArcCurve:jo,CatmullRomCurve3:Jn,CubicBezierCurve:Pi,CubicBezierCurve3:nr,EllipseCurve:ai,LineCurve:Kn,LineCurve3:Li,QuadraticBezierCurve:Ii,QuadraticBezierCurve3:ir,SplineCurve:Di});function vr(){pt.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}vr.prototype=Object.assign(Object.create(pt.prototype),{constructor:vr,add:function(t){this.curves.push(t)},closePath:function(){var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Kn(e,t))},getPoint:function(t){for(var e=t*this.getLength(),n=this.getCurveLengths(),i=0;i<n.length;){if(n[i]>=e){var r=n[i]-e,s=this.curves[i],a=s.getLength(),o=a===0?0:1-r/a;return s.getPointAt(o)}i++}return null},getLength:function(){var t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var t=[],e=0,n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t){t===void 0&&(t=40);for(var e=[],n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t){t=t||12;for(var e=[],n,i=0,r=this.curves;i<r.length;i++)for(var s=r[i],a=s&&s.isEllipseCurve?t*2:s&&s.isLineCurve?1:s&&s.isSplineCurve?t*s.points.length:t,o=s.getPoints(a),l=0;l<o.length;l++){var c=o[l];n&&n.equals(c)||(e.push(c),n=c)}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e},copy:function(t){pt.prototype.copy.call(this,t),this.curves=[];for(var e=0,n=t.curves.length;e<n;e++){var i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this},toJSON:function(){var t=pt.prototype.toJSON.call(this);t.autoClose=this.autoClose,t.curves=[];for(var e=0,n=this.curves.length;e<n;e++){var i=this.curves[e];t.curves.push(i.toJSON())}return t},fromJSON:function(t){pt.prototype.fromJSON.call(this,t),this.autoClose=t.autoClose,this.curves=[];for(var e=0,n=t.curves.length;e<n;e++){var i=t.curves[e];this.curves.push(new OL[i.type]().fromJSON(i))}return this}});function Ei(t){vr.call(this),this.type="Path",this.currentPoint=new qe,t&&this.setFromPoints(t)}Ei.prototype=Object.assign(Object.create(vr.prototype),{constructor:Ei,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(var e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y)},moveTo:function(t,e){this.currentPoint.set(t,e)},lineTo:function(t,e){var n=new Kn(this.currentPoint.clone(),new qe(t,e));this.curves.push(n),this.currentPoint.set(t,e)},quadraticCurveTo:function(t,e,n,i){var r=new Ii(this.currentPoint.clone(),new qe(t,e),new qe(n,i));this.curves.push(r),this.currentPoint.set(n,i)},bezierCurveTo:function(t,e,n,i,r,s){var a=new Pi(this.currentPoint.clone(),new qe(t,e),new qe(n,i),new qe(r,s));this.curves.push(a),this.currentPoint.set(r,s)},splineThru:function(t){var e=[this.currentPoint.clone()].concat(t),n=new Di(e);this.curves.push(n),this.currentPoint.copy(t[t.length-1])},arc:function(t,e,n,i,r,s){var a=this.currentPoint.x,o=this.currentPoint.y;this.absarc(t+a,e+o,n,i,r,s)},absarc:function(t,e,n,i,r,s){this.absellipse(t,e,n,n,i,r,s)},ellipse:function(t,e,n,i,r,s,a,o){var l=this.currentPoint.x,c=this.currentPoint.y;this.absellipse(t+l,e+c,n,i,r,s,a,o)},absellipse:function(t,e,n,i,r,s,a,o){var l=new ai(t,e,n,i,r,s,a,o);if(this.curves.length>0){var c=l.getPoint(0);c.equals(this.currentPoint)||this.lineTo(c.x,c.y)}this.curves.push(l);var h=l.getPoint(1);this.currentPoint.copy(h)},copy:function(t){return vr.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){var t=vr.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return vr.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}});function ls(t){Ei.call(this,t),this.uuid=wt.generateUUID(),this.type="Shape",this.holes=[]}ls.prototype=Object.assign(Object.create(Ei.prototype),{constructor:ls,getPointsHoles:function(t){for(var e=[],n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){Ei.prototype.copy.call(this,t),this.holes=[];for(var e=0,n=t.holes.length;e<n;e++){var i=t.holes[e];this.holes.push(i.clone())}return this},toJSON:function(){var t=Ei.prototype.toJSON.call(this);t.uuid=this.uuid,t.holes=[];for(var e=0,n=this.holes.length;e<n;e++){var i=this.holes[e];t.holes.push(i.toJSON())}return t},fromJSON:function(t){Ei.prototype.fromJSON.call(this,t),this.uuid=t.uuid,this.holes=[];for(var e=0,n=t.holes.length;e<n;e++){var i=t.holes[e];this.holes.push(new Ei().fromJSON(i))}return this}});function tn(t,e){nt.call(this),this.type="Light",this.color=new dt(t),this.intensity=e!==void 0?e:1,this.receiveShadow=void 0}tn.prototype=Object.assign(Object.create(nt.prototype),{constructor:tn,isLight:!0,copy:function(t){return nt.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){var e=nt.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}});function Kf(t,e,n){tn.call(this,t,n),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(nt.DefaultUp),this.updateMatrix(),this.groundColor=new dt(e)}Kf.prototype=Object.assign(Object.create(tn.prototype),{constructor:Kf,isHemisphereLight:!0,copy:function(t){return tn.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}});function Pa(t){this.camera=t,this.bias=0,this.radius=1,this.mapSize=new qe(512,512),this.map=null,this.matrix=new xt}Object.assign(Pa.prototype,{copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){var t={};return this.bias!==0&&(t.bias=this.bias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}});function Qf(){Pa.call(this,new mn(50,1,.5,500))}Qf.prototype=Object.assign(Object.create(Pa.prototype),{constructor:Qf,isSpotLightShadow:!0,update:function(t){var e=this.camera,n=wt.RAD2DEG*2*t.angle,i=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;(n!==e.fov||i!==e.aspect||r!==e.far)&&(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix())}});function ed(t,e,n,i,r,s){tn.call(this,t,e),this.type="SpotLight",this.position.copy(nt.DefaultUp),this.updateMatrix(),this.target=new nt,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(a){this.intensity=a/Math.PI}}),this.distance=n!==void 0?n:0,this.angle=i!==void 0?i:Math.PI/3,this.penumbra=r!==void 0?r:0,this.decay=s!==void 0?s:1,this.shadow=new Qf}ed.prototype=Object.assign(Object.create(tn.prototype),{constructor:ed,isSpotLight:!0,copy:function(t){return tn.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}});function td(t,e,n,i){tn.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(r){this.intensity=r/(4*Math.PI)}}),this.distance=n!==void 0?n:0,this.decay=i!==void 0?i:1,this.shadow=new Pa(new mn(90,1,.5,500))}td.prototype=Object.assign(Object.create(tn.prototype),{constructor:td,isPointLight:!0,copy:function(t){return tn.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}});function nd(){Pa.call(this,new Ao(-5,5,5,-5,.5,500))}nd.prototype=Object.assign(Object.create(Pa.prototype),{constructor:nd});function id(t,e){tn.call(this,t,e),this.type="DirectionalLight",this.position.copy(nt.DefaultUp),this.updateMatrix(),this.target=new nt,this.shadow=new nd}id.prototype=Object.assign(Object.create(tn.prototype),{constructor:id,isDirectionalLight:!0,copy:function(t){return tn.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}});function rd(t,e){tn.call(this,t,e),this.type="AmbientLight",this.castShadow=void 0}rd.prototype=Object.assign(Object.create(tn.prototype),{constructor:rd,isAmbientLight:!0});function sd(t,e,n,i){tn.call(this,t,e),this.type="RectAreaLight",this.width=n!==void 0?n:10,this.height=i!==void 0?i:10}sd.prototype=Object.assign(Object.create(tn.prototype),{constructor:sd,isRectAreaLight:!0,copy:function(t){return tn.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){var e=tn.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}});function ad(t,e,n,i){vn.call(this,t,e,n,i)}ad.prototype=Object.assign(Object.create(vn.prototype),{constructor:ad,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:Dc,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function od(t,e,n){vn.call(this,t,e,n)}od.prototype=Object.assign(Object.create(vn.prototype),{constructor:od,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:Dc,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function ri(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n}Object.assign(ri.prototype,{evaluate:function(t){var e=this.parameterPositions,n=this._cachedIndex,i=e[n],r=e[n-1];e:{t:{var s;n:{i:if(!(t<i)){for(var a=n+2;;){if(i===void 0){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,r)}if(n===a)break;if(r=i,i=e[++n],t<i)break t}s=e.length;break n}if(!(t>=r)){var o=e[1];t<o&&(n=2,r=o);for(var a=n-2;;){if(r===void 0)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(n===a)break;if(i=r,r=e[--n-1],t>=r)break t}s=n,n=0;break n}break e}for(;n<s;){var l=n+s>>>1;t<e[l]?s=l:n=l+1}if(i=e[n],r=e[n-1],r===void 0)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(i===void 0)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,r,t)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,t,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){for(var e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i,s=0;s!==i;++s)e[s]=n[r+s];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}});//!\ DECLARE ALIAS AFTER assign prototype !
Object.assign(ri.prototype,{beforeStart_:ri.prototype.copySampleValue_,afterEnd_:ri.prototype.copySampleValue_});function ld(t,e,n,i){ri.call(this,t,e,n,i)}ld.prototype=Object.assign(Object.create(ri.prototype),{constructor:ld,interpolate_:function(t,e,n,i){for(var r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=(n-e)/(i-e),c=o+a;o!==c;o+=4)ln.slerpFlat(r,0,s,o-a,s,o,l);return r}});function oh(t,e,n,i){vn.call(this,t,e,n,i)}oh.prototype=Object.assign(Object.create(vn.prototype),{constructor:oh,ValueTypeName:"quaternion",DefaultInterpolation:bc,InterpolantFactoryMethodLinear:function(t){return new ld(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0});function cd(t,e,n,i){vn.call(this,t,e,n,i)}cd.prototype=Object.assign(Object.create(vn.prototype),{constructor:cd,ValueTypeName:"color"});function Jo(t,e,n,i){vn.call(this,t,e,n,i)}Jo.prototype=Object.assign(Object.create(vn.prototype),{constructor:Jo,ValueTypeName:"number"});function hd(t,e,n,i){ri.call(this,t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}hd.prototype=Object.assign(Object.create(ri.prototype),{constructor:hd,DefaultSettings_:{endingStart:sa,endingEnd:sa},intervalChanged_:function(t,e,n){var i=this.parameterPositions,r=t-2,s=t+1,a=i[r],o=i[s];if(a===void 0)switch(this.getSettings_().endingStart){case js:r=t,a=2*e-n;break;case Nc:r=i.length-2,a=e+i[r]-i[r+1];break;default:r=t,a=n}if(o===void 0)switch(this.getSettings_().endingEnd){case js:s=t,o=2*n-e;break;case Nc:s=1,o=n+i[1]-i[0];break;default:s=t-1,o=e}var l=(n-e)*.5,c=this.valueSize;this._weightPrev=l/(e-a),this._weightNext=l/(o-n),this._offsetPrev=r*c,this._offsetNext=s*c},interpolate_:function(t,e,n,i){for(var r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,c=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,f=this._weightNext,d=(n-e)/(i-e),p=d*d,g=p*d,v=-u*g+2*u*p-u*d,m=(1+u)*g+(-1.5-2*u)*p+(-.5+u)*d+1,y=(-1-f)*g+(1.5+f)*p+.5*d,x=f*g-f*p,_=0;_!==a;++_)r[_]=v*s[c+_]+m*s[l+_]+y*s[o+_]+x*s[h+_];return r}});function lh(t,e,n,i){ri.call(this,t,e,n,i)}lh.prototype=Object.assign(Object.create(ri.prototype),{constructor:lh,interpolate_:function(t,e,n,i){for(var r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,c=(n-e)/(i-e),h=1-c,u=0;u!==a;++u)r[u]=s[l+u]*h+s[o+u]*c;return r}});function ud(t,e,n,i){ri.call(this,t,e,n,i)}ud.prototype=Object.assign(Object.create(ri.prototype),{constructor:ud,interpolate_:function(t){return this.copySampleValue_(t-1)}});var Pn={arraySlice:function(t,e,n){return Pn.isTypedArray(t)?new t.constructor(t.subarray(e,n!==void 0?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:typeof e.BYTES_PER_ELEMENT=="number"?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){function e(s,a){return t[s]-t[a]}for(var n=t.length,i=new Array(n),r=0;r!==n;++r)i[r]=r;return i.sort(e),i},sortedArray:function(t,e,n){for(var i=t.length,r=new t.constructor(i),s=0,a=0;a!==i;++s)for(var o=n[s]*e,l=0;l!==e;++l)r[a++]=t[o+l];return r},flattenJSON:function(t,e,n,i){for(var r=1,s=t[0];s!==void 0&&s[i]===void 0;)s=t[r++];if(s!==void 0){var a=s[i];if(a!==void 0)if(Array.isArray(a))do a=s[i],a!==void 0&&(e.push(s.time),n.push.apply(n,a)),s=t[r++];while(s!==void 0);else if(a.toArray!==void 0)do a=s[i],a!==void 0&&(e.push(s.time),a.toArray(n,n.length)),s=t[r++];while(s!==void 0);else do a=s[i],a!==void 0&&(e.push(s.time),n.push(a)),s=t[r++];while(s!==void 0)}}};function vn(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Pn.convertArray(e,this.TimeBufferType),this.values=Pn.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation),this.validate(),this.optimize()}Object.assign(vn,{parse:function(t){if(t.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var e=vn._getTrackTypeForValueTypeName(t.type);if(t.times===void 0){var n=[],i=[];Pn.flattenJSON(t.keys,n,i,"value"),t.times=n,t.values=i}return e.parse!==void 0?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)},toJSON:function(t){var e=t.constructor,n;if(e.toJSON!==void 0)n=e.toJSON(t);else{n={name:t.name,times:Pn.convertArray(t.times,Array),values:Pn.convertArray(t.values,Array)};var i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n},_getTrackTypeForValueTypeName:function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Jo;case"vector":case"vector2":case"vector3":case"vector4":return Ko;case"color":return cd;case"quaternion":return oh;case"bool":case"boolean":return od;case"string":return ad}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}});Object.assign(vn.prototype,{constructor:vn,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:bc,InterpolantFactoryMethodDiscrete:function(t){return new ud(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new lh(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new hd(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){var e;switch(t){case Dc:e=this.InterpolantFactoryMethodDiscrete;break;case bc:e=this.InterpolantFactoryMethodLinear;break;case Su:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){var n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);console.warn("THREE.KeyframeTrack:",n);return}this.createInterpolant=e},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Dc;case this.InterpolantFactoryMethodLinear:return bc;case this.InterpolantFactoryMethodSmooth:return Su}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(t!==0)for(var e=this.times,n=0,i=e.length;n!==i;++n)e[n]+=t;return this},scale:function(t){if(t!==1)for(var e=this.times,n=0,i=e.length;n!==i;++n)e[n]*=t;return this},trim:function(t,e){for(var n=this.times,i=n.length,r=0,s=i-1;r!==i&&n[r]<t;)++r;for(;s!==-1&&n[s]>e;)--s;if(++s,r!==0||s!==i){r>=s&&(s=Math.max(s,1),r=s-1);var a=this.getValueSize();this.times=Pn.arraySlice(n,r,s),this.values=Pn.arraySlice(this.values,r*a,s*a)}return this},validate:function(){var t=!0,e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);var n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);for(var s=null,a=0;a!==r;a++){var o=n[a];if(typeof o=="number"&&isNaN(o)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,o),t=!1;break}if(s!==null&&s>o){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,o,s),t=!1;break}s=o}if(i!==void 0&&Pn.isTypedArray(i))for(var a=0,l=i.length;a!==l;++a){var c=i[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),t=!1;break}}return t},optimize:function(){for(var t=this.times,e=this.values,n=this.getValueSize(),i=this.getInterpolation()===Su,r=1,s=t.length-1,a=1;a<s;++a){var o=!1,l=t[a],c=t[a+1];if(l!==c&&(a!==1||l!==l[0]))if(i)o=!0;else for(var h=a*n,u=h-n,f=h+n,d=0;d!==n;++d){var p=e[h+d];if(p!==e[u+d]||p!==e[f+d]){o=!0;break}}if(o){if(a!==r){t[r]=t[a];for(var g=a*n,v=r*n,d=0;d!==n;++d)e[v+d]=e[g+d]}++r}}if(s>0){t[r]=t[s];for(var g=s*n,v=r*n,d=0;d!==n;++d)e[v+d]=e[g+d];++r}return r!==t.length&&(this.times=Pn.arraySlice(t,0,r),this.values=Pn.arraySlice(e,0,r*n)),this}});function Ko(t,e,n,i){vn.call(this,t,e,n,i)}Ko.prototype=Object.assign(Object.create(vn.prototype),{constructor:Ko,ValueTypeName:"vector"});function pi(t,e,n){this.name=t,this.tracks=n,this.duration=e!==void 0?e:-1,this.uuid=wt.generateUUID(),this.duration<0&&this.resetDuration(),this.optimize()}Object.assign(pi,{parse:function(t){for(var e=[],n=t.tracks,i=1/(t.fps||1),r=0,s=n.length;r!==s;++r)e.push(vn.parse(n[r]).scale(i));return new pi(t.name,t.duration,e)},toJSON:function(t){for(var e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e},r=0,s=n.length;r!==s;++r)e.push(vn.toJSON(n[r]));return i},CreateFromMorphTargetSequence:function(t,e,n,i){for(var r=e.length,s=[],a=0;a<r;a++){var o=[],l=[];o.push((a+r-1)%r,a,(a+1)%r),l.push(0,1,0);var c=Pn.getKeyframeOrder(o);o=Pn.sortedArray(o,1,c),l=Pn.sortedArray(l,1,c),!i&&o[0]===0&&(o.push(r),l.push(l[0])),s.push(new Jo(".morphTargetInfluences["+e[a].name+"]",o,l).scale(1/n))}return new pi(t,-1,s)},findByName:function(t,e){var n=t;if(!Array.isArray(t)){var i=t;n=i.geometry&&i.geometry.animations||i.animations}for(var r=0;r<n.length;r++)if(n[r].name===e)return n[r];return null},CreateClipsFromMorphTargetSequences:function(t,e,n){for(var i={},r=/^([\w-]*?)([\d]+)$/,s=0,a=t.length;s<a;s++){var o=t[s],l=o.name.match(r);if(l&&l.length>1){var c=l[1],h=i[c];h||(i[c]=h=[]),h.push(o)}}var u=[];for(var c in i)u.push(pi.CreateFromMorphTargetSequence(c,i[c],e,n));return u},parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var n=function(x,_,b,w,S){if(b.length!==0){var C=[],L=[];Pn.flattenJSON(b,C,L,w),C.length!==0&&S.push(new x(_,C,L))}},i=[],r=t.name||"default",s=t.length||-1,a=t.fps||30,o=t.hierarchy||[],l=0;l<o.length;l++){var c=o[l].keys;if(!(!c||c.length===0))if(c[0].morphTargets){for(var h={},u=0;u<c.length;u++)if(c[u].morphTargets)for(var f=0;f<c[u].morphTargets.length;f++)h[c[u].morphTargets[f]]=-1;for(var d in h){for(var p=[],g=[],f=0;f!==c[u].morphTargets.length;++f){var v=c[u];p.push(v.time),g.push(v.morphTarget===d?1:0)}i.push(new Jo(".morphTargetInfluence["+d+"]",p,g))}s=h.length*(a||1)}else{var m=".bones["+e[l].name+"]";n(Ko,m+".position",c,"pos",i),n(oh,m+".quaternion",c,"rot",i),n(Ko,m+".scale",c,"scl",i)}}if(i.length===0)return null;var y=new pi(r,s,i);return y}});Object.assign(pi.prototype,{resetDuration:function(){for(var t=this.tracks,e=0,n=0,i=t.length;n!==i;++n){var r=this.tracks[n];e=Math.max(e,r.times[r.times.length-1])}this.duration=e},trim:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},optimize:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}});function wp(t){this.manager=t!==void 0?t:Qn,this.textures={}}Object.assign(wp.prototype,{load:function(t,e,n,i){var r=this,s=new rr(r.manager);s.load(t,function(a){e(r.parse(JSON.parse(a)))},n,i)},setTextures:function(t){this.textures=t},parse:function(t){var e=this.textures;function n(s){return e[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),e[s]}var i=new AL[t.type];if(t.uuid!==void 0&&(i.uuid=t.uuid),t.name!==void 0&&(i.name=t.name),t.color!==void 0&&i.color.setHex(t.color),t.roughness!==void 0&&(i.roughness=t.roughness),t.metalness!==void 0&&(i.metalness=t.metalness),t.emissive!==void 0&&i.emissive.setHex(t.emissive),t.specular!==void 0&&i.specular.setHex(t.specular),t.shininess!==void 0&&(i.shininess=t.shininess),t.clearCoat!==void 0&&(i.clearCoat=t.clearCoat),t.clearCoatRoughness!==void 0&&(i.clearCoatRoughness=t.clearCoatRoughness),t.uniforms!==void 0&&(i.uniforms=t.uniforms),t.vertexShader!==void 0&&(i.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(i.fragmentShader=t.fragmentShader),t.vertexColors!==void 0&&(i.vertexColors=t.vertexColors),t.fog!==void 0&&(i.fog=t.fog),t.flatShading!==void 0&&(i.flatShading=t.flatShading),t.blending!==void 0&&(i.blending=t.blending),t.side!==void 0&&(i.side=t.side),t.opacity!==void 0&&(i.opacity=t.opacity),t.transparent!==void 0&&(i.transparent=t.transparent),t.alphaTest!==void 0&&(i.alphaTest=t.alphaTest),t.depthTest!==void 0&&(i.depthTest=t.depthTest),t.depthWrite!==void 0&&(i.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(i.colorWrite=t.colorWrite),t.wireframe!==void 0&&(i.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(i.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(i.rotation=t.rotation),t.linewidth!==1&&(i.linewidth=t.linewidth),t.dashSize!==void 0&&(i.dashSize=t.dashSize),t.gapSize!==void 0&&(i.gapSize=t.gapSize),t.scale!==void 0&&(i.scale=t.scale),t.skinning!==void 0&&(i.skinning=t.skinning),t.morphTargets!==void 0&&(i.morphTargets=t.morphTargets),t.dithering!==void 0&&(i.dithering=t.dithering),t.visible!==void 0&&(i.visible=t.visible),t.userData!==void 0&&(i.userData=t.userData),t.shading!==void 0&&(i.flatShading=t.shading===1),t.size!==void 0&&(i.size=t.size),t.sizeAttenuation!==void 0&&(i.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(i.map=n(t.map)),t.alphaMap!==void 0&&(i.alphaMap=n(t.alphaMap),i.transparent=!0),t.bumpMap!==void 0&&(i.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(i.bumpScale=t.bumpScale),t.normalMap!==void 0&&(i.normalMap=n(t.normalMap)),t.normalScale!==void 0){var r=t.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new qe().fromArray(r)}return t.displacementMap!==void 0&&(i.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(i.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(i.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(i.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(i.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(i.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(i.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(i.specularMap=n(t.specularMap)),t.envMap!==void 0&&(i.envMap=n(t.envMap)),t.reflectivity!==void 0&&(i.reflectivity=t.reflectivity),t.lightMap!==void 0&&(i.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(i.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(i.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(i.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(i.gradientMap=n(t.gradientMap)),i}});function Tx(t){this.manager=t!==void 0?t:Qn}Object.assign(Tx.prototype,{load:function(t,e,n,i){var r=this,s=new rr(r.manager);s.load(t,function(a){e(r.parse(JSON.parse(a)))},n,i)},parse:function(t){var e=new ot,n=t.data.index;if(n!==void 0){var i=new Rv[n.type](n.array);e.setIndex(new Ct(i,1))}var r=t.data.attributes;for(var s in r){var a=r[s],i=new Rv[a.type](a.array);e.addAttribute(s,new Ct(i,a.itemSize,a.normalized))}var o=t.data.groups||t.data.drawcalls||t.data.offsets;if(o!==void 0)for(var l=0,c=o.length;l!==c;++l){var h=o[l];e.addGroup(h.start,h.count,h.materialIndex)}var u=t.data.boundingSphere;if(u!==void 0){var f=new j;u.center!==void 0&&f.fromArray(u.center),e.boundingSphere=new gi(f,u.radius)}return e}});var Rv={Int8Array,Uint8Array,Uint8ClampedArray:typeof Uint8ClampedArray<"u"?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Qo(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}}Qo.Handlers={handlers:[],add:function(t,e){this.handlers.push(t,e)},get:function(t){for(var e=this.handlers,n=0,i=e.length;n<i;n+=2){var r=e[n],s=e[n+1];if(r.test(t))return s}return null}};Object.assign(Qo.prototype,{crossOrigin:void 0,initMaterials:function(t,e,n){for(var i=[],r=0;r<t.length;++r)i[r]=this.createMaterial(t[r],e,n);return i},createMaterial:function(){var t={NoBlending:Pf,NormalBlending:Nh,AdditiveBlending:q0,SubtractiveBlending:$0,MultiplyBlending:Y0,CustomBlending:Z0},e=new dt,n=new Ex,i=new wp;return function(s,a,o){var l={};function c(d,p,g,v,m){var y=a+d,x=Qo.Handlers.get(y),_;x!==null?_=x.load(y):(n.setCrossOrigin(o),_=n.load(y)),p!==void 0&&(_.repeat.fromArray(p),p[0]!==1&&(_.wrapS=pr),p[1]!==1&&(_.wrapT=pr)),g!==void 0&&_.offset.fromArray(g),v!==void 0&&(v[0]==="repeat"&&(_.wrapS=pr),v[0]==="mirror"&&(_.wrapS=ra),v[1]==="repeat"&&(_.wrapT=pr),v[1]==="mirror"&&(_.wrapT=ra)),m!==void 0&&(_.anisotropy=m);var b=wt.generateUUID();return l[b]=_,b}var h={uuid:wt.generateUUID(),type:"MeshLambertMaterial"};for(var u in s){var f=s[u];switch(u){case"DbgColor":case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":h.name=f;break;case"blending":h.blending=t[f];break;case"colorAmbient":case"mapAmbient":console.warn("THREE.Loader.createMaterial:",u,"is no longer supported.");break;case"colorDiffuse":h.color=e.fromArray(f).getHex();break;case"colorSpecular":h.specular=e.fromArray(f).getHex();break;case"colorEmissive":h.emissive=e.fromArray(f).getHex();break;case"specularCoef":h.shininess=f;break;case"shading":f.toLowerCase()==="basic"&&(h.type="MeshBasicMaterial"),f.toLowerCase()==="phong"&&(h.type="MeshPhongMaterial"),f.toLowerCase()==="standard"&&(h.type="MeshStandardMaterial");break;case"mapDiffuse":h.map=c(f,s.mapDiffuseRepeat,s.mapDiffuseOffset,s.mapDiffuseWrap,s.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapEmissive":h.emissiveMap=c(f,s.mapEmissiveRepeat,s.mapEmissiveOffset,s.mapEmissiveWrap,s.mapEmissiveAnisotropy);break;case"mapEmissiveRepeat":case"mapEmissiveOffset":case"mapEmissiveWrap":case"mapEmissiveAnisotropy":break;case"mapLight":h.lightMap=c(f,s.mapLightRepeat,s.mapLightOffset,s.mapLightWrap,s.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":h.aoMap=c(f,s.mapAORepeat,s.mapAOOffset,s.mapAOWrap,s.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":h.bumpMap=c(f,s.mapBumpRepeat,s.mapBumpOffset,s.mapBumpWrap,s.mapBumpAnisotropy);break;case"mapBumpScale":h.bumpScale=f;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":h.normalMap=c(f,s.mapNormalRepeat,s.mapNormalOffset,s.mapNormalWrap,s.mapNormalAnisotropy);break;case"mapNormalFactor":h.normalScale=[f,f];break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":h.specularMap=c(f,s.mapSpecularRepeat,s.mapSpecularOffset,s.mapSpecularWrap,s.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapMetalness":h.metalnessMap=c(f,s.mapMetalnessRepeat,s.mapMetalnessOffset,s.mapMetalnessWrap,s.mapMetalnessAnisotropy);break;case"mapMetalnessRepeat":case"mapMetalnessOffset":case"mapMetalnessWrap":case"mapMetalnessAnisotropy":break;case"mapRoughness":h.roughnessMap=c(f,s.mapRoughnessRepeat,s.mapRoughnessOffset,s.mapRoughnessWrap,s.mapRoughnessAnisotropy);break;case"mapRoughnessRepeat":case"mapRoughnessOffset":case"mapRoughnessWrap":case"mapRoughnessAnisotropy":break;case"mapAlpha":h.alphaMap=c(f,s.mapAlphaRepeat,s.mapAlphaOffset,s.mapAlphaWrap,s.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":h.side=Ta;break;case"doubleSided":h.side=ml;break;case"transparency":console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),h.opacity=f;break;case"depthTest":case"depthWrite":case"colorWrite":case"opacity":case"reflectivity":case"transparent":case"visible":case"wireframe":h[u]=f;break;case"vertexColors":f===!0&&(h.vertexColors=Aa),f==="face"&&(h.vertexColors=X0);break;default:console.error("THREE.Loader.createMaterial: Unsupported",u,f);break}}return h.type==="MeshBasicMaterial"&&delete h.emissive,h.type!=="MeshPhongMaterial"&&delete h.specular,h.opacity<1&&(h.transparent=!0),i.setTextures(l),i.parse(h)}}()});var Ax={decodeText:function(t){if(typeof TextDecoder<"u")return new TextDecoder().decode(t);for(var e="",n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);return decodeURIComponent(escape(e))},extractUrlBase:function(t){var e=t.split("/");return e.length===1?"./":(e.pop(),e.join("/")+"/")}};function Cx(t){typeof t=="boolean"&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),t=void 0),this.manager=t!==void 0?t:Qn,this.withCredentials=!1}Object.assign(Cx.prototype,{load:function(t,e,n,i){var r=this,s=this.texturePath&&typeof this.texturePath=="string"?this.texturePath:Ax.extractUrlBase(t),a=new rr(this.manager);a.setWithCredentials(this.withCredentials),a.load(t,function(o){var l=JSON.parse(o),c=l.metadata;if(c!==void 0){var h=c.type;if(h!==void 0){if(h.toLowerCase()==="object"){console.error("THREE.JSONLoader: "+t+" should be loaded with THREE.ObjectLoader instead.");return}if(h.toLowerCase()==="scene"){console.error("THREE.JSONLoader: "+t+" should be loaded with THREE.SceneLoader instead.");return}}}var u=r.parse(l,s);e(u.geometry,u.materials)},n,i)},setTexturePath:function(t){this.texturePath=t},parse:function(){function t(r,s){function a(A,U){return A&1<<U}var o,l,c,h,u,f,d,p,g,v,m,y,x,_,b,w,S,C,L,M,E,N,k,F,V,ee,R,T=r.faces,H=r.vertices,O=r.normals,B=r.colors,q=r.scale,G=0;if(r.uvs!==void 0){for(o=0;o<r.uvs.length;o++)r.uvs[o].length&&G++;for(o=0;o<G;o++)s.faceVertexUvs[o]=[]}for(h=0,u=H.length;h<u;)C=new j,C.x=H[h++]*q,C.y=H[h++]*q,C.z=H[h++]*q,s.vertices.push(C);for(h=0,u=T.length;h<u;)if(v=T[h++],m=a(v,0),y=a(v,1),x=a(v,3),_=a(v,4),b=a(v,5),w=a(v,6),S=a(v,7),m){if(M=new br,M.a=T[h],M.b=T[h+1],M.c=T[h+3],E=new br,E.a=T[h+1],E.b=T[h+2],E.c=T[h+3],h+=4,y&&(g=T[h++],M.materialIndex=g,E.materialIndex=g),c=s.faces.length,x)for(o=0;o<G;o++)for(F=r.uvs[o],s.faceVertexUvs[o][c]=[],s.faceVertexUvs[o][c+1]=[],l=0;l<4;l++)p=T[h++],ee=F[p*2],R=F[p*2+1],V=new qe(ee,R),l!==2&&s.faceVertexUvs[o][c].push(V),l!==0&&s.faceVertexUvs[o][c+1].push(V);if(_&&(d=T[h++]*3,M.normal.set(O[d++],O[d++],O[d]),E.normal.copy(M.normal)),b)for(o=0;o<4;o++)d=T[h++]*3,k=new j(O[d++],O[d++],O[d]),o!==2&&M.vertexNormals.push(k),o!==0&&E.vertexNormals.push(k);if(w&&(f=T[h++],N=B[f],M.color.setHex(N),E.color.setHex(N)),S)for(o=0;o<4;o++)f=T[h++],N=B[f],o!==2&&M.vertexColors.push(new dt(N)),o!==0&&E.vertexColors.push(new dt(N));s.faces.push(M),s.faces.push(E)}else{if(L=new br,L.a=T[h++],L.b=T[h++],L.c=T[h++],y&&(g=T[h++],L.materialIndex=g),c=s.faces.length,x)for(o=0;o<G;o++)for(F=r.uvs[o],s.faceVertexUvs[o][c]=[],l=0;l<3;l++)p=T[h++],ee=F[p*2],R=F[p*2+1],V=new qe(ee,R),s.faceVertexUvs[o][c].push(V);if(_&&(d=T[h++]*3,L.normal.set(O[d++],O[d++],O[d])),b)for(o=0;o<3;o++)d=T[h++]*3,k=new j(O[d++],O[d++],O[d]),L.vertexNormals.push(k);if(w&&(f=T[h++],L.color.setHex(B[f])),S)for(o=0;o<3;o++)f=T[h++],L.vertexColors.push(new dt(B[f]));s.faces.push(L)}}function e(r,s){var a=r.influencesPerVertex!==void 0?r.influencesPerVertex:2;if(r.skinWeights)for(var o=0,l=r.skinWeights.length;o<l;o+=a){var c=r.skinWeights[o],h=a>1?r.skinWeights[o+1]:0,u=a>2?r.skinWeights[o+2]:0,f=a>3?r.skinWeights[o+3]:0;s.skinWeights.push(new Vt(c,h,u,f))}if(r.skinIndices)for(var o=0,l=r.skinIndices.length;o<l;o+=a){var d=r.skinIndices[o],p=a>1?r.skinIndices[o+1]:0,g=a>2?r.skinIndices[o+2]:0,v=a>3?r.skinIndices[o+3]:0;s.skinIndices.push(new Vt(d,p,g,v))}s.bones=r.bones,s.bones&&s.bones.length>0&&(s.skinWeights.length!==s.skinIndices.length||s.skinIndices.length!==s.vertices.length)&&console.warn("When skinning, number of vertices ("+s.vertices.length+"), skinIndices ("+s.skinIndices.length+"), and skinWeights ("+s.skinWeights.length+") should match.")}function n(r,s){var a=r.scale;if(r.morphTargets!==void 0)for(var o=0,l=r.morphTargets.length;o<l;o++){s.morphTargets[o]={},s.morphTargets[o].name=r.morphTargets[o].name,s.morphTargets[o].vertices=[];for(var c=s.morphTargets[o].vertices,h=r.morphTargets[o].vertices,u=0,f=h.length;u<f;u+=3){var d=new j;d.x=h[u]*a,d.y=h[u+1]*a,d.z=h[u+2]*a,c.push(d)}}if(r.morphColors!==void 0&&r.morphColors.length>0){console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');for(var p=s.faces,g=r.morphColors[0].colors,o=0,l=p.length;o<l;o++)p[o].color.fromArray(g,o*3)}}function i(r,s){var a=[],o=[];r.animation!==void 0&&o.push(r.animation),r.animations!==void 0&&(r.animations.length?o=o.concat(r.animations):o.push(r.animations));for(var l=0;l<o.length;l++){var c=pi.parseAnimation(o[l],s.bones);c&&a.push(c)}if(s.morphTargets){var h=pi.CreateClipsFromMorphTargetSequences(s.morphTargets,10);a=a.concat(h)}a.length>0&&(s.animations=a)}return function(s,a){s.data!==void 0&&(s=s.data),s.scale!==void 0?s.scale=1/s.scale:s.scale=1;var o=new vt;if(t(s,o),e(s,o),n(s,o),i(s,o),o.computeFaceNormals(),o.computeBoundingSphere(),s.materials===void 0||s.materials.length===0)return{geometry:o};var l=Qo.prototype.initMaterials(s.materials,a,this.crossOrigin);return{geometry:o,materials:l}}}()});function zL(t){this.manager=t!==void 0?t:Qn,this.texturePath=""}Object.assign(zL.prototype,{load:function(t,e,n,i){this.texturePath===""&&(this.texturePath=t.substring(0,t.lastIndexOf("/")+1));var r=this,s=new rr(r.manager);s.load(t,function(a){var o=null;try{o=JSON.parse(a)}catch(c){i!==void 0&&i(c),console.error("THREE:ObjectLoader: Can't parse "+t+".",c.message);return}var l=o.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+t+". Use THREE.JSONLoader instead.");return}r.parse(o,e)},n,i)},setTexturePath:function(t){this.texturePath=t},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t,e){var n=this.parseShape(t.shapes),i=this.parseGeometries(t.geometries,n),r=this.parseImages(t.images,function(){e!==void 0&&e(o)}),s=this.parseTextures(t.textures,r),a=this.parseMaterials(t.materials,s),o=this.parseObject(t.object,i,a);return t.animations&&(o.animations=this.parseAnimations(t.animations)),(t.images===void 0||t.images.length===0)&&e!==void 0&&e(o),o},parseShape:function(t){var e={};if(t!==void 0)for(var n=0,i=t.length;n<i;n++){var r=new ls().fromJSON(t[n]);e[r.uuid]=r}return e},parseGeometries:function(t,e){var n={};if(t!==void 0)for(var i=new Cx,r=new Tx,s=0,a=t.length;s<a;s++){var o,l=t[s];switch(l.type){case"PlaneGeometry":case"PlaneBufferGeometry":o=new Hn[l.type](l.width,l.height,l.widthSegments,l.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":o=new Hn[l.type](l.width,l.height,l.depth,l.widthSegments,l.heightSegments,l.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":o=new Hn[l.type](l.radius,l.segments,l.thetaStart,l.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":o=new Hn[l.type](l.radiusTop,l.radiusBottom,l.height,l.radialSegments,l.heightSegments,l.openEnded,l.thetaStart,l.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":o=new Hn[l.type](l.radius,l.height,l.radialSegments,l.heightSegments,l.openEnded,l.thetaStart,l.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":o=new Hn[l.type](l.radius,l.widthSegments,l.heightSegments,l.phiStart,l.phiLength,l.thetaStart,l.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":o=new Hn[l.type](l.radius,l.detail);break;case"RingGeometry":case"RingBufferGeometry":o=new Hn[l.type](l.innerRadius,l.outerRadius,l.thetaSegments,l.phiSegments,l.thetaStart,l.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":o=new Hn[l.type](l.radius,l.tube,l.radialSegments,l.tubularSegments,l.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":o=new Hn[l.type](l.radius,l.tube,l.tubularSegments,l.radialSegments,l.p,l.q);break;case"LatheGeometry":case"LatheBufferGeometry":o=new Hn[l.type](l.points,l.segments,l.phiStart,l.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":o=new Hn[l.type](l.vertices,l.indices,l.radius,l.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":for(var c=[],s=0,a=l.shapes.length;s<a;s++){var h=e[l.shapes[s]];c.push(h)}o=new Hn[l.type](c,l.curveSegments);break;case"BufferGeometry":o=r.parse(l);break;case"Geometry":o=i.parse(l,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+l.type+'"');continue}o.uuid=l.uuid,l.name!==void 0&&(o.name=l.name),n[l.uuid]=o}return n},parseMaterials:function(t,e){var n={};if(t!==void 0){var i=new wp;i.setTextures(e);for(var r=0,s=t.length;r<s;r++){var a=t[r];if(a.type==="MultiMaterial"){for(var o=[],l=0;l<a.materials.length;l++)o.push(i.parse(a.materials[l]));n[a.uuid]=o}else n[a.uuid]=i.parse(a)}}return n},parseAnimations:function(t){for(var e=[],n=0;n<t.length;n++){var i=pi.parse(t[n]);e.push(i)}return e},parseImages:function(t,e){var n=this,i={};function r(u){return n.manager.itemStart(u),a.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemEnd(u),n.manager.itemError(u)})}if(t!==void 0&&t.length>0){var s=new Sx(e),a=new Fh(s);a.setCrossOrigin(this.crossOrigin);for(var o=0,l=t.length;o<l;o++){var c=t[o],h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url)?c.url:n.texturePath+c.url;i[c.uuid]=r(h)}}return i},parseTextures:function(t,e){function n(l,c){return typeof l=="number"?l:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",l),c[l])}var i={};if(t!==void 0)for(var r=0,s=t.length;r<s;r++){var a=t[r];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),e[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);var o=new Ht(e[a.image]);o.needsUpdate=!0,o.uuid=a.uuid,a.name!==void 0&&(o.name=a.name),a.mapping!==void 0&&(o.mapping=n(a.mapping,GL)),a.offset!==void 0&&o.offset.fromArray(a.offset),a.repeat!==void 0&&o.repeat.fromArray(a.repeat),a.center!==void 0&&o.center.fromArray(a.center),a.rotation!==void 0&&(o.rotation=a.rotation),a.wrap!==void 0&&(o.wrapS=n(a.wrap[0],Pv),o.wrapT=n(a.wrap[1],Pv)),a.minFilter!==void 0&&(o.minFilter=n(a.minFilter,Lv)),a.magFilter!==void 0&&(o.magFilter=n(a.magFilter,Lv)),a.anisotropy!==void 0&&(o.anisotropy=a.anisotropy),a.flipY!==void 0&&(o.flipY=a.flipY),i[a.uuid]=o}return i},parseObject:function(t,e,n){var i;function r(p){return e[p]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",p),e[p]}function s(p){if(p!==void 0){if(Array.isArray(p)){for(var g=[],v=0,m=p.length;v<m;v++){var y=p[v];n[y]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",y),g.push(n[y])}return g}return n[p]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",p),n[p]}}switch(t.type){case"Scene":i=new kf,t.background!==void 0&&Number.isInteger(t.background)&&(i.background=new dt(t.background)),t.fog!==void 0&&(t.fog.type==="Fog"?i.fog=new Lo(t.fog.color,t.fog.near,t.fog.far):t.fog.type==="FogExp2"&&(i.fog=new Po(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":i=new mn(t.fov,t.aspect,t.near,t.far),t.focus!==void 0&&(i.focus=t.focus),t.zoom!==void 0&&(i.zoom=t.zoom),t.filmGauge!==void 0&&(i.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(i.filmOffset=t.filmOffset),t.view!==void 0&&(i.view=Object.assign({},t.view));break;case"OrthographicCamera":i=new Ao(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":i=new rd(t.color,t.intensity);break;case"DirectionalLight":i=new id(t.color,t.intensity);break;case"PointLight":i=new td(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":i=new sd(t.color,t.intensity,t.width,t.height);break;case"SpotLight":i=new ed(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":i=new Kf(t.color,t.groundColor,t.intensity);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var a=r(t.geometry),o=s(t.material);a.bones&&a.bones.length>0?i=new qf(a,o):i=new Fn(a,o);break;case"LOD":i=new zc;break;case"Line":i=new Zn(r(t.geometry),s(t.material),t.mode);break;case"LineLoop":i=new $f(r(t.geometry),s(t.material));break;case"LineSegments":i=new Yt(r(t.geometry),s(t.material));break;case"PointCloud":case"Points":i=new Yf(r(t.geometry),s(t.material));break;case"Sprite":i=new Wf(s(t.material));break;case"Group":i=new Zf;break;default:i=new nt}if(i.uuid=t.uuid,t.name!==void 0&&(i.name=t.name),t.matrix!==void 0?(i.matrix.fromArray(t.matrix),i.matrix.decompose(i.position,i.quaternion,i.scale)):(t.position!==void 0&&i.position.fromArray(t.position),t.rotation!==void 0&&i.rotation.fromArray(t.rotation),t.quaternion!==void 0&&i.quaternion.fromArray(t.quaternion),t.scale!==void 0&&i.scale.fromArray(t.scale)),t.castShadow!==void 0&&(i.castShadow=t.castShadow),t.receiveShadow!==void 0&&(i.receiveShadow=t.receiveShadow),t.shadow&&(t.shadow.bias!==void 0&&(i.shadow.bias=t.shadow.bias),t.shadow.radius!==void 0&&(i.shadow.radius=t.shadow.radius),t.shadow.mapSize!==void 0&&i.shadow.mapSize.fromArray(t.shadow.mapSize),t.shadow.camera!==void 0&&(i.shadow.camera=this.parseObject(t.shadow.camera))),t.visible!==void 0&&(i.visible=t.visible),t.userData!==void 0&&(i.userData=t.userData),t.children!==void 0)for(var l=t.children,c=0;c<l.length;c++)i.add(this.parseObject(l[c],e,n));if(t.type==="LOD")for(var h=t.levels,u=0;u<h.length;u++){var f=h[u],d=i.getObjectByProperty("uuid",f.object);d!==void 0&&i.addLevel(d,f.distance)}return i}});var GL={UVMapping:dp,CubeReflectionMapping:pp,CubeRefractionMapping:If,EquirectangularReflectionMapping:ex,EquirectangularRefractionMapping:Df,SphericalReflectionMapping:tx,CubeUVReflectionMapping:mp,CubeUVRefractionMapping:vp},Pv={RepeatWrapping:pr,ClampToEdgeWrapping:ni,MirroredRepeatWrapping:ra},Lv={NearestFilter:ii,NearestMipMapNearestFilter:gp,NearestMipMapLinearFilter:yp,LinearFilter:$n,LinearMipMapNearestFilter:nx,LinearMipMapLinearFilter:Uh};function Iv(t){typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.manager=t!==void 0?t:Qn,this.options=void 0}Iv.prototype={constructor:Iv,setOptions:function(e){return this.options=e,this},load:function(e,n,i,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e);var s=this,a=_a.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){n&&n(a),s.manager.itemEnd(e)},0),a;fetch(e).then(function(o){return o.blob()}).then(function(o){return createImageBitmap(o,s.options)}).then(function(o){_a.add(e,o),n&&n(o),s.manager.itemEnd(e)}).catch(function(o){r&&r(o),s.manager.itemEnd(e),s.manager.itemError(e)})},setCrossOrigin:function(){return this},setPath:function(t){return this.path=t,this}};function Rx(){this.type="ShapePath",this.subPaths=[],this.currentPath=null}Object.assign(Rx.prototype,{moveTo:function(t,e){this.currentPath=new Ei,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e)},lineTo:function(t,e){this.currentPath.lineTo(t,e)},quadraticCurveTo:function(t,e,n,i){this.currentPath.quadraticCurveTo(t,e,n,i)},bezierCurveTo:function(t,e,n,i,r,s){this.currentPath.bezierCurveTo(t,e,n,i,r,s)},splineThru:function(t){this.currentPath.splineThru(t)},toShapes:function(t,e){function n(V){for(var ee=[],R=0,T=V.length;R<T;R++){var H=V[R],O=new ls;O.curves=H.curves,ee.push(O)}return ee}function i(V,ee){for(var R=ee.length,T=!1,H=R-1,O=0;O<R;H=O++){var B=ee[H],q=ee[O],G=q.x-B.x,A=q.y-B.y;if(Math.abs(A)>Number.EPSILON){if(A<0&&(B=ee[O],G=-G,q=ee[H],A=-A),V.y<B.y||V.y>q.y)continue;if(V.y===B.y){if(V.x===B.x)return!0}else{var U=A*(V.x-B.x)-G*(V.y-B.y);if(U===0)return!0;if(U<0)continue;T=!T}}else{if(V.y!==B.y)continue;if(q.x<=V.x&&V.x<=B.x||B.x<=V.x&&V.x<=q.x)return!0}}return T}var r=wr.isClockWise,s=this.subPaths;if(s.length===0)return[];if(e===!0)return n(s);var a,o,l,c=[];if(s.length===1)return o=s[0],l=new ls,l.curves=o.curves,c.push(l),c;var h=!r(s[0].getPoints());h=t?!h:h;var u=[],f=[],d=[],p=0,g;f[p]=void 0,d[p]=[];for(var v=0,m=s.length;v<m;v++)o=s[v],g=o.getPoints(),a=r(g),a=t?!a:a,a?(!h&&f[p]&&p++,f[p]={s:new ls,p:g},f[p].s.curves=o.curves,h&&p++,d[p]=[]):d[p].push({h:o,p:g[0]});if(!f[0])return n(s);if(f.length>1){for(var y=!1,x=[],_=0,b=f.length;_<b;_++)u[_]=[];for(var _=0,b=f.length;_<b;_++)for(var w=d[_],S=0;S<w.length;S++){for(var C=w[S],L=!0,M=0;M<f.length;M++)i(C.p,f[M].p)&&(_!==M&&x.push({froms:_,tos:M,hole:S}),L?(L=!1,u[M].push(C)):y=!0);L&&u[_].push(C)}x.length>0&&(y||(d=u))}for(var E,v=0,N=f.length;v<N;v++){l=f[v].s,c.push(l),E=d[v];for(var k=0,F=E.length;k<F;k++)l.holes.push(E[k].h)}return c}});function Px(t){this.type="Font",this.data=t}Object.assign(Px.prototype,{isFont:!0,generateShapes:function(t,e,n){e===void 0&&(e=100),n===void 0&&(n=4);for(var i=[],r=VL(t,e,n,this.data),s=0,a=r.length;s<a;s++)Array.prototype.push.apply(i,r[s].toShapes());return i}});function VL(t,e,n,i){for(var r=String(t).split(""),s=e/i.resolution,a=(i.boundingBox.yMax-i.boundingBox.yMin+i.underlineThickness)*s,o=[],l=0,c=0,h=0;h<r.length;h++){var u=r[h];if(u===`
`)l=0,c-=a;else{var f=HL(u,n,s,l,c,i);l+=f.offsetX,o.push(f.path)}}return o}function HL(t,e,n,i,r,s){var a=s.glyphs[t]||s.glyphs["?"];if(a){var o=new Rx,l,c,h,u,f,d,p,g;if(a.o)for(var v=a._cachedOutline||(a._cachedOutline=a.o.split(" ")),m=0,y=v.length;m<y;){var x=v[m++];switch(x){case"m":l=v[m++]*n+i,c=v[m++]*n+r,o.moveTo(l,c);break;case"l":l=v[m++]*n+i,c=v[m++]*n+r,o.lineTo(l,c);break;case"q":h=v[m++]*n+i,u=v[m++]*n+r,f=v[m++]*n+i,d=v[m++]*n+r,o.quadraticCurveTo(f,d,h,u);break;case"b":h=v[m++]*n+i,u=v[m++]*n+r,f=v[m++]*n+i,d=v[m++]*n+r,p=v[m++]*n+i,g=v[m++]*n+r,o.bezierCurveTo(f,d,p,g,h,u);break}}return{offsetX:a.ha*n,path:o}}}function kL(t){this.manager=t!==void 0?t:Qn}Object.assign(kL.prototype,{load:function(t,e,n,i){var r=this,s=new rr(this.manager);s.setPath(this.path),s.load(t,function(a){var o;try{o=JSON.parse(a)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),o=JSON.parse(a.substring(65,a.length-2))}var l=r.parse(o);e&&e(l)},n,i)},parse:function(t){return new Px(t)},setPath:function(t){return this.path=t,this}});var uc,Lx={getContext:function(){return uc===void 0&&(uc=new(window.AudioContext||window.webkitAudioContext)),uc},setContext:function(t){uc=t}};function Ix(t){this.manager=t!==void 0?t:Qn}Object.assign(Ix.prototype,{load:function(t,e,n,i){var r=new rr(this.manager);r.setResponseType("arraybuffer"),r.load(t,function(s){var a=Lx.getContext();a.decodeAudioData(s,function(o){e(o)})},n,i)}});function WL(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new mn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new mn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1}Object.assign(WL.prototype,{update:function(){var t,e,n,i,r,s,a,o,l=new xt,c=new xt;return function(u){var f=t!==this||e!==u.focus||n!==u.fov||i!==u.aspect*this.aspect||r!==u.near||s!==u.far||a!==u.zoom||o!==this.eyeSep;if(f){t=this,e=u.focus,n=u.fov,i=u.aspect*this.aspect,r=u.near,s=u.far,a=u.zoom;var d=u.projectionMatrix.clone();o=this.eyeSep/2;var p=o*r/e,g=r*Math.tan(wt.DEG2RAD*n*.5)/a,v,m;c.elements[12]=-o,l.elements[12]=o,v=-g*i+p,m=g*i+p,d.elements[0]=2*r/(m-v),d.elements[8]=(m+v)/(m-v),this.cameraL.projectionMatrix.copy(d),v=-g*i-p,m=g*i-p,d.elements[0]=2*r/(m-v),d.elements[8]=(m+v)/(m-v),this.cameraR.projectionMatrix.copy(d)}this.cameraL.matrixWorld.copy(u.matrixWorld).multiply(c),this.cameraR.matrixWorld.copy(u.matrixWorld).multiply(l)}}()});function ch(t,e,n){nt.call(this),this.type="CubeCamera";var i=90,r=1,s=new mn(i,r,t,e);s.up.set(0,-1,0),s.lookAt(new j(1,0,0)),this.add(s);var a=new mn(i,r,t,e);a.up.set(0,-1,0),a.lookAt(new j(-1,0,0)),this.add(a);var o=new mn(i,r,t,e);o.up.set(0,0,1),o.lookAt(new j(0,1,0)),this.add(o);var l=new mn(i,r,t,e);l.up.set(0,0,-1),l.lookAt(new j(0,-1,0)),this.add(l);var c=new mn(i,r,t,e);c.up.set(0,-1,0),c.lookAt(new j(0,0,1)),this.add(c);var h=new mn(i,r,t,e);h.up.set(0,-1,0),h.lookAt(new j(0,0,-1)),this.add(h);var u={format:So,magFilter:$n,minFilter:$n};this.renderTarget=new To(n,n,u),this.renderTarget.texture.name="CubeCamera",this.update=function(f,d){this.parent===null&&this.updateMatrixWorld();var p=this.renderTarget,g=p.texture.generateMipmaps;p.texture.generateMipmaps=!1,p.activeCubeFace=0,f.render(d,s,p),p.activeCubeFace=1,f.render(d,a,p),p.activeCubeFace=2,f.render(d,o,p),p.activeCubeFace=3,f.render(d,l,p),p.activeCubeFace=4,f.render(d,c,p),p.texture.generateMipmaps=g,p.activeCubeFace=5,f.render(d,h,p),f.setRenderTarget(null)},this.clear=function(f,d,p,g){for(var v=this.renderTarget,m=0;m<6;m++)v.activeCubeFace=m,f.setRenderTarget(v),f.clear(d,p,g);f.setRenderTarget(null)}}ch.prototype=Object.create(nt.prototype);ch.prototype.constructor=ch;function Dv(){nt.call(this),this.type="AudioListener",this.context=Lx.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null}Dv.prototype=Object.assign(Object.create(nt.prototype),{constructor:Dv,getInput:function(){return this.gain},removeFilter:function(){this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},getFilter:function(){return this.filter},setFilter:function(t){this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination)},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(t){this.gain.gain.value=t},updateMatrixWorld:function(){var t=new j,e=new ln,n=new j,i=new j;return function(s){nt.prototype.updateMatrixWorld.call(this,s);var a=this.context.listener,o=this.up;this.matrixWorld.decompose(t,e,n),i.set(0,0,-1).applyQuaternion(e),a.positionX?(a.positionX.setValueAtTime(t.x,this.context.currentTime),a.positionY.setValueAtTime(t.y,this.context.currentTime),a.positionZ.setValueAtTime(t.z,this.context.currentTime),a.forwardX.setValueAtTime(i.x,this.context.currentTime),a.forwardY.setValueAtTime(i.y,this.context.currentTime),a.forwardZ.setValueAtTime(i.z,this.context.currentTime),a.upX.setValueAtTime(o.x,this.context.currentTime),a.upY.setValueAtTime(o.y,this.context.currentTime),a.upZ.setValueAtTime(o.z,this.context.currentTime)):(a.setPosition(t.x,t.y,t.z),a.setOrientation(i.x,i.y,i.z,o.x,o.y,o.z))}}()});function el(t){nt.call(this),this.type="Audio",this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.loop=!1,this.startTime=0,this.offset=0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this.filters=[]}el.prototype=Object.assign(Object.create(nt.prototype),{constructor:el,getOutput:function(){return this.gain},setNodeSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this},setBuffer:function(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}var t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.onended=this.onEnded.bind(this),t.playbackRate.setValueAtTime(this.playbackRate,this.startTime),this.startTime=this.context.currentTime,t.start(this.startTime,this.offset),this.isPlaying=!0,this.source=t,this.connect()},pause:function(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this.source.stop(),this.offset+=(this.context.currentTime-this.startTime)*this.playbackRate,this.isPlaying=!1),this},stop:function(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.source.stop(),this.offset=0,this.isPlaying=!1,this},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(t){return t||(t=[]),this.isPlaying===!0?(this.disconnect(),this.filters=t,this.connect()):this.filters=t,this},getFilter:function(){return this.getFilters()[0]},setFilter:function(t){return this.setFilters(t?[t]:[])},setPlaybackRate:function(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setValueAtTime(this.playbackRate,this.context.currentTime),this},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this},getVolume:function(){return this.gain.gain.value},setVolume:function(t){return this.gain.gain.value=t,this}});function Nv(t){el.call(this,t),this.panner=this.context.createPanner(),this.panner.connect(this.gain)}Nv.prototype=Object.assign(Object.create(el.prototype),{constructor:Nv,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(t){this.panner.refDistance=t},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(t){this.panner.rolloffFactor=t},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(t){this.panner.distanceModel=t},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(t){this.panner.maxDistance=t},updateMatrixWorld:function(){var t=new j;return function(n){nt.prototype.updateMatrixWorld.call(this,n),t.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(t.x,t.y,t.z)}}()});function Dx(t,e){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e!==void 0?e:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}Object.assign(Dx.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var t=0,e=this.getFrequencyData(),n=0;n<e.length;n++)t+=e[n];return t/e.length}});function Nx(t,e,n){this.binding=t,this.valueSize=n;var i=Float64Array,r;switch(e){case"quaternion":r=this._slerp;break;case"string":case"bool":i=Array,r=this._select;break;default:r=this._lerp}this.buffer=new i(n*4),this._mixBufferRegion=r,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}Object.assign(Nx.prototype,{accumulate:function(t,e){var n=this.buffer,i=this.valueSize,r=t*i+i,s=this.cumulativeWeight;if(s===0){for(var a=0;a!==i;++a)n[r+a]=n[a];s=e}else{s+=e;var o=e/s;this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=s},apply:function(t){var e=this.valueSize,n=this.buffer,i=t*e+e,r=this.cumulativeWeight,s=this.binding;if(this.cumulativeWeight=0,r<1){var a=e*3;this._mixBufferRegion(n,i,a,1-r,e)}for(var o=e,l=e+e;o!==l;++o)if(n[o]!==n[o+e]){s.setValue(n,i);break}},saveOriginalState:function(){var t=this.binding,e=this.buffer,n=this.valueSize,i=n*3;t.getValue(e,i);for(var r=n,s=i;r!==s;++r)e[r]=e[i+r%n];this.cumulativeWeight=0},restoreOriginalState:function(){var t=this.valueSize*3;this.binding.setValue(this.buffer,t)},_select:function(t,e,n,i,r){if(i>=.5)for(var s=0;s!==r;++s)t[e+s]=t[n+s]},_slerp:function(t,e,n,i){ln.slerpFlat(t,e,t,e,t,n,i)},_lerp:function(t,e,n,i,r){for(var s=1-i,a=0;a!==r;++a){var o=e+a;t[o]=t[o]*s+t[n+a]*i}}});var Pu="\\[\\]\\.:\\/";function Bx(t,e,n){var i=n||Dn.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}Object.assign(Bx.prototype,{getValue:function(t,e){this.bind();var n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)},setValue:function(t,e){for(var n=this._bindings,i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)},bind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()},unbind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}});function Dn(t,e,n){this.path=e,this.parsedPath=n||Dn.parseTrackName(e),this.node=Dn.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}Object.assign(Dn,{Composite:Bx,create:function(t,e,n){return t&&t.isAnimationObjectGroup?new Dn.Composite(t,e,n):new Dn(t,e,n)},sanitizeNodeName:function(){var t=new RegExp("["+Pu+"]","g");return function(n){return n.replace(/\s/g,"_").replace(t,"")}}(),parseTrackName:function(){var t="[^"+Pu+"]",e="[^"+Pu.replace("\\.","")+"]",n=/((?:WC+[\/:])*)/.source.replace("WC",t),i=/(WCOD+)?/.source.replace("WCOD",e),r=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",t),s=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",t),a=new RegExp("^"+n+i+r+s+"$"),o=["material","materials","bones"];return function(c){var h=a.exec(c);if(!h)throw new Error("PropertyBinding: Cannot parse trackName: "+c);var u={nodeName:h[2],objectName:h[3],objectIndex:h[4],propertyName:h[5],propertyIndex:h[6]},f=u.nodeName&&u.nodeName.lastIndexOf(".");if(f!==void 0&&f!==-1){var d=u.nodeName.substring(f+1);o.indexOf(d)!==-1&&(u.nodeName=u.nodeName.substring(0,f),u.objectName=d)}if(u.propertyName===null||u.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+c);return u}}(),findNode:function(t,e){if(!e||e===""||e==="root"||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){var n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){var i=function(s){for(var a=0;a<s.length;a++){var o=s[a];if(o.name===e||o.uuid===e)return o;var l=i(o.children);if(l)return l}return null},r=i(t.children);if(r)return r}return null}});Object.assign(Dn.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,n){e[n]=this.node[this.propertyName]},function(e,n){for(var i=this.resolvedProperty,r=0,s=i.length;r!==s;++r)e[n++]=i[r]},function(e,n){e[n]=this.resolvedProperty[this.propertyIndex]},function(e,n){this.resolvedProperty.toArray(e,n)}],SetterByBindingTypeAndVersioning:[[function(e,n){this.targetObject[this.propertyName]=e[n]},function(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.needsUpdate=!0},function(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){for(var i=this.resolvedProperty,r=0,s=i.length;r!==s;++r)i[r]=e[n++]},function(e,n){for(var i=this.resolvedProperty,r=0,s=i.length;r!==s;++r)i[r]=e[n++];this.targetObject.needsUpdate=!0},function(e,n){for(var i=this.resolvedProperty,r=0,s=i.length;r!==s;++r)i[r]=e[n++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){this.resolvedProperty[this.propertyIndex]=e[n]},function(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.needsUpdate=!0},function(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){this.resolvedProperty.fromArray(e,n)},function(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.needsUpdate=!0},function(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,n){this.bind(),this.getValue(e,n)},setValue:function(e,n){this.bind(),this.setValue(e,n)},bind:function(){var t=this.node,e=this.parsedPath,n=e.objectName,i=e.propertyName,r=e.propertyIndex;if(t||(t=Dn.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){var s=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(var a=0;a<t.length;a++)if(t[a].name===s){s=a;break}break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(s!==void 0){if(t[s]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[s]}}var o=t[i];if(o===void 0){var l=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+i+" but it wasn't found.",t);return}var c=this.Versioning.None;t.needsUpdate!==void 0?(c=this.Versioning.NeedsUpdate,this.targetObject=t):t.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=t);var h=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(t.geometry.isBufferGeometry){if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}for(var a=0;a<this.node.geometry.morphAttributes.position.length;a++)if(t.geometry.morphAttributes.position[a].name===r){r=a;break}}else{if(!t.geometry.morphTargets){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);return}for(var a=0;a<this.node.geometry.morphTargets.length;a++)if(t.geometry.morphTargets[a].name===r){r=a;break}}}h=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else o.fromArray!==void 0&&o.toArray!==void 0?(h=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(h=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][c]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}});//!\ DECLARE ALIAS AFTER assign prototype !
Object.assign(Dn.prototype,{_getValue_unbound:Dn.prototype.getValue,_setValue_unbound:Dn.prototype.setValue});function XL(){this.uuid=wt.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var t={};this._indicesByUUID=t;for(var e=0,n=arguments.length;e!==n;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var i=this;this.stats={objects:{get total(){return i._objects.length},get inUse(){return this.total-i.nCachedObjects_}},get bindingsPerObject(){return i._bindings.length}}}Object.assign(XL.prototype,{isAnimationObjectGroup:!0,add:function(){for(var t=this._objects,e=t.length,n=this.nCachedObjects_,i=this._indicesByUUID,r=this._paths,s=this._parsedPaths,a=this._bindings,o=a.length,l=void 0,c=0,h=arguments.length;c!==h;++c){var u=arguments[c],f=u.uuid,d=i[f];if(d===void 0){d=e++,i[f]=d,t.push(u);for(var p=0,g=o;p!==g;++p)a[p].push(new Dn(u,r[p],s[p]))}else if(d<n){l=t[d];var v=--n,m=t[v];i[m.uuid]=d,t[d]=m,i[f]=v,t[v]=u;for(var p=0,g=o;p!==g;++p){var y=a[p],x=y[v],_=y[d];y[d]=x,_===void 0&&(_=new Dn(u,r[p],s[p])),y[v]=_}}else t[d]!==l&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=n},remove:function(){for(var t=this._objects,e=this.nCachedObjects_,n=this._indicesByUUID,i=this._bindings,r=i.length,s=0,a=arguments.length;s!==a;++s){var o=arguments[s],l=o.uuid,c=n[l];if(c!==void 0&&c>=e){var h=e++,u=t[h];n[u.uuid]=c,t[c]=u,n[l]=h,t[h]=o;for(var f=0,d=r;f!==d;++f){var p=i[f],g=p[h],v=p[c];p[c]=g,p[h]=v}}}this.nCachedObjects_=e},uncache:function(){for(var t=this._objects,e=t.length,n=this.nCachedObjects_,i=this._indicesByUUID,r=this._bindings,s=r.length,a=0,o=arguments.length;a!==o;++a){var l=arguments[a],c=l.uuid,h=i[c];if(h!==void 0)if(delete i[c],h<n){var u=--n,f=t[u],d=--e,p=t[d];i[f.uuid]=h,t[h]=f,i[p.uuid]=u,t[u]=p,t.pop();for(var g=0,v=s;g!==v;++g){var m=r[g],y=m[u],x=m[d];m[h]=y,m[u]=x,m.pop()}}else{var d=--e,p=t[d];i[p.uuid]=h,t[h]=p,t.pop();for(var g=0,v=s;g!==v;++g){var m=r[g];m[h]=m[d],m.pop()}}}this.nCachedObjects_=n},subscribe_:function(t,e){var n=this._bindingsIndicesByPath,i=n[t],r=this._bindings;if(i!==void 0)return r[i];var s=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,h=new Array(l);i=r.length,n[t]=i,s.push(t),a.push(e),r.push(h);for(var u=c,f=o.length;u!==f;++u){var d=o[u];h[u]=new Dn(d,t,e)}return h},unsubscribe_:function(t){var e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){var i=this._paths,r=this._parsedPaths,s=this._bindings,a=s.length-1,o=s[a],l=t[a];e[l]=n,s[n]=o,s.pop(),r[n]=r[a],r.pop(),i[n]=i[a],i.pop()}}});function Ux(t,e,n){this._mixer=t,this._clip=e,this._localRoot=n||null;for(var i=e.tracks,r=i.length,s=new Array(r),a={endingStart:sa,endingEnd:sa},o=0;o!==r;++o){var l=i[o].createInterpolant(null);s[o]=l,l.settings=a}this._interpolantSettings=a,this._interpolants=s,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=HA,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}Object.assign(Ux.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(t){return this._startTime=t,this},setLoop:function(t,e){return this.loop=t,this.repetitions=e,this},setEffectiveWeight:function(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(t){return this._scheduleFading(t,0,1)},fadeOut:function(t){return this._scheduleFading(t,1,0)},crossFadeFrom:function(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){var i=this._clip.duration,r=t._clip.duration,s=r/i,a=i/r;t.warp(1,s,e),this.warp(a,1,e)}return this},crossFadeTo:function(t,e,n){return t.crossFadeFrom(this,e,n)},stopFading:function(){var t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},setEffectiveTimeScale:function(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(t){return this.timeScale=this._clip.duration/t,this.stopWarping()},syncWith:function(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()},halt:function(t){return this.warp(this._effectiveTimeScale,0,t)},warp:function(t,e,n){var i=this._mixer,r=i.time,s=this._timeScaleInterpolant,a=this.timeScale;s===null&&(s=i._lendControlInterpolant(),this._timeScaleInterpolant=s);var o=s.parameterPositions,l=s.sampleValues;return o[0]=r,o[1]=r+n,l[0]=t/a,l[1]=e/a,this},stopWarping:function(){var t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(t,e,n,i){if(!this.enabled){this._updateWeight(t);return}var r=this._startTime;if(r!==null){var s=(t-r)*n;if(s<0||n===0)return;this._startTime=null,e=n*s}e*=this._updateTimeScale(t);var a=this._updateTime(e),o=this._updateWeight(t);if(o>0)for(var l=this._interpolants,c=this._propertyBindings,h=0,u=l.length;h!==u;++h)l[h].evaluate(a),c[h].accumulate(i,o)},_updateWeight:function(t){var e=0;if(this.enabled){e=this.weight;var n=this._weightInterpolant;if(n!==null){var i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e},_updateTimeScale:function(t){var e=0;if(!this.paused){e=this.timeScale;var n=this._timeScaleInterpolant;if(n!==null){var i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e},_updateTime:function(t){var e=this.time+t;if(t===0)return e;var n=this._clip.duration,i=this.loop,r=this._loopCount;if(i===VA){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(e>=n)e=n;else if(e<0)e=0;else break e;this.clampWhenFinished?this.paused=!0:this.enabled=!1,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{var s=i===kA;if(r===-1&&(t>=0?(r=0,this._setEndings(!0,this.repetitions===0,s)):this._setEndings(this.repetitions===0,!0,s)),e>=n||e<0){var a=Math.floor(e/n);e-=n*a,r+=Math.abs(a);var o=this.repetitions-r;if(o<0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,e=t>0?n:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(o===0){var l=t<0;this._setEndings(l,!l,s)}else this._setEndings(!1,!1,s);this._loopCount=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}if(s&&(r&1)===1)return this.time=e,n-e}return this.time=e,e},_setEndings:function(t,e,n){var i=this._interpolantSettings;n?(i.endingStart=js,i.endingEnd=js):(t?i.endingStart=this.zeroSlopeAtStart?js:sa:i.endingStart=Nc,e?i.endingEnd=this.zeroSlopeAtEnd?js:sa:i.endingEnd=Nc)},_scheduleFading:function(t,e,n){var i=this._mixer,r=i.time,s=this._weightInterpolant;s===null&&(s=i._lendControlInterpolant(),this._weightInterpolant=s);var a=s.parameterPositions,o=s.sampleValues;return a[0]=r,o[0]=e,a[1]=r+t,o[1]=n,this}});function Bv(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}Bv.prototype=Object.assign(Object.create(Ir.prototype),{constructor:Bv,_bindAction:function(t,e){var n=t._localRoot||this._root,i=t._clip.tracks,r=i.length,s=t._propertyBindings,a=t._interpolants,o=n.uuid,l=this._bindingsByRootAndName,c=l[o];c===void 0&&(c={},l[o]=c);for(var h=0;h!==r;++h){var u=i[h],f=u.name,d=c[f];if(d!==void 0)s[h]=d;else{if(d=s[h],d!==void 0){d._cacheIndex===null&&(++d.referenceCount,this._addInactiveBinding(d,o,f));continue}var p=e&&e._propertyBindings[h].binding.parsedPath;d=new Nx(Dn.create(n,f,p),u.ValueTypeName,u.getValueSize()),++d.referenceCount,this._addInactiveBinding(d,o,f),s[h]=d}a[h].resultBuffer=d.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){var e=(t._localRoot||this._root).uuid,n=t._clip.uuid,i=this._actionsByClip[n];this._bindAction(t,i&&i.knownActions[0]),this._addInactiveAction(t,n,e)}for(var r=t._propertyBindings,s=0,a=r.length;s!==a;++s){var o=r[s];o.useCount++===0&&(this._lendBinding(o),o.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){for(var e=t._propertyBindings,n=0,i=e.length;n!==i;++n){var r=e[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){var e=t._cacheIndex;return e!==null&&e<this._nActiveActions},_addInactiveAction:function(t,e,n){var i=this._actions,r=this._actionsByClip,s=r[e];if(s===void 0)s={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=s;else{var a=s.knownActions;t._byClipCacheIndex=a.length,a.push(t)}t._cacheIndex=i.length,i.push(t),s.actionByRoot[n]=t},_removeInactiveAction:function(t){var e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;var r=t._clip.uuid,s=this._actionsByClip,a=s[r],o=a.knownActions,l=o[o.length-1],c=t._byClipCacheIndex;l._byClipCacheIndex=c,o[c]=l,o.pop(),t._byClipCacheIndex=null;var h=a.actionByRoot,u=(t._localRoot||this._root).uuid;delete h[u],o.length===0&&delete s[r],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){for(var e=t._propertyBindings,n=0,i=e.length;n!==i;++n){var r=e[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}},_lendAction:function(t){var e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_takeBackAction:function(t){var e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_addInactiveBinding:function(t,e,n){var i=this._bindingsByRootAndName,r=i[e],s=this._bindings;r===void 0&&(r={},i[e]=r),r[n]=t,t._cacheIndex=s.length,s.push(t)},_removeInactiveBinding:function(t){var e=this._bindings,n=t.binding,i=n.rootNode.uuid,r=n.path,s=this._bindingsByRootAndName,a=s[i],o=e[e.length-1],l=t._cacheIndex;o._cacheIndex=l,e[l]=o,e.pop(),delete a[r];e:{for(var c in a)break e;delete s[i]}},_lendBinding:function(t){var e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_takeBackBinding:function(t){var e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_lendControlInterpolant:function(){var t=this._controlInterpolants,e=this._nActiveControlInterpolants++,n=t[e];return n===void 0&&(n=new lh(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n},_takeBackControlInterpolant:function(t){var e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];t.__cacheIndex=i,e[i]=t,r.__cacheIndex=n,e[n]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e){var n=e||this._root,i=n.uuid,r=typeof t=="string"?pi.findByName(n,t):t,s=r!==null?r.uuid:t,a=this._actionsByClip[s],o=null;if(a!==void 0){var l=a.actionByRoot[i];if(l!==void 0)return l;o=a.knownActions[0],r===null&&(r=o._clip)}if(r===null)return null;var c=new Ux(this,r,e);return this._bindAction(c,o),this._addInactiveAction(c,s,i),c},existingAction:function(t,e){var n=e||this._root,i=n.uuid,r=typeof t=="string"?pi.findByName(n,t):t,s=r?r.uuid:t,a=this._actionsByClip[s];return a!==void 0&&a.actionByRoot[i]||null},stopAllAction:function(){var t=this._actions,e=this._nActiveActions,n=this._bindings,i=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var r=0;r!==e;++r)t[r].reset();for(var r=0;r!==i;++r)n[r].useCount=0;return this},update:function(t){t*=this.timeScale;for(var e=this._actions,n=this._nActiveActions,i=this.time+=t,r=Math.sign(t),s=this._accuIndex^=1,a=0;a!==n;++a){var o=e[a];o._update(i,t,r,s)}for(var l=this._bindings,c=this._nActiveBindings,a=0;a!==c;++a)l[a].apply(s);return this},getRoot:function(){return this._root},uncacheClip:function(t){var e=this._actions,n=t.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){for(var s=r.knownActions,a=0,o=s.length;a!==o;++a){var l=s[a];this._deactivateAction(l);var c=l._cacheIndex,h=e[e.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,h._cacheIndex=c,e[c]=h,e.pop(),this._removeInactiveBindingsForAction(l)}delete i[n]}},uncacheRoot:function(t){var e=t.uuid,n=this._actionsByClip;for(var i in n){var r=n[i].actionByRoot,s=r[e];s!==void 0&&(this._deactivateAction(s),this._removeInactiveAction(s))}var a=this._bindingsByRootAndName,o=a[e];if(o!==void 0)for(var l in o){var c=o[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}},uncacheAction:function(t,e){var n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}});function fd(t){typeof t=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}fd.prototype.clone=function(){return new fd(this.value.clone===void 0?this.value:this.value.clone())};function Uv(){ot.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}Uv.prototype=Object.assign(Object.create(ot.prototype),{constructor:Uv,isInstancedBufferGeometry:!0,copy:function(t){return ot.prototype.copy.call(this,t),this.maxInstancedCount=t.maxInstancedCount,this},clone:function(){return new this.constructor().copy(this)}});function Fx(t,e,n,i){this.uuid=wt.generateUUID(),this.data=t,this.itemSize=e,this.offset=n,this.normalized=i===!0}Object.defineProperties(Fx.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}});Object.assign(Fx.prototype,{isInterleavedBufferAttribute:!0,setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this}});function tl(t,e){this.uuid=wt.generateUUID(),this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}Object.defineProperty(tl.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});Object.assign(tl.prototype,{isInterleavedBuffer:!0,setArray:function(t){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=t!==void 0?t.length/this.stride:0,this.array=t},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.dynamic=t.dynamic,this},copyAt:function(t,e,n){t*=this.stride,n*=e.stride;for(var i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this},set:function(t,e){return e===void 0&&(e=0),this.array.set(t,e),this},clone:function(){return new this.constructor().copy(this)},onUpload:function(t){return this.onUploadCallback=t,this}});function Fv(t,e,n){tl.call(this,t,e),this.meshPerAttribute=n||1}Fv.prototype=Object.assign(Object.create(tl.prototype),{constructor:Fv,isInstancedInterleavedBuffer:!0,copy:function(t){return tl.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this}});function Ov(t,e,n){Ct.call(this,t,e),this.meshPerAttribute=n||1}Ov.prototype=Object.assign(Object.create(Ct.prototype),{constructor:Ov,isInstancedBufferAttribute:!0,copy:function(t){return Ct.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this}});function qL(t,e,n,i){this.ray=new Ra(t,e),this.near=n||0,this.far=i||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function zv(t,e){return t.distance-e.distance}function dd(t,e,n,i){if(t.visible!==!1&&(t.raycast(e,n),i===!0))for(var r=t.children,s=0,a=r.length;s<a;s++)dd(r[s],e,n,!0)}Object.assign(qL.prototype,{linePrecision:1,set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize()):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(t,e){var n=[];return dd(t,this,n,e),n.sort(zv),n},intersectObjects:function(t,e){var n=[];if(Array.isArray(t)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),n;for(var i=0,r=t.length;i<r;i++)dd(t[i],this,n,e);return n.sort(zv),n}});function $L(t){this.autoStart=t!==void 0?t:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}Object.assign($L.prototype,{start:function(){this.startTime=(typeof performance>"u"?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var e=(typeof performance>"u"?Date:performance).now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}});function YL(t,e,n){return this.radius=t!==void 0?t:1,this.phi=e!==void 0?e:0,this.theta=n!==void 0?n:0,this}Object.assign(YL.prototype,{set:function(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this},makeSafe:function(){var t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this},setFromVector3:function(t){return this.radius=t.length(),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t.x,t.z),this.phi=Math.acos(wt.clamp(t.y/this.radius,-1,1))),this}});function ZL(t,e,n){return this.radius=t!==void 0?t:1,this.theta=e!==void 0?e:0,this.y=n!==void 0?n:0,this}Object.assign(ZL.prototype,{set:function(t,e,n){return this.radius=t,this.theta=e,this.y=n,this},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this},setFromVector3:function(t){return this.radius=Math.sqrt(t.x*t.x+t.z*t.z),this.theta=Math.atan2(t.x,t.z),this.y=t.y,this}});function Ox(t,e){this.min=t!==void 0?t:new qe(1/0,1/0),this.max=e!==void 0?e:new qe(-1/0,-1/0)}Object.assign(Ox.prototype,{set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new qe;return function(n,i){var r=t.copy(i).multiplyScalar(.5);return this.min.copy(n).sub(r),this.max.copy(n).add(r),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(t){var e=t||new qe;return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){var e=t||new qe;return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){var n=e||new qe;return n.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){var n=e||new qe;return n.copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new qe;return function(n){var i=t.copy(n).clamp(this.min,this.max);return i.sub(n).length()}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}});function hh(t){nt.call(this),this.material=t,this.render=function(){}}hh.prototype=Object.create(nt.prototype);hh.prototype.constructor=hh;hh.prototype.isImmediateRenderObject=!0;function uh(t,e,n,i){this.object=t,this.size=e!==void 0?e:1;var r=n!==void 0?n:16711680,s=i!==void 0?i:1,a=0,o=this.object.geometry;o&&o.isGeometry?a=o.faces.length*3:o&&o.isBufferGeometry&&(a=o.attributes.normal.count);var l=new ot,c=new Qe(a*2*3,3);l.addAttribute("position",c),Yt.call(this,l,new Xt({color:r,linewidth:s})),this.matrixAutoUpdate=!1,this.update()}uh.prototype=Object.create(Yt.prototype);uh.prototype.constructor=uh;uh.prototype.update=function(){var t=new j,e=new j,n=new Yn;return function(){var r=["a","b","c"];this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);var s=this.object.matrixWorld,a=this.geometry.attributes.position,o=this.object.geometry;if(o&&o.isGeometry)for(var l=o.vertices,c=o.faces,h=0,u=0,f=c.length;u<f;u++)for(var d=c[u],p=0,g=d.vertexNormals.length;p<g;p++){var v=l[d[r[p]]],m=d.vertexNormals[p];t.copy(v).applyMatrix4(s),e.copy(m).applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),a.setXYZ(h,t.x,t.y,t.z),h=h+1,a.setXYZ(h,e.x,e.y,e.z),h=h+1}else if(o&&o.isBufferGeometry)for(var y=o.attributes.position,x=o.attributes.normal,h=0,p=0,g=y.count;p<g;p++)t.set(y.getX(p),y.getY(p),y.getZ(p)).applyMatrix4(s),e.set(x.getX(p),x.getY(p),x.getZ(p)),e.applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),a.setXYZ(h,t.x,t.y,t.z),h=h+1,a.setXYZ(h,e.x,e.y,e.z),h=h+1;a.needsUpdate=!0}}();function nl(t,e){nt.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;for(var n=new ot,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],r=0,s=1,a=32;r<a;r++,s++){var o=r/a*Math.PI*2,l=s/a*Math.PI*2;i.push(Math.cos(o),Math.sin(o),1,Math.cos(l),Math.sin(l),1)}n.addAttribute("position",new Qe(i,3));var c=new Xt({fog:!1});this.cone=new Yt(n,c),this.add(this.cone),this.update()}nl.prototype=Object.create(nt.prototype);nl.prototype.constructor=nl;nl.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()};nl.prototype.update=function(){var t=new j,e=new j;return function(){this.light.updateMatrixWorld();var i=this.light.distance?this.light.distance:1e3,r=i*Math.tan(this.light.angle);this.cone.scale.set(r,r,i),t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(e.sub(t)),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}();function zx(t){var e=[];t&&t.isBone&&e.push(t);for(var n=0;n<t.children.length;n++)e.push.apply(e,zx(t.children[n]));return e}function il(t){for(var e=zx(t),n=new ot,i=[],r=[],s=new dt(0,0,1),a=new dt(0,1,0),o=0;o<e.length;o++){var l=e[o];l.parent&&l.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(s.r,s.g,s.b),r.push(a.r,a.g,a.b))}n.addAttribute("position",new Qe(i,3)),n.addAttribute("color",new Qe(r,3));var c=new Xt({vertexColors:Aa,depthTest:!1,depthWrite:!1,transparent:!0});Yt.call(this,n,c),this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}il.prototype=Object.create(Yt.prototype);il.prototype.constructor=il;il.prototype.updateMatrixWorld=function(){var t=new j,e=new xt,n=new xt;return function(r){var s=this.bones,a=this.geometry,o=a.getAttribute("position");n.getInverse(this.root.matrixWorld);for(var l=0,c=0;l<s.length;l++){var h=s[l];h.parent&&h.parent.isBone&&(e.multiplyMatrices(n,h.matrixWorld),t.setFromMatrixPosition(e),o.setXYZ(c,t.x,t.y,t.z),e.multiplyMatrices(n,h.parent.matrixWorld),t.setFromMatrixPosition(e),o.setXYZ(c+1,t.x,t.y,t.z),c+=2)}a.getAttribute("position").needsUpdate=!0,nt.prototype.updateMatrixWorld.call(this,r)}}();function rl(t,e,n){this.light=t,this.light.updateMatrixWorld(),this.color=n;var i=new ua(e,4,2),r=new si({wireframe:!0,fog:!1});Fn.call(this,i,r),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}rl.prototype=Object.create(Fn.prototype);rl.prototype.constructor=rl;rl.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()};rl.prototype.update=function(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)};function sl(t,e){nt.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;var n=new Xt({fog:!1}),i=new ot;i.addAttribute("position",new Ct(new Float32Array(5*3),3)),this.line=new Zn(i,n),this.add(this.line),this.update()}sl.prototype=Object.create(nt.prototype);sl.prototype.constructor=sl;sl.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()};sl.prototype.update=function(){var t=this.light.width*.5,e=this.light.height*.5,n=this.line.geometry.attributes.position,i=n.array;i[0]=t,i[1]=-e,i[2]=0,i[3]=t,i[4]=e,i[5]=0,i[6]=-t,i[7]=e,i[8]=0,i[9]=-t,i[10]=-e,i[11]=0,i[12]=t,i[13]=-e,i[14]=0,n.needsUpdate=!0,this.color!==void 0?this.line.material.color.set(this.color):this.line.material.color.copy(this.light.color)};function al(t,e,n){nt.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;var i=new ha(e);i.rotateY(Math.PI*.5),this.material=new si({wireframe:!0,fog:!1}),this.color===void 0&&(this.material.vertexColors=Aa);var r=i.getAttribute("position"),s=new Float32Array(r.count*3);i.addAttribute("color",new Ct(s,3)),this.add(new Fn(i,this.material)),this.update()}al.prototype=Object.create(nt.prototype);al.prototype.constructor=al;al.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()};al.prototype.update=function(){var t=new j,e=new dt,n=new dt;return function(){var r=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{var s=r.geometry.getAttribute("color");e.copy(this.light.color),n.copy(this.light.groundColor);for(var a=0,o=s.count;a<o;a++){var l=a<o/2?e:n;s.setXYZ(a,l.r,l.g,l.b)}s.needsUpdate=!0}r.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate())}}();function fh(t,e,n,i){t=t||10,e=e||10,n=new dt(n!==void 0?n:4473924),i=new dt(i!==void 0?i:8947848);for(var r=e/2,s=t/e,a=t/2,o=[],l=[],c=0,h=0,u=-a;c<=e;c++,u+=s){o.push(-a,0,u,a,0,u),o.push(u,0,-a,u,0,a);var f=c===r?n:i;f.toArray(l,h),h+=3,f.toArray(l,h),h+=3,f.toArray(l,h),h+=3,f.toArray(l,h),h+=3}var d=new ot;d.addAttribute("position",new Qe(o,3)),d.addAttribute("color",new Qe(l,3));var p=new Xt({vertexColors:Aa});Yt.call(this,d,p)}fh.prototype=Object.create(Yt.prototype);fh.prototype.constructor=fh;function pd(t,e,n,i,r,s){t=t||10,e=e||16,n=n||8,i=i||64,r=new dt(r!==void 0?r:4473924),s=new dt(s!==void 0?s:8947848);var a=[],o=[],l,c,h,u,f,d,p;for(u=0;u<=e;u++)h=u/e*(Math.PI*2),l=Math.sin(h)*t,c=Math.cos(h)*t,a.push(0,0,0),a.push(l,0,c),p=u&1?r:s,o.push(p.r,p.g,p.b),o.push(p.r,p.g,p.b);for(u=0;u<=n;u++)for(p=u&1?r:s,d=t-t/n*u,f=0;f<i;f++)h=f/i*(Math.PI*2),l=Math.sin(h)*d,c=Math.cos(h)*d,a.push(l,0,c),o.push(p.r,p.g,p.b),h=(f+1)/i*(Math.PI*2),l=Math.sin(h)*d,c=Math.cos(h)*d,a.push(l,0,c),o.push(p.r,p.g,p.b);var g=new ot;g.addAttribute("position",new Qe(a,3)),g.addAttribute("color",new Qe(o,3));var v=new Xt({vertexColors:Aa});Yt.call(this,g,v)}pd.prototype=Object.create(Yt.prototype);pd.prototype.constructor=pd;function dh(t,e,n,i){this.object=t,this.size=e!==void 0?e:1;var r=n!==void 0?n:16776960,s=i!==void 0?i:1,a=0,o=this.object.geometry;o&&o.isGeometry?a=o.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");var l=new ot,c=new Qe(a*2*3,3);l.addAttribute("position",c),Yt.call(this,l,new Xt({color:r,linewidth:s})),this.matrixAutoUpdate=!1,this.update()}dh.prototype=Object.create(Yt.prototype);dh.prototype.constructor=dh;dh.prototype.update=function(){var t=new j,e=new j,n=new Yn;return function(){this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);for(var r=this.object.matrixWorld,s=this.geometry.attributes.position,a=this.object.geometry,o=a.vertices,l=a.faces,c=0,h=0,u=l.length;h<u;h++){var f=l[h],d=f.normal;t.copy(o[f.a]).add(o[f.b]).add(o[f.c]).divideScalar(3).applyMatrix4(r),e.copy(d).applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),s.setXYZ(c,t.x,t.y,t.z),c=c+1,s.setXYZ(c,e.x,e.y,e.z),c=c+1}s.needsUpdate=!0}}();function ol(t,e,n){nt.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,e===void 0&&(e=1);var i=new ot;i.addAttribute("position",new Qe([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));var r=new Xt({fog:!1});this.lightPlane=new Zn(i,r),this.add(this.lightPlane),i=new ot,i.addAttribute("position",new Qe([0,0,0,0,0,1],3)),this.targetLine=new Zn(i,r),this.add(this.targetLine),this.update()}ol.prototype=Object.create(nt.prototype);ol.prototype.constructor=ol;ol.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()};ol.prototype.update=function(){var t=new j,e=new j,n=new j;return function(){t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),n.subVectors(e,t),this.lightPlane.lookAt(n),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(n),this.targetLine.scale.z=n.length()}}();function ph(t){var e=new ot,n=new Xt({color:16777215,vertexColors:X0}),i=[],r=[],s={},a=new dt(16755200),o=new dt(16711680),l=new dt(43775),c=new dt(16777215),h=new dt(3355443);u("n1","n2",a),u("n2","n4",a),u("n4","n3",a),u("n3","n1",a),u("f1","f2",a),u("f2","f4",a),u("f4","f3",a),u("f3","f1",a),u("n1","f1",a),u("n2","f2",a),u("n3","f3",a),u("n4","f4",a),u("p","n1",o),u("p","n2",o),u("p","n3",o),u("p","n4",o),u("u1","u2",l),u("u2","u3",l),u("u3","u1",l),u("c","t",c),u("p","c",h),u("cn1","cn2",h),u("cn3","cn4",h),u("cf1","cf2",h),u("cf3","cf4",h);function u(d,p,g){f(d,g),f(p,g)}function f(d,p){i.push(0,0,0),r.push(p.r,p.g,p.b),s[d]===void 0&&(s[d]=[]),s[d].push(i.length/3-1)}e.addAttribute("position",new Qe(i,3)),e.addAttribute("color",new Qe(r,3)),Yt.call(this,e,n),this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}ph.prototype=Object.create(Yt.prototype);ph.prototype.constructor=ph;ph.prototype.update=function(){var t,e,n=new j,i=new er;function r(s,a,o,l){n.set(a,o,l).unproject(i);var c=e[s];if(c!==void 0)for(var h=t.getAttribute("position"),u=0,f=c.length;u<f;u++)h.setXYZ(c[u],n.x,n.y,n.z)}return function(){t=this.geometry,e=this.pointMap;var a=1,o=1;i.projectionMatrix.copy(this.camera.projectionMatrix),r("c",0,0,-1),r("t",0,0,1),r("n1",-a,-o,-1),r("n2",a,-o,-1),r("n3",-a,o,-1),r("n4",a,o,-1),r("f1",-a,-o,1),r("f2",a,-o,1),r("f3",-a,o,1),r("f4",a,o,1),r("u1",a*.7,o*1.1,-1),r("u2",-a*.7,o*1.1,-1),r("u3",0,o*2,-1),r("cf1",-a,0,1),r("cf2",a,0,1),r("cf3",0,-o,1),r("cf4",0,o,1),r("cn1",-a,0,-1),r("cn2",a,0,-1),r("cn3",0,-o,-1),r("cn4",0,o,-1),t.getAttribute("position").needsUpdate=!0}}();function ll(t,e){this.object=t,e===void 0&&(e=16776960);var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new ot;r.setIndex(new Ct(n,1)),r.addAttribute("position",new Ct(i,3)),Yt.call(this,r,new Xt({color:e})),this.matrixAutoUpdate=!1,this.update()}ll.prototype=Object.create(Yt.prototype);ll.prototype.constructor=ll;ll.prototype.update=function(){var t=new Ar;return function(n){if(n!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&t.setFromObject(this.object),!t.isEmpty()){var i=t.min,r=t.max,s=this.geometry.attributes.position,a=s.array;a[0]=r.x,a[1]=r.y,a[2]=r.z,a[3]=i.x,a[4]=r.y,a[5]=r.z,a[6]=i.x,a[7]=i.y,a[8]=r.z,a[9]=r.x,a[10]=i.y,a[11]=r.z,a[12]=r.x,a[13]=r.y,a[14]=i.z,a[15]=i.x,a[16]=r.y,a[17]=i.z,a[18]=i.x,a[19]=i.y,a[20]=i.z,a[21]=r.x,a[22]=i.y,a[23]=i.z,s.needsUpdate=!0,this.geometry.computeBoundingSphere()}}}();ll.prototype.setFromObject=function(t){return this.object=t,this.update(),this};function mh(t,e){this.type="Box3Helper",this.box=t;var n=e!==void 0?e:16776960,i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new ot;s.setIndex(new Ct(i,1)),s.addAttribute("position",new Qe(r,3)),Yt.call(this,s,new Xt({color:n})),this.geometry.computeBoundingSphere()}mh.prototype=Object.create(Yt.prototype);mh.prototype.constructor=mh;mh.prototype.updateMatrixWorld=function(t){var e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),nt.prototype.updateMatrixWorld.call(this,t))};function vh(t,e,n){this.type="PlaneHelper",this.plane=t,this.size=e===void 0?1:e;var i=n!==void 0?n:16776960,r=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],s=new ot;s.addAttribute("position",new Qe(r,3)),s.computeBoundingSphere(),Zn.call(this,s,new Xt({color:i}));var a=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],o=new ot;o.addAttribute("position",new Qe(a,3)),o.computeBoundingSphere(),this.add(new Fn(o,new si({color:i,opacity:.2,transparent:!0,depthWrite:!1})))}vh.prototype=Object.create(Zn.prototype);vh.prototype.constructor=vh;vh.prototype.updateMatrixWorld=function(t){var e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.lookAt(this.plane.normal),nt.prototype.updateMatrixWorld.call(this,t)};var fc,Lu;function Ma(t,e,n,i,r,s){nt.call(this),i===void 0&&(i=16776960),n===void 0&&(n=1),r===void 0&&(r=.2*n),s===void 0&&(s=.2*r),fc===void 0&&(fc=new ot,fc.addAttribute("position",new Qe([0,0,0,0,1,0],3)),Lu=new Cr(0,.5,1,5,1),Lu.translate(0,-.5,0)),this.position.copy(e),this.line=new Zn(fc,new Xt({color:i})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Fn(Lu,new si({color:i})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,r,s)}Ma.prototype=Object.create(nt.prototype);Ma.prototype.constructor=Ma;Ma.prototype.setDirection=function(){var t=new j,e;return function(i){i.y>.99999?this.quaternion.set(0,0,0,1):i.y<-.99999?this.quaternion.set(1,0,0,0):(t.set(i.z,0,-i.x).normalize(),e=Math.acos(i.y),this.quaternion.setFromAxisAngle(t,e))}}();Ma.prototype.setLength=function(t,e,n){e===void 0&&(e=.2*t),n===void 0&&(n=.2*e),this.line.scale.set(1,Math.max(0,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()};Ma.prototype.setColor=function(t){this.line.material.color.copy(t),this.cone.material.color.copy(t)};function md(t){t=t||1;var e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new ot;i.addAttribute("position",new Qe(e,3)),i.addAttribute("color",new Qe(n,3));var r=new Xt({vertexColors:Aa});Yt.call(this,i,r)}md.prototype=Object.create(Yt.prototype);md.prototype.constructor=md;function jL(t){return t===void 0&&(t=[]),console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t}pt.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(pt.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t};Object.assign(vr.prototype,{createPointsGeometry:function(t){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var e=this.getPoints(t);return this.createGeometry(e)},createSpacedPointsGeometry:function(t){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var e=new vt,n=0,i=t.length;n<i;n++){var r=t[n];e.vertices.push(new j(r.x,r.y,r.z||0))}return e}});Object.assign(Ei.prototype,{fromPoints:function(t){console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)}});Object.create(Jn.prototype);Object.create(Jn.prototype);function Gx(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),Jn.call(this,t),this.type="catmullrom"}Gx.prototype=Object.create(Jn.prototype);Object.assign(Gx.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});fh.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};il.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};Object.assign(Qo.prototype,{extractUrlBase:function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Ax.extractUrlBase(t)}});Object.assign(Ox.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}});Object.assign(Ar.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}});ja.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)};Object.assign(wt,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),wt.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),wt.ceilPowerOfTwo(t)}});Object.assign(Yn.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBuffer:function(t){return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(t)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}});Object.assign(xt.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){var t;return function(){return t===void 0&&(t=new j),console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),t.setFromMatrixColumn(this,3)}}(),setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBuffer:function(t){return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(t)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,n,i,r,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,n,r,s)}});di.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)};ln.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)};Object.assign(Ra.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}});Object.assign(ls.prototype,{extractAllPoints:function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new vs(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new fa(this,t)}});Object.assign(qe.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(j.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(Vt.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(vt.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")}});Object.assign(nt.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)}});Object.defineProperties(nt.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Object.defineProperties(zc.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}});Object.defineProperty(Gc.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}});Object.defineProperty(pt.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}});mn.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(t)};Object.defineProperties(tn.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}});Object.defineProperties(Ct.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}}});Object.assign(ot.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addDrawCall:function(t,e,n){n!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}});Object.defineProperties(ot.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Object.defineProperties(fd.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}});Object.defineProperties(Rt.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new dt}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===up}}});Object.defineProperties(xi.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(yi.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}});Object.assign(xx.prototype,{getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")}});Object.defineProperties(xx.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(px.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(aa.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}});Object.defineProperties(yx.prototype,{standing:{set:function(){console.warn("THREE.WebVRManager: .standing has been removed.")}}});el.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var e=this,n=new Ix;return n.load(t,function(i){e.setBuffer(i)}),this};Dx.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()};ch.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)};class JL{constructor(){this.world=null}setWorld(e){this.world=e,this.diceBodyMaterial=new wi.Material,this.floorBodyMaterial=new wi.Material,this.barrierBodyMaterial=new wi.Material,e.addContactMaterial(new wi.ContactMaterial(this.floorBodyMaterial,this.diceBodyMaterial,{friction:.01,restitution:.5})),e.addContactMaterial(new wi.ContactMaterial(this.barrierBodyMaterial,this.diceBodyMaterial,{friction:0,restitution:1})),e.addContactMaterial(new wi.ContactMaterial(this.diceBodyMaterial,this.diceBodyMaterial,{friction:0,restitution:.5}))}prepareValues(e){if(this.throwRunning)throw new Error("Cannot start another throw. Please wait, till the current throw is finished.");for(let i=0;i<e.length;i++)if(e[i].value<1||e[i].dice.values<e[i].value)throw new Error("Cannot throw die to value "+e[i].value+", because it has only "+e[i].dice.values+" sides.");this.throwRunning=!0;for(let i=0;i<e.length;i++)e[i].dice.simulationRunning=!0,e[i].vectors=e[i].dice.getCurrentVectors(),e[i].stableCount=0;let n=()=>{let i=!0;for(let r=0;r<e.length;r++)e[r].dice.isFinished()?e[r].stableCount++:e[r].stableCount=0,e[r].stableCount<50&&(i=!1);if(i){console.log("all stable"),dn.world.removeEventListener("postStep",n);for(let r=0;r<e.length;r++)e[r].dice.shiftUpperValue(e[r].value),e[r].dice.setVectors(e[r].vectors),e[r].dice.simulationRunning=!1;this.throwRunning=!1}else dn.world.step(dn.world.dt)};this.world.addEventListener("postStep",n)}}class La{constructor(e){e=this.setDefaults(e,{size:100,fontColor:"#000000",backColor:"#ffffff"}),this.object=null,this.size=e.size,this.invertUpside=!1,this.materialOptions={specular:1515554,color:15790320,shininess:40,shading:up},this.labelColor=e.fontColor,this.diceColor=e.backColor}setDefaults(e,n){e=e||{};for(let i in n)n.hasOwnProperty(i)&&(i in e||(e[i]=n[i]));return e}emulateThrow(e){let n=0,i=()=>{this.isFinished()?(n++,n===50&&(dn.world.removeEventListener("postStep",i),e(this.getUpsideValue()))):n=0,dn.world.step(dn.world.dt)};dn.world.addEventListener("postStep",i)}isFinished(){let e=1,n=this.object.body.angularVelocity,i=this.object.body.velocity;return Math.abs(n.x)<e&&Math.abs(n.y)<e&&Math.abs(n.z)<e&&Math.abs(i.x)<e&&Math.abs(i.y)<e&&Math.abs(i.z)<e}getUpsideValue(){let e=new j(0,this.invertUpside?-1:1),n,i=Math.PI*2;for(let r=0;r<this.object.geometry.faces.length;++r){let s=this.object.geometry.faces[r];if(s.materialIndex===0)continue;let a=s.normal.clone().applyQuaternion(this.object.body.quaternion).angleTo(e);a<i&&(i=a,n=s)}return n.materialIndex-1}getCurrentVectors(){return{position:this.object.body.position.clone(),quaternion:this.object.body.quaternion.clone(),velocity:this.object.body.velocity.clone(),angularVelocity:this.object.body.angularVelocity.clone()}}setVectors(e){this.object.body.position=e.position,this.object.body.quaternion=e.quaternion,this.object.body.velocity=e.velocity,this.object.body.angularVelocity=e.angularVelocity}shiftUpperValue(e){let n=this.object.geometry.clone(),i=this.getUpsideValue();for(let r=0,s=n.faces.length;r<s;++r){let a=n.faces[r].materialIndex;if(a!==0){for(a+=e-i-1;a>this.values;)a-=this.values;for(;a<1;)a+=this.values;n.faces[r].materialIndex=a+1}}this.object.geometry=n}getChamferGeometry(e,n,i){let r=[],s=[],a=new Array(e.length);for(let o=0;o<e.length;++o)a[o]=[];for(let o=0;o<n.length;++o){let l=n[o],c=l.length-1,h=new j,u=new Array(c);for(let f=0;f<c;++f){let d=e[l[f]].clone();h.add(d),a[l[f]].push(u[f]=r.push(d)-1)}h.divideScalar(c);for(let f=0;f<c;++f){let d=r[u[f]];d.subVectors(d,h).multiplyScalar(i).addVectors(d,h)}u.push(l[c]),s.push(u)}for(let o=0;o<n.length-1;++o)for(let l=o+1;l<n.length;++l){let c=[],h=-1;for(let u=0;u<n[o].length-1;++u){let f=n[l].indexOf(n[o][u]);f>=0&&f<n[l].length-1&&(h>=0&&u!==h+1?c.unshift([o,u],[l,f]):c.push([o,u],[l,f]),h=u)}c.length===4&&s.push([s[c[0][0]][c[0][1]],s[c[1][0]][c[1][1]],s[c[3][0]][c[3][1]],s[c[2][0]][c[2][1]],-1])}for(let o=0;o<a.length;++o){let l=a[o],c=[l[0]],h=l.length-1;for(;h;){for(let u=n.length;u<s.length;++u){let f=s[u].indexOf(c[c.length-1]);if(f>=0&&f<4){--f===-1&&(f=3);let d=s[u][f];if(l.indexOf(d)>=0){c.push(d);break}}}--h}c.push(-1),s.push(c)}return{vectors:r,faces:s}}makeGeometry(e,n,i,r,s){let a=new vt;for(let o=0;o<e.length;++o){let l=e[o].multiplyScalar(i);l.index=a.vertices.push(l)-1}for(let o=0;o<n.length;++o){let l=n[o],c=l.length-1,h=Math.PI*2/c;for(let u=0;u<c-2;++u)a.faces.push(new br(l[0],l[u+1],l[u+2],[a.vertices[l[0]],a.vertices[l[u+1]],a.vertices[l[u+2]]],0,l[c]+1)),a.faceVertexUvs[0].push([new qe((Math.cos(s)+1+r)/2/(1+r),(Math.sin(s)+1+r)/2/(1+r)),new qe((Math.cos(h*(u+1)+s)+1+r)/2/(1+r),(Math.sin(h*(u+1)+s)+1+r)/2/(1+r)),new qe((Math.cos(h*(u+2)+s)+1+r)/2/(1+r),(Math.sin(h*(u+2)+s)+1+r)/2/(1+r))])}return a.computeFaceNormals(),a.boundingSphere=new gi(new j,i),a}createShape(e,n,i){let r=new Array(e.length),s=new Array(n.length);for(let a=0;a<e.length;++a){let o=e[a];r[a]=new wi.Vec3(o.x*i,o.y*i,o.z*i)}for(let a=0;a<n.length;++a)s[a]=n[a].slice(0,n[a].length-1);return new wi.ConvexPolyhedron(r,s)}getGeometry(){let e=this.size*this.scaleFactor,n=new Array(this.vertices.length);for(let s=0;s<this.vertices.length;++s)n[s]=new j().fromArray(this.vertices[s]).normalize();let i=this.getChamferGeometry(n,this.faces,this.chamfer),r=this.makeGeometry(i.vectors,i.faces,e,this.tab,this.af);return r.cannon_shape=this.createShape(n,this.faces,e),r}calculateTextureSize(e){return Math.max(128,Math.pow(2,Math.floor(Math.log(e)/Math.log(2))))}createTextTexture(e,n,i){let r=document.createElement("canvas"),s=r.getContext("2d"),a=this.calculateTextureSize(this.size/2+this.size*this.textMargin)*2;r.width=r.height=a,s.font=a/(1+2*this.textMargin)+"pt Arial",s.fillStyle=i,s.fillRect(0,0,r.width,r.height),s.textAlign="center",s.textBaseline="middle",s.fillStyle=n,s.fillText(e,r.width/2,r.height/2);let o=new Ht(r);return o.needsUpdate=!0,o}getMaterials(){let e=[];for(let n=0;n<this.faceTexts.length;++n){let i=null;this.customTextTextureFunction?i=this.customTextTextureFunction(this.faceTexts[n],this.labelColor,this.diceColor):i=this.createTextTexture(this.faceTexts[n],this.labelColor,this.diceColor),e.push(new xi(Object.assign({},this.materialOptions,{map:i})))}return e}getObject(){return this.object}create(){if(!dn.world)throw new Error("You must call DiceManager.setWorld(world) first.");return this.object=new Fn(this.getGeometry(),new jL(this.getMaterials())),this.object.reveiceShadow=!0,this.object.castShadow=!0,this.object.diceObject=this,this.object.body=new wi.Body({mass:this.mass,shape:this.object.geometry.cannon_shape,material:dn.diceBodyMaterial}),this.object.body.linearDamping=.1,this.object.body.angularDamping=.1,dn.world.add(this.object.body),this.object}updateMeshFromBody(){this.simulationRunning||(this.object.position.copy(this.object.body.position),this.object.quaternion.copy(this.object.body.quaternion))}updateBodyFromMesh(){this.object.body.position.copy(this.object.position),this.object.body.quaternion.copy(this.object.quaternion)}}class Iu extends La{constructor(e){super(e),this.tab=-.1,this.af=Math.PI*7/6,this.chamfer=.96,this.vertices=[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],this.faces=[[1,0,2,1],[0,1,3,2],[0,3,2,3],[1,2,3,4]],this.scaleFactor=1.2,this.values=4,this.faceTexts=[[],["0","0","0"],["2","4","3"],["1","3","4"],["2","1","4"],["1","2","3"]],this.customTextTextureFunction=function(n,i,r){let s=document.createElement("canvas"),a=s.getContext("2d"),o=this.calculateTextureSize(this.size/2+this.size*2)*2;s.width=s.height=o,a.font=o/5+"pt Arial",a.fillStyle=r,a.fillRect(0,0,s.width,s.height),a.textAlign="center",a.textBaseline="middle",a.fillStyle=i;for(let c in n)a.fillText(n[c],s.width/2,s.height/2-o*.3),a.translate(s.width/2,s.height/2),a.rotate(Math.PI*2/3),a.translate(-s.width/2,-s.height/2);let l=new Ht(s);return l.needsUpdate=!0,l},this.mass=300,this.inertia=5,this.invertUpside=!0,this.create()}}class Du extends La{constructor(e){super(e),this.tab=.1,this.af=Math.PI/4,this.chamfer=.96,this.vertices=[[-1,-1,-1],[1,-1,-1],[1,1,-1],[-1,1,-1],[-1,-1,1],[1,-1,1],[1,1,1],[-1,1,1]],this.faces=[[0,3,2,1,1],[1,2,6,5,2],[0,1,5,4,3],[3,7,6,2,4],[0,4,7,3,5],[4,5,6,7,6]],this.scaleFactor=.9,this.values=6,this.faceTexts=[" ","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20"],this.textMargin=1,this.mass=300,this.inertia=13,this.create()}}class Nu extends La{constructor(e){super(e),this.tab=0,this.af=-Math.PI/4/2,this.chamfer=.965,this.vertices=[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],this.faces=[[0,2,4,1],[0,4,3,2],[0,3,5,3],[0,5,2,4],[1,3,4,5],[1,4,2,6],[1,2,5,7],[1,5,3,8]],this.scaleFactor=1,this.values=8,this.faceTexts=[" ","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20"],this.textMargin=1.2,this.mass=340,this.inertia=10,this.create()}}class Bu extends La{constructor(e){super(e),this.tab=0,this.af=Math.PI*6/5,this.chamfer=.945,this.vertices=[],this.faces=[[5,7,11,0],[4,2,10,1],[1,3,11,2],[0,8,10,3],[7,9,11,4],[8,6,10,5],[9,1,11,6],[2,0,10,7],[3,5,11,8],[6,4,10,9],[1,0,2,-1],[1,2,3,-1],[3,2,4,-1],[3,4,5,-1],[5,4,6,-1],[5,6,7,-1],[7,6,8,-1],[7,8,9,-1],[9,8,0,-1],[9,0,1,-1]];for(let n=0,i=0;n<10;++n,i+=Math.PI*2/10)this.vertices.push([Math.cos(i),Math.sin(i),.105*(n%2?1:-1)]);this.vertices.push([0,0,-1]),this.vertices.push([0,0,1]),this.scaleFactor=.9,this.values=10,this.faceTexts=[" ","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20"],this.textMargin=1,this.mass=350,this.inertia=9,this.create()}}class Uu extends La{constructor(e){super(e);let n=(1+Math.sqrt(5))/2,i=1/n;this.tab=.2,this.af=-Math.PI/4/2,this.chamfer=.968,this.vertices=[[0,i,n],[0,i,-n],[0,-i,n],[0,-i,-n],[n,0,i],[n,0,-i],[-n,0,i],[-n,0,-i],[i,n,0],[i,-n,0],[-i,n,0],[-i,-n,0],[1,1,1],[1,1,-1],[1,-1,1],[1,-1,-1],[-1,1,1],[-1,1,-1],[-1,-1,1],[-1,-1,-1]],this.faces=[[2,14,4,12,0,1],[15,9,11,19,3,2],[16,10,17,7,6,3],[6,7,19,11,18,4],[6,18,2,0,16,5],[18,11,9,14,2,6],[1,17,10,8,13,7],[1,13,5,15,3,8],[13,8,12,4,5,9],[5,4,14,9,15,10],[0,12,8,10,16,11],[3,19,7,17,1,12]],this.scaleFactor=.9,this.values=12,this.faceTexts=[" ","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20"],this.textMargin=1,this.mass=350,this.inertia=8,this.create()}}class wc extends La{constructor(e){super(e);let n=(1+Math.sqrt(5))/2;this.tab=-.2,this.af=-Math.PI/4/2,this.chamfer=.955,this.vertices=[[-1,n,0],[1,n,0],[-1,-n,0],[1,-n,0],[0,-1,n],[0,1,n],[0,-1,-n],[0,1,-n],[n,0,-1],[n,0,1],[-n,0,-1],[-n,0,1]],this.faces=[[0,11,5,1],[0,5,1,2],[0,1,7,3],[0,7,10,4],[0,10,11,5],[1,5,9,6],[5,11,4,7],[11,10,2,8],[10,7,6,9],[7,1,8,10],[3,9,4,11],[3,4,2,12],[3,2,6,13],[3,6,8,14],[3,8,9,15],[4,9,5,16],[2,4,11,17],[6,2,10,18],[8,6,7,19],[9,8,1,20]],this.scaleFactor=1,this.values=20,this.faceTexts=[" ","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20"],this.textMargin=1,this.mass=400,this.inertia=6,this.create()}}const dn=new JL;typeof define=="function"&&define.amd?define(function(){return{DiceManager:dn,DiceD4:Iu,DiceD6:Du,DiceD8:Nu,DiceD10:Bu,DiceD12:Uu,DiceD20:wc}}):typeof Sc<"u"&&typeof Sc.exports<"u"?Sc.exports={DiceManager:dn,DiceD4:Iu,DiceD6:Du,DiceD8:Nu,DiceD10:Bu,DiceD12:Uu,DiceD20:wc}:window.Dice={DiceManager:dn,DiceD4:Iu,DiceD6:Du,DiceD8:Nu,DiceD10:Bu,DiceD12:Uu,DiceD20:wc};var Vx={exports:{}};(function(t,e){(function(n,i){t.exports=i()})(kT,function(){var n=function(){function i(d){return a.appendChild(d.dom),d}function r(d){for(var p=0;p<a.children.length;p++)a.children[p].style.display=p===d?"block":"none";s=d}var s=0,a=document.createElement("div");a.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",a.addEventListener("click",function(d){d.preventDefault(),r(++s%a.children.length)},!1);var o=(performance||Date).now(),l=o,c=0,h=i(new n.Panel("FPS","#0ff","#002")),u=i(new n.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var f=i(new n.Panel("MB","#f08","#201"));return r(0),{REVISION:16,dom:a,addPanel:i,showPanel:r,begin:function(){o=(performance||Date).now()},end:function(){c++;var d=(performance||Date).now();if(u.update(d-o,200),d>l+1e3&&(h.update(1e3*c/(d-l),100),l=d,c=0,f)){var p=performance.memory;f.update(p.usedJSHeapSize/1048576,p.jsHeapSizeLimit/1048576)}return d},update:function(){o=this.end()},domElement:a,setMode:r}};return n.Panel=function(i,r,s){var a=1/0,o=0,l=Math.round,c=l(window.devicePixelRatio||1),h=80*c,u=48*c,f=3*c,d=2*c,p=3*c,g=15*c,v=74*c,m=30*c,y=document.createElement("canvas");y.width=h,y.height=u,y.style.cssText="width:80px;height:48px";var x=y.getContext("2d");return x.font="bold "+9*c+"px Helvetica,Arial,sans-serif",x.textBaseline="top",x.fillStyle=s,x.fillRect(0,0,h,u),x.fillStyle=r,x.fillText(i,f,d),x.fillRect(p,g,v,m),x.fillStyle=s,x.globalAlpha=.9,x.fillRect(p,g,v,m),{dom:y,update:function(_,b){a=Math.min(a,_),o=Math.max(o,_),x.fillStyle=s,x.globalAlpha=1,x.fillRect(0,0,h,g),x.fillStyle=r,x.fillText(l(_)+" "+i+" ("+l(a)+"-"+l(o)+")",f,d),x.drawImage(y,p+c,g,v-c,m,p,g,v-c,m),x.fillRect(p+v-c,g,c,m),x.fillStyle=s,x.globalAlpha=.9,x.fillRect(p+v-c,g,c,l((1-_/b)*m))}}},n})})(Vx);var KL=Vx.exports;const QL=H0(KL);var Fu,$r,Xa,Yr,Hx,Ws,ki,kn=[];e2();function e2(){console.log("hi"),console.log(GT),$r=new zd,console.log("still working");var t=window.innerWidth,e=window.innerHeight,n=20,i=t/e,r=1,s=e*1.3;Xa=new pn(n,i,r,s),$r.add(Xa),Xa.position.set(0,100,0),Yr=new Od({antialias:!0,alpha:!0}),Yr.setSize(t,e),Yr.shadowMap.enabled=!0,Yr.shadowMap.type=gd,Fu=document.getElementById("ThreeJS"),Fu.appendChild(Yr.domElement),Hx=new HT(Xa,Yr.domElement),Ws=new QL,Ws.domElement.style.position="absolute",Ws.domElement.style.bottom="0px",Ws.domElement.style.zIndex=100,Fu.appendChild(Ws.domElement);let a=new ap("#ffffff",.3);$r.add(a);let o=new sp("#ffffff",.5);o.position.x=-1e3,o.position.y=1e3,o.position.z=1e3,$r.add(o);let l=new rp(15720405,.8);l.position.y=100,l.target.position.set(50,0,50),l.castShadow=!0,l.shadow.camera.near=50,l.shadow.camera.far=110,l.shadow.mapSize.width=1024,l.shadow.mapSize.height=1024,$r.add(l),ki=new ui.World,ki.gravity.set(0,-9.82*20,0),ki.broadphase=new ui.NaiveBroadphase,ki.solver.iterations=16,dn.setWorld(ki);let c=new ui.Body({mass:0,shape:new ui.Plane,material:dn.floorBodyMaterial});c.quaternion.setFromAxisAngle(new ui.Vec3(1,0,0),-Math.PI/2),ki.add(c);let h=new ui.Body({mass:0,shape:new ui.Plane,material:dn.floorBodyMaterial});h.quaternion.setFromAxisAngle(new ui.Vec3(0,1,0),-Math.PI/2),h.position.set(17,0,0),ki.add(h);let u=new ui.Body({mass:0,shape:new ui.Plane,material:dn.floorBodyMaterial});u.quaternion.setFromAxisAngle(new ui.Vec3(0,1,0),-Math.PI),u.position.set(0,0,10),ki.add(u);const f=new wc({size:1.5,backColor:"#000",fontColor:"#ffd582"});$r.add(f.getObject()),kn.push(f);function d(){for(var p=[],g=0;g<kn.length;g++){let v=Math.random()*20;kn[g].getObject().position.x=-15-g%3*1.5,kn[g].getObject().position.y=2+Math.floor(g/3)*1.5,kn[g].getObject().position.z=-15+g%3*1.5,kn[g].getObject().quaternion.x=(Math.random()*90-45)*Math.PI/180,kn[g].getObject().quaternion.z=(Math.random()*90-45)*Math.PI/180,kn[g].updateBodyFromMesh();let m=Math.random()*5;kn[g].getObject().body.velocity.set(25+m,40+v,15+m),kn[g].getObject().body.angularVelocity.set(20*Math.random()-10,20*Math.random()-10,20*Math.random()-10),p.push({dice:kn[g],value:g+1})}dn.prepareValues(p)}document.querySelector("#ThreeJS").addEventListener("click",d),requestAnimationFrame(kx)}function kx(){t2(),i2(),n2(),requestAnimationFrame(kx)}function t2(){ki.step(1/60);for(var t in kn)kn[t].updateMeshFromBody()}function n2(){Hx.update(),Ws.update()}function i2(){Yr.render($r,Xa)}});export default r2();
